openapi: 3.0.1
info:
  title: Core API
  description: 'Marqeta''s Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.'
  termsOfService: https://www.marqeta.com/api-terms
  contact:
    name: Marqeta
    email: support@marqeta.com
  version: 3.0.17
servers:
  - url: /v3
paths:
  /acceptedcountries:
    get:
      tags:
        - Accepted Countries
      summary: List accepted countries objects
      description: Retrieve a list of `acceptedcountries` objects.
      operationId: getAcceptedcountries
      parameters:
        - name: count
          in: query
          description: Number of accepted countries objects to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: name
          in: query
          description: Name of the accepted countries object.
          style: form
          schema:
            type: string
        - name: whitelist
          in: query
          description: Specifies if the accepted countries object is an allow list.
          style: form
          schema:
            type: boolean
        - name: search_type
          in: query
          description: Specifies the type of search you want to perform.
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\n\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\n\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\n\nPrefix the field name with a hyphen (`-`) to sort in descending order.\n\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedCountriesListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/acceptedcountries/{token}':
    get:
      tags:
        - Accepted Countries
      summary: Retrieve an accepted countries object
      description: "Retrieve a specific `acceptedcountries` object.\nSend a `GET` request to the `/acceptedcountries` endpoint to retrieve existing `acceptedcountries` object tokens."
      operationId: getAcceptedcountriesToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the accepted countries object.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accepted_countries_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /accountholdergroups:
    get:
      tags:
        - Account Holder Groups
      summary: List account holder groups
      description: Use this endpoint to return an array of all account holder groups.
      operationId: getAccountholdergroups
      parameters:
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHolderGroupListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Account Holder Groups
      summary: Create account holder group
      description: Use this endpoint to create an account holder group.
      operationId: postAccountholdergroups
      requestBody:
        description: Account holder group object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account_holder_group_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_holder_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/accountholdergroups/{token}':
    get:
      tags:
        - Account Holder Groups
      summary: Retrieve account holder group
      description: Use this endpoint to retrieve a specific account holder group.
      operationId: getAccountholdergroupsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the account holder group.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_holder_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Account Holder Groups
      summary: Update account holder group
      description: "Use this endpoint to update a specific account holder group.\nOnly values of parameters in the request are modified; all others are left unchanged.\n\nTo update a specific account holder group, send a `PUT` request to the `/accountholdergroups/{token}` endpoint.\nUse the `token` path parameter to specify the account holder group to update.\nInclude the account holder group details to update in link:http://json.org[JSON, window=\"_blank\"] format in the body of the request.\n[NOTE]\nWhile you can update account holder groups that you create, the default group is restricted and requires special permissions to update."
      operationId: putAccountholdergroupsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the account holder group.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Account holder group update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account_holder_group_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_holder_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /accounts:
    get:
      tags:
        - Credit Accounts
      summary: List accounts
      description: "Retrieve an array of credit accounts.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: listAccounts
      parameters:
        - name: card_token
          in: query
          description: Unique identifier of the credit card associated with the account.
          style: form
          schema:
            type: string
            x-allowableValues: Existing card token
        - name: count
          in: query
          description: Number of credit account resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Credit Accounts
      summary: Create account
      description: Create a new credit account.
      operationId: createCreditAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}':
    get:
      tags:
        - Credit Accounts
      summary: Retrieve account
      description: Retrieve a credit account.
      operationId: retrieveAccount
      parameters:
        - name: effective_fee_schedule_only
          in: query
          description: Display the effective fee schedule only.
          style: form
          schema:
            type: boolean
            x-allowableValues:
              - true
              - false
        - name: account_token
          in: path
          description: "Unique identifier of the credit account to retrieve.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      responses:
        '200':
          description: A JSON object containing account information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    put:
      tags:
        - Credit Accounts
      summary: Update account
      description: Update a credit account.
      operationId: updateAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account to update.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateReq'
        required: true
      responses:
        '200':
          description: A JSON object containing account information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/accounttransitions':
    get:
      tags:
        - Account Transitions
      summary: List account transitions
      description: "Retrieve an array of transitions on a credit account.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: listAccountTransitions
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve transitions.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: count
          in: query
          description: Number of account transition resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`."
          style: form
          schema:
            enum:
              - createdTime
              - '-createdTime'
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: A list of JSON objects containing paginated account transitions information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTransitionsPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Account Transitions
      summary: Transition account status
      description: Transition a credit account to a new status.
      operationId: transitionAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to transition a status.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTransitionReq'
        required: true
      responses:
        '201':
          description: A JSON object containing transition information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/accounttransitions/{token}':
    get:
      tags:
        - Account Transitions
      summary: Retrieve account transition
      description: Retrieve a transition for a credit account.
      operationId: getAccountTransition
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve a transition.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: token
          in: path
          description: "Unique identifier of the account transition you want to retrieve.\n\nSend a `GET` request to `/credit/accounts/{account_token}/accounttransitions` to retrieve existing account transition tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account transition token
      responses:
        '200':
          description: A JSON object containing account transition record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/adjustments':
    get:
      tags:
        - Adjustments
      summary: List account adjustments
      description: "Retrieve an array of adjustments for a credit account.\n\nThis endpoint supports <</core-api/sorting-and-pagination, pagination>>."
      operationId: getAdjustmentsByAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve adjustments.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: count
          in: query
          description: Number of account adjustment resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdjustmentPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Adjustments
      summary: Create account adjustment
      description: Create an adjustment for an existing credit account.
      operationId: createAdjustmentForAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to create an adjustment.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAdjustmentReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdjustmentResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/accounts/{account_token}/adjustments/{adjustment_token}':
    get:
      tags:
        - Adjustments
      summary: Retrieve account adjustment
      description: Retrieve an adjustment for a credit account.
      operationId: retrieveAdjustment
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve an adjustment.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: adjustment_token
          in: path
          description: "Unique identifier of the adjustment to retrieve.\n\nSend a `GET` request to `/credit/accounts/{account_token}/adjustments` to retrieve existing account adjustment tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing adjustment token
      responses:
        '200':
          description: A JSON object containing account_adjustment information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAdjustmentResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/accounts/{account_token}/billingcycle':
    get:
      tags:
        - Account
      summary: Get billing cycle by account token
      description: Retrieves the billing cycle details for a specific account token.
      operationId: retrieveBillingCycleForAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve delinquency state details.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBillingCycleResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/accounts/{account_token}/cards':
    get:
      tags:
        - Account Cards
      summary: List account cards
      description: "Retrieve an array of cards for a credit account.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: getCardsByAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to retrieve credit cards.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: status
          in: query
          description: Status of the credit cards to retreive.
          style: form
          schema:
            type: string
            x-allowableValues: Valid credit card status
        - name: count
          in: query
          description: Number of credit card resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCardsPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Account Cards
      summary: Create account card
      description: "Create a credit card for an existing credit account.\n\n[NOTE]\nYou can ship cards to an address different from the <</core-api/users, user>> address.\nAfter creating a card, send a `PUT` request to the `/cards` endpoint with the new address in the `fulfillment.shipping` object.\nFor more, see <</core-api/cards#putCardsToken, Update card>>."
      operationId: createCardForAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to create a credit card.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardCreateReq'
        required: true
      responses:
        '201':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/cards/{card_token}':
    get:
      tags:
        - Account Cards
      summary: Retrieve account card
      description: Retrieve a credit card for a credit account.
      operationId: getCardByAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to retrieve a credit card.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: card_token
          in: path
          description: "Unique identifier of the credit card to retrieve.\n\nSend a `GET` request to `/credit/accounts/{account_token}/cards` to retrieve existing credit card tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing card token
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/creditbalancerefunds':
    post:
      tags:
        - Balance Refunds
      summary: Create balance refund
      description: 'Create a new balance refund, which can be issued to the account holder if their credit account balance is negative.'
      operationId: createBalanceRefund
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to create a balance refund.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreditBalanceRefundReq'
        required: true
      responses:
        '201':
          description: Expected response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCreditBalanceRefundResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/delinquencystate':
    get:
      tags:
        - Delinquency
      summary: Retrieve delinquency state
      description: "Retrieve details of the current delinquency state of a credit account.\n\nAn account is delinquent when it is past due on payments and current when it is up to date on payments."
      operationId: retrieveDelinquencyState
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve delinquency state details.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelinquencyStateResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/delinquencystate/transitions':
    get:
      tags:
        - Delinquency
      summary: List delinquency state transitions
      description: "Retrieve an array of delinquency state transitions for a credit account.\n\nA delinquency state transition occurs when an account's delinquency state transitions between delinquent and current.\nAn account becomes delinquent when it falls behind on payments and becomes current when payments are made up to date."
      operationId: retrieveDelinquencyTransitions
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account whose delinquency state transitions you want to retrieve.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `impactTime`, and not by the field names appearing in response bodies such as `impact_time`."
          style: form
          schema:
            enum:
              - impactTime
              - '-impactTime'
            type: string
            default: '-impactTime'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelinquencyTransitionsResponsePage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/delinquencystate/transitions/{delinquency_transition_token}':
    get:
      tags:
        - Delinquency
      summary: Retrieve delinquency state transition
      description: "Retrieve a specific delinquency state transition on a credit account.\n\nA delinquency state transition occurs when an account's delinquency state transitions between delinquent and current.\nAn account becomes delinquent when it falls behind on payments and becomes current when payments are made up to date."
      operationId: retrieveDelinquencyTransition
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account whose delinquency state transition you want to retrieve.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: delinquency_transition_token
          in: path
          description: Unique identifier of the delinquency state transition.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing delinquency transition token
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelinquencyTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/disputes':
    get:
      tags:
        - Credit Account Disputes
      summary: List account disputes
      description: "Retrieve an array of disputes on a credit account.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: getDisputesByAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to retrieve the disputes.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: count
          in: query
          description: Number of disputes resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputeResponsePage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Credit Account Disputes
      summary: Create account dispute
      description: Create a dispute of a journal entry on a credit account.
      operationId: createDisputeForAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to create a dispute.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisputeCreateReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputeResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/accounts/{account_token}/disputes/{dispute_token}':
    get:
      tags:
        - Credit Account Disputes
      summary: Retrieve account dispute
      description: Retrieve a dispute from a credit account.
      operationId: retrieveDispute
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account from which to retrieve a dispute.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: dispute_token
          in: path
          description: "Unique identifier of the dispute to retrieve.\n\nSend a `GET` request to `/credit/accounts/{account_token}/disputes` to retrieve existing dispute tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing dispute token
      responses:
        '200':
          description: Transaction Dispute object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputeResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/disputes/{dispute_token}/transitions':
    post:
      tags:
        - Credit Account Disputes
      summary: Update account dispute
      description: Update the amount or status of a dispute on a credit account.
      operationId: transitionDispute
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account from which to update a dispute.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: dispute_token
          in: path
          description: "Unique identifier of the dispute to update.\n\nSend a `GET` request to `/credit/accounts/{account_token}/disputes` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing dispute token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisputeTransitionReq'
        required: true
      responses:
        '201':
          description: Transitioned transaction dispute object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputeTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/documents':
    get:
      tags:
        - Account Documents
      summary: List documents
      description: Retrieve an array of documents on a credit account.
      operationId: getAccountDocuments
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to get documents.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Account documents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDocumentsResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/documents/{document_type}':
    get:
      tags:
        - Account Documents
      summary: Retrieve document
      description: Retrieve a specific type of document on a credit account.
      operationId: getDocumentByAccountAndType
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to retrieve a specific type of document.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: document_type
          in: path
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountAndDocumentAssetType'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDocumentResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/documents/{document_type}/history':
    get:
      tags:
        - Account Documents
      summary: Retrieve document history
      description: Retrieve the history of a specific type of document on a credit account.
      operationId: getDocumentHistoryByAccountAndType
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to get document history.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: document_type
          in: path
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/AccountAndDocumentAssetType'
        - name: count
          in: query
          description: Number of account document resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `effectiveDate`, and not by the field names appearing in response bodies such as `effective_date`."
          style: form
          schema:
            enum:
              - effectiveDate
              - '-effectiveDate'
            type: string
            default: '-effectiveDate'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDocumentsPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/journalentries':
    get:
      tags:
        - Journal Entries
      summary: List account journal entries
      description: "Retrieve an array of journal entries on a credit account.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>> and <</core-api/object-expansion, object expansion>>."
      operationId: ListAccountJournalEntries
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve journal entries.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: count
          in: query
          description: Number of journal entry resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: start_date
          in: query
          description: Starting date of the date range from which to return journal entries.
          style: form
          schema:
            type: string
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
        - name: end_date
          in: query
          description: Ending date of the date range from which to return journal entries.
          style: form
          schema:
            type: string
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
        - name: start_impact_time
          in: query
          description: Starting `impact_time` of the date range from which to return journal entries.
          style: form
          schema:
            type: string
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
        - name: end_impact_time
          in: query
          description: Ending `impact_time` of the date range from which to return journal entries.
          style: form
          schema:
            type: string
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
        - name: start_created_time
          in: query
          description: Starting `created_date` of the date range from which to return journal entries.
          style: form
          schema:
            type: string
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
        - name: end_created_time
          in: query
          description: Ending `created_date` of the date range from which to return journal entries.
          style: form
          schema:
            type: string
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
        - name: statuses
          in: query
          description: Array of statuses by which to filter journal entries.
          style: form
          schema:
            type: array
            items:
              enum:
                - POSTED
                - PENDING
              type: string
        - name: groups
          in: query
          description: "Array of groups by which to filter journal entries.\n\nTo return all journal entry groups, do not include this query parameter."
          style: form
          schema:
            type: array
            items:
              enum:
                - PURCHASE
                - ORIGINAL_CREDIT
                - FEE
                - BALANCE_REFUND
                - PAYMENT
                - INTEREST
                - DISPUTE
                - REFUND
                - ADJUSTMENT
                - REWARD
              type: string
        - name: expand
          in: query
          description: Embeds the specified object into the response.
          style: form
          schema:
            type: array
            items:
              enum:
                - detailObject
                - originalCurrency
              type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`."
          style: form
          schema:
            enum:
              - createdTime
              - '-createdTime'
              - impactTime
              - '-impactTime'
            type: string
            default: '-createdTime'
        - name: card_tokens
          in: query
          description: "Array of card tokens by which to filter journal entries.\nReturns journal entries associated with the specified card tokens.\n\nSend a `GET` request to `/credit/accounts/{account_token}/cards/` to retrieve existing card tokens."
          style: form
          schema:
            type: array
            items:
              type: string
            x-allowableValues: Existing card token
        - name: user_tokens
          in: query
          description: "Array of user tokens by which to filter journal entries.\nReturns journal entries associated with the specified user tokens.\n\nSend a `GET` request to `/users` to retrieve existing user tokens."
          style: form
          schema:
            type: array
            items:
              type: string
            x-allowableValues: Existing user token
        - name: types
          in: query
          description: "Array of <</core-api/event-types#_credit_journal_entry_events, event types>> by which to filter journal entries.\n\nTo return all event types, do not include this query parameter."
          style: form
          schema:
            type: array
            items:
              enum:
                - authorization
                - authorization.advice
                - authorization.incremental
                - authorization.reversal
                - authorization.reversal.issuerexpiration
                - authorization.clearing
                - refund
                - refund.authorization
                - refund.authorization.advice
                - refund.authorization.reversal
                - refund.authorization.clearing
                - refund.authorization.reversal.issuerexpiration
                - originalcredit.authorization
                - originalcredit.authorization.clearing
                - originalcredit.authorization.reversal
                - originalcredit.authpluscapture
                - originalcredit.authpluscapture.reversal
                - originalcredit.authorization.reversal.issuerexpiration
                - account.balancerefund
                - account.reward.cashback
                - account.reward.auto.cashback
                - account.reward.auto.cashback.reversal
                - account.payment
                - account.payment.completed
                - account.payment.returned
                - account.payment.canceled
                - account.payment.refunded
                - account.payment.completed.hold.released
                - account.payment.completed.hold
                - account.interest
                - account.fee.payment.late
                - account.fee.payment.returned
                - account.fee.interest.minimum
                - account.dispute
                - account.dispute.reversal
                - account.dispute.won
                - account.dispute.lost
                - account.dispute.lost.graceperiod
                - account.adjustment
                - account.adjustment.purchase
                - account.adjustment.fee
                - account.adjustment.interest
                - account.adjustment.reward
                - pindebit
                - pindebit.authorization.clearing
                - pindebit.refund
              type: string
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntriesPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/journalentries/{journal_entry_token}':
    get:
      tags:
        - Journal Entries
      summary: Retrieve account journal entry
      description: Retrieve a journal entry for a credit account.
      operationId: getAccountJournalEntry
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve journal entries.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: journal_entry_token
          in: path
          description: "Unique identifier of the journal entry you want to retrieve.\n\nSend a `GET` request to `/credit/accounts/{account_token}/journalentries` to retrieve existing journal entry tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing journal entry token
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntry'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/ledgerentries':
    get:
      tags:
        - Ledger Entries
      summary: List account ledger entries
      description: "Retrieve an array of ledger entries on a credit account.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>> and <</core-api/object-expansion, object expansion>>."
      operationId: ListAccountLedgerEntries
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve ledger entries.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: count
          in: query
          description: Number of ledger entry resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: start_date
          in: query
          description: Starting date of the date range from which to return ledger entries.
          style: form
          schema:
            type: string
            example: '2024-01-01'
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
        - name: end_date
          in: query
          description: Ending date of the date range from which to return ledger entries.
          style: form
          schema:
            type: string
            example: '2024-01-01'
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
        - name: statuses
          in: query
          description: Array of statuses by which to filter ledger entries.
          style: form
          schema:
            type: array
            items:
              type: string
            x-allowableValues: Valid ledger entry status
        - name: description
          in: query
          description: Description of the ledger entries to return.
          style: form
          schema:
            type: string
            x-allowableValues: 255 char max
        - name: groups
          in: query
          description: "Array of groups by which to filter ledger entries.\n\nTo return all ledger entry groups, do not include this query parameter."
          style: form
          schema:
            type: array
            items:
              type: string
            x-allowableValues: Valid ledger entry group
        - name: amount
          in: query
          description: Number of ledger entries to return.
          style: form
          schema:
            type: number
            x-allowableValues: Any integer
        - name: expand
          in: query
          description: Embeds the specified object into the response.
          style: form
          schema:
            type: array
            items:
              enum:
                - detailObject
                - originalCurrency
              type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`."
          style: form
          schema:
            enum:
              - createdTime
              - '-createdTime'
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerEntriesPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: true
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/ledgerentries/{ledger_entry_token}':
    get:
      tags:
        - Ledger Entries
      summary: Retrieve account ledger entry
      description: Retrieve a ledger entry for a credit account.
      operationId: getAccountLedgerEntry
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve ledger entries.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: ledger_entry_token
          in: path
          description: "Unique identifier of the ledger entry you want to retrieve.\n\nSend a `GET` request to `/credit/accounts/{account_token}/ledgerentries` to retrieve existing ledger entry tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing ledger entry token
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerEntry'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/payments':
    get:
      tags:
        - Payments
      summary: List account payments
      description: "Retrieve an array of payments on a credit account.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: listPayments
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to retrieve payments.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: start_date
          in: query
          description: Beginning of the date range of the payments to return.
          style: form
          schema:
            type: string
            format: date
            example: '2024-01-01'
        - name: end_date
          in: query
          description: End of the date range of the payments to return.
          style: form
          schema:
            type: string
            format: date
            example: '2024-02-01'
        - name: count
          in: query
          description: Number of account payments resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
        - name: statuses
          in: query
          description: Array of statuses by which to filter payments.
          style: form
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PaymentStatus'
      responses:
        '200':
          description: Paginated list of payments for the given token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Payments
      summary: Create account payment
      description: Create a new payment to apply toward a credit account's balance.
      operationId: createPayment
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to create a payment.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreateReq'
        required: true
      responses:
        '201':
          description: Newly created payment or existing payment with provided payment token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/payments/{payment_token}':
    get:
      tags:
        - Payments
      summary: Retrieve account payment
      description: Retrieve a payment for a credit account.
      operationId: retrievePayment
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to retrieve a payment.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: payment_token
          in: path
          description: "Unique identifier of the payment to retrieve.\n\nSend a `GET` request to `/credit/accounts/{token}/payments` to retrieve existing payment tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing payment token
      responses:
        '200':
          description: Payment object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/payments/{payment_token}/releasehold':
    post:
      tags:
        - Payments
      summary: Release payment hold
      description: Manually release a payment hold on a credit account.
      operationId: releasePaymentHold
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account on which a payment hold is being released.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: payment_token
          in: path
          description: "Unique identifier of the payment currently on hold.\n\nSend a `GET` request to `/credit/accounts/{account_token}/payments` to retrieve existing payment tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing payment token
      responses:
        '200':
          description: Expected response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/payments/{payment_token}/transitions':
    post:
      tags:
        - Payments
      summary: Transition account payment status
      description: Transition a credit account payment's status to a new status.
      operationId: transitionPayment
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to transition a payment status.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: payment_token
          in: path
          description: "Unique identifier of the payment whose status you want to transition.\n\nSend a `GET` request to `/credit/accounts/{account_token}/payments` endpoint to retrieve existing payment tokens for a given account."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing payment token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransitionReq'
        required: true
      responses:
        '201':
          description: Payment Transition Response object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/paymentschedules':
    get:
      tags:
        - Payment Schedules
      summary: List payment schedules
      description: "Retrieve an array of payment schedules on a specific credit account.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: retrievePaymentSchedules
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve payment schedules.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: statuses
          in: query
          description: Status of the payment schedules to retrieve.
          style: form
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PaymentScheduleStatus'
        - name: frequency
          in: query
          description: Frequency of the payment schedules to retrieve.
          style: form
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PaymentScheduleFrequency'
        - name: count
          in: query
          description: Number of payment schedule resources to retrieve.
          style: form
          schema:
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSchedulePage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Payment Schedules
      summary: Create payment schedule
      description: 'Create a new payment schedule, either one-time or recurring.'
      operationId: createPaymentSchedule
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to create a payment schedule.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentScheduleCreateReq'
        required: true
      responses:
        '201':
          description: Newly created payment schedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentScheduleResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/paymentschedules/{payment_schedule_token}':
    get:
      tags:
        - Payment Schedules
      summary: Retrieve payment schedule
      description: Retrieve a single payment schedule on a specific credit account.
      operationId: retrievePaymentSchedule
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve a payment schedule.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: payment_schedule_token
          in: path
          description: "Unique identifier of the payment schedule that you want to retrieve.\n\nSend a `GET` request to `/credit/accounts/{account_token}/paymentschedules` to retrieve existing payment schedule tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing payment schedule token
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentScheduleResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions':
    get:
      tags:
        - Payment Schedules
      summary: Retrieve payment schedule transitions
      description: Retrieve an array of payment schedule transitions on a specific credit account.
      operationId: retrievePaymentScheduleTransitions
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve payment schedule transitions.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: payment_schedule_token
          in: path
          description: "Unique identifier of the payment schedule for which you want to retrieve transitions.\n\nSend a `GET` request to `/credit/accounts/{account_token}/paymentschedules` to retrieve existing payment schedule tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing payment schedule token
        - name: count
          in: query
          description: Number of payment schedule resources to retrieve.
          style: form
          schema:
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`."
          style: form
          schema:
            enum:
              - createdTime
              - '-createdTime'
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentScheduleTransitionPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Payment Schedules
      summary: Create payment schedule transition
      description: Transition a payment schedule to a new status.
      operationId: createPaymentScheduleTransition
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account on which to transition a payment schedule.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: payment_schedule_token
          in: path
          description: "Unique identifier of the payment schedule whose status is to transition.\n\nSend a `GET` request to `/credit/accounts/{account_token}/paymentschedules` to retrieve existing payment schedule tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing payment schedule token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentScheduleTransitionCreateReq'
        required: true
      responses:
        '201':
          description: Newly created payment schedule transition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentScheduleTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions/{token}':
    get:
      tags:
        - Payment Schedules
      summary: Retrieve payment schedule transition
      description: Retrieve a single payment schedule transition on a specific credit account.
      operationId: retrievePaymentScheduleTransition
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve a payment schedule transition.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: payment_schedule_token
          in: path
          description: "Unique identifier of the payment schedule you want to retrieve.\n\nSend a `GET` request to `/credit/accounts/{account_token}/paymentschedules` to retrieve existing payment schedule tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing payment schedule token
        - name: token
          in: path
          description: "Unique identifier of the payment schedule transition you want to retrieve.\n\nSend a `GET` request to `/credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions` to retrieve existing payment schedule transition tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing payment schedule transition token
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentScheduleTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/periodicfeeschedules':
    get:
      tags:
        - Account
      summary: Get all active and upcoming periodic fee schedules of an account
      description: Get all active and upcoming periodic fee schedules of an account
      operationId: getPeriodicFeeSchedules
      parameters:
        - name: account_token
          in: path
          description: account token
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of periodic fee schedule resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodicFeeSchedulePage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/rewards':
    post:
      tags:
        - Account Rewards
      summary: Create account reward
      description: Create a reward for an existing credit account.
      operationId: createReward
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to create a reward.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RewardCreateReq'
        required: true
      responses:
        '201':
          description: Newly created reward
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements':
    get:
      tags:
        - Statements
      summary: List account statement summaries
      description: "Retrieve an array of statement summaries tied to a cardholder's account.\n\nThe statement summary, which is a summary of account activity on a statement, provides account holders with a synopsis of activity that occurred on the account during a specified billing cycle.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.\nYou can use optional query parameters to return a statement based on its exact opening or closing date, or a statement whose closing date falls within a range of dates."
      operationId: getStatementSummariesByAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve statement summaries.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: start_date
          in: query
          description: "Returns statements with a matching opening date.\n\nIf both `start_date` and `end_date` are specified, statements whose closing date falls between the start and end dates are returned."
          style: form
          schema:
            type: string
            format: date-time
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
        - name: end_date
          in: query
          description: "Returns statements with a matching closing date.\n\nIf both `start_date` and `end_date` are specified, statements whose closing date falls between the start and end dates are returned."
          style: form
          schema:
            type: string
            format: date-time
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
        - name: count
          in: query
          description: Number of account statement resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`."
          style: form
          schema:
            enum:
              - createdTime
              - '-createdTime'
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: A JSON object containing a list of Statement Summaries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementSummaryPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements/files':
    get:
      tags:
        - Statements
      summary: List files for an account
      description: Retrieve an array of statement files for a specific credit account.
      operationId: getStatementFilesByAccount
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to retrieve statement files.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: start_date
          in: query
          description: Start date of the date range for which to return statement files.
          style: form
          schema:
            type: string
            format: date-time
            example: '2024-01-01T00:00:00.0000000+00:00'
        - name: end_date
          in: query
          description: End date of the date range for which to return statement files.
          style: form
          schema:
            type: string
            format: date-time
            example: '2024-03-01T03:59:59.0000000+00:00'
        - name: count
          in: query
          description: Number of statement file resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`."
          style: form
          schema:
            enum:
              - createdTime
              - '-createdTime'
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: A JSON object containing a list of statement files.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementFilePage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements/{statement_summary_token}':
    get:
      tags:
        - Statements
      summary: Retrieve account statement summary
      description: Retrieve a statement summary for a credit account.
      operationId: retrieveStatementSummary
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve a statement summary.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: statement_summary_token
          in: path
          description: "Unique identifier of the statement summary to retrieve.\n\nSend a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing statement summary token
      responses:
        '200':
          description: A JSON object containing statement_summary information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementSummary'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements/{statement_summary_token}/files':
    get:
      tags:
        - Statements
      summary: List files for a statement summary
      description: Retrieve an array of statement files for a specific statement summary.
      operationId: retrieveStatementFiles
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to retrieve statement files for a statement summary.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: statement_summary_token
          in: path
          description: "Unique identifier of the statement summary whose statement files you want to retrieve.\n\nSend a `GET` request to `/credit/accounts/{token}/statements` to retrieve existing statement summary tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing statement summary token
        - name: count
          in: query
          description: Number of statement files to return.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index from which to begin returning files.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementFilePage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements/{statement_summary_token}/interestcharges':
    get:
      tags:
        - Statements
      summary: Retrieve account statement interest charges
      description: Retrieve the interest charges on a credit account's statement summary.
      operationId: retrieveStatementInterestCharges
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve the statement interest charges.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: statement_summary_token
          in: path
          description: "Unique identifier of the statement summary from which to retrieve the interest charges.\n\nSend a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing statement summary token
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementInterestChargesPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements/{statement_summary_token}/journalentries':
    get:
      tags:
        - Statements
      summary: List account statement journal entries
      description: "Retrieve an array of journal entries on a credit account's statement summary.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting>>."
      operationId: listStatementJournalEntries
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to retrieve the statement journal entries.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: statement_summary_token
          in: path
          description: "Unique identifier of the statement summary from which to retrieve journal entries.\n\nSend a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing statement summary token
        - name: count
          in: query
          description: Number of journal entry resources to return.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: expand
          in: query
          description: Embeds the specified object into the response.
          style: form
          schema:
            type: array
            items:
              enum:
                - detailObject
                - originalCurrency
              type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: lastModifiedTime
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntriesPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements/{statement_summary_token}/ledgerentries':
    get:
      tags:
        - Statements
      summary: List account statement ledger entries
      description: "[IMPORTANT]\nThis feature is being deprecated and replaced by statement journal entries.\nTo list statement journal entries, see <</core-api/credit-account-journal-entries#listStatementJournalEntries, List account statement journal entries>>.\n\nRetrieve an array of ledger entries on a credit account's statement summary.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting>>."
      operationId: listStatementLedgerEntries
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which to retrieve the statement ledger entries.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: statement_summary_token
          in: path
          description: "Unique identifier of the statement summary from which to retrieve ledger entries.\n\nSend a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing statement summary token
        - name: expand
          in: query
          description: Embeds the specified object into the response.
          style: form
          schema:
            type: array
            items:
              enum:
                - detailObject
                - originalCurrency
              type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: lastModifiedTime
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LedgerEntry'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements/{statement_summary_token}/paymentinfo':
    get:
      tags:
        - Statements
      summary: Retrieve account statement payment information
      description: Retrieve the payment information on a credit account's statement summary.
      operationId: retrieveStatementPaymentInfo
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve the statement payment information.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: statement_summary_token
          in: path
          description: "Unique identifier of the statement summary from which to retrieve the payment information.\n\nSend a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing statement summary token
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementPaymentInfo'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements/{statement_summary_token}/paymentreminders/':
    get:
      tags:
        - Statements
      summary: List payment reminders by statement summary
      description: Retrieve an array of payment reminder details for a specific statement summary token.
      operationId: getPaymentRemindersByStatementSummary
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve the statement payment information.\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: statement_summary_token
          in: path
          description: "Unique identifier of the statement summary from which to retrieve the payment information.\nSend a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing statement summary token
        - name: count
          in: query
          description: Number of payment reminder resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 10
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n*NOTE:*\nYou must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`."
          style: form
          schema:
            enum:
              - createdTime
              - '-createdTime'
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReminderPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements/{statement_summary_token}/paymentreminders/{token}':
    get:
      tags:
        - Statements
      summary: Get payment reminder
      description: Retrieve a single payment reminder on a specific statement summary
      operationId: getPaymentReminder
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account for which you want to retrieve the statement payment reminder.\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: statement_summary_token
          in: path
          description: "Unique identifier of the statement summary for which you want to retrieve the statement payment reminder.\nSend a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing statement summary token
        - name: token
          in: path
          description: "Unique identifier of the payment reminder you want to retrieve.\nSend a `GET` request to `/credit/accounts/{account_token}/statements/{statement_summary_token}/paymentreminders/{token}` to retrieve existing payment reminder tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing payment reminder token
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReminderResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements/{statement_summary_token}/rewards':
    get:
      tags:
        - Statements
      summary: Retrieve account statement rewards
      description: Retrieve the rewards on a credit account's statement summary.
      operationId: retrieveStatementReward
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account from which to retrieve statement rewards.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: statement_summary_token
          in: path
          description: "Unique identifier of the statement summary from which to retrieve rewards.\n\nSend a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing statement summary token
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementReward'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/accounts/{account_token}/statements/{statement_summary_token}/yeartodate':
    get:
      tags:
        - Statements
      summary: Retrieve account statement year-to-date totals
      description: Retrieve the year-to-date fee and interest totals on a credit account's statement summary.
      operationId: retrieveYearToDateForStatementSummary
      parameters:
        - name: account_token
          in: path
          description: "Unique identifier of the credit account from which to retrieve statement year-to-date totals.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: statement_summary_token
          in: path
          description: "Unique identifier of the statement summary from which to retrieve year-to-date totals.\n\nSend a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing statement summary token
      responses:
        '200':
          description: A JSON object containing year-to-date information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YearToDate'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /admin/replayfailedstatements:
    post:
      tags:
        - Admin
      summary: Replays all failed statement from statement error processing table
      description: Replays all failed statement from statement error processing table
      operationId: replayFailedStatements
      responses:
        '200':
          description: Replays all failed statements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/admin/replayfailedstatements/{short_code}':
    post:
      tags:
        - Admin
      summary: Replays all failed statements by short code from statement error processing table
      description: Replays all failed statements by short code from statement error processing table
      operationId: replayFailedStatementsByShortCode
      parameters:
        - name: short_code
          in: path
          description: Short code of the program
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Replays all failed statements by shortcode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /admin/scheduleStatements:
    post:
      tags:
        - Admin
      summary: Schedules statements for applicable accounts
      description: Schedules statements for applicable accounts
      operationId: scheduleStatements
      responses:
        '200':
          description: Schedules statements for applicable accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/admin/{short_code}/replayfailedstatement/{account_token}':
    post:
      tags:
        - Admin
      summary: Replays single failed statement by short code  and account token from statement error processing table
      description: Creates and enables a feature flag for a specified program short code
      operationId: replaySingleFailedStatement
      parameters:
        - name: short_code
          in: path
          description: Short code of the program
          required: true
          style: simple
          schema:
            type: string
        - name: account_token
          in: path
          description: account token of the account
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Method unimplemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/admin/{short_code}/retryachpayments':
    post:
      tags:
        - Admin
      summary: Create a new ACHO ACH transfer
      description: Create a new ACHO ACH transfer for payment who's current transfer has failed and is in ERROR state.
      operationId: retryAchPayment
      parameters:
        - name: short_code
          in: path
          description: Short code of the program
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Create a new ACHO ACH transfer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryAchPaymentReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryAchPaymentReq'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /authcontrols:
    get:
      tags:
        - Authorization Controls
      summary: List authorization controls
      description: "List all authorization controls associated with a specific user or card product, or list all authorization controls defined in your program.\n\nInclude either a `user` or a `card_product` query parameter to indicate the user or card product whose associated authorization controls you want to retrieve (do not include both).\n\nTo list all authorization controls for your program, omit the `user` and `card_product` query parameters from your request."
      operationId: getAuthcontrols
      parameters:
        - name: card_product
          in: query
          description: "Unique identifier of the card product whose associated authorization controls you want to retrieve.\n\nEnter the string \"null\" to list authorization controls that are not associated with a card product."
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: "Unique identifier of the user whose associated authorization controls you want to retrieve.\n\nEnter the string \"null\" to list authorization controls that are not associated with a user."
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: The number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthControlListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Authorization Controls
      summary: Create authorization control
      description: "Limit where a user can make transactions to a single merchant or group of merchants.\nIf multiple authorization controls apply to the same user, the limits of all controls are combined."
      operationId: postAuthcontrols
      requestBody:
        description: Auth control object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_control_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /authcontrols/exemptmids:
    get:
      tags:
        - Authorization Controls
      summary: List merchant identifier (MID) exemptions
      description: Retrieve a list of all merchant (MID) exemptions.
      operationId: getAuthcontrolsExemptmids
      parameters:
        - name: card_product
          in: query
          description: "Unique identifier of the card product whose associated MID exemptions you want to retrieve.\n\nEnter the string \"null\" to list MID exemptions that are not associated with a card product."
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: "Unique identifier of the user whose associated MID exemptions you want to retrieve.\n\nEnter the string \"null\" to list MID exemptions that are not associated with a user."
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: The number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthControlExemptMidsListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Authorization Controls
      summary: Create a merchant identifier (MID) exemption
      description: "Exempt an individual merchant from authorization controls by merchant identifier (MID).\nTransactions originating from this MID ignore any otherwise applicable authorization controls.\n\n[NOTE]\nYou can create MID exemptions in your user sandbox.\nHowever, you must work with your Marqeta representative to create MID exemptions in a production environment."
      operationId: postAuthcontrolsExemptmids
      requestBody:
        description: Auth control exempt MID object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_control_exempt_mids_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_control_exempt_mids_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/authcontrols/exemptmids/{token}':
    get:
      tags:
        - Authorization Controls
      summary: Retrieve a merchant identifier (MID) exemption
      description: Retrieve a merchant (MID) exemption.
      operationId: getAuthcontrolsExemptmidsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the authorization control resource.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_control_exempt_mids_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Authorization Controls
      summary: Update a merchant identifier (MID) exemption
      description: Update a merchant identifier exemption.
      operationId: putAuthcontrolsExemptmidsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the authorization control resource.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_control_exempt_mids_update_request'
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/authcontrols/{token}':
    get:
      tags:
        - Authorization Controls
      summary: Retrieve authorization control
      description: Retrieve a specific authorization control.
      operationId: getAuthcontrolsToken
      parameters:
        - name: token
          in: path
          description: "Existing authorization control token.\n\nSend a `GET` request to `/authcontrols` to retrieve authorization control tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Authorization Controls
      summary: Update authorization control
      description: Update a specific authorization control.
      operationId: putAuthcontrolsToken
      parameters:
        - name: token
          in: path
          description: "Existing authorization control token.\n\nSend a `GET` request to `/authcontrols` to retrieve authorization control tokens."
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Auth control object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_control_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /autoreloads:
    get:
      tags:
        - Auto Reload
      summary: List auto reloads
      description: "Use this endpoint to list auto reloads configured for the program or for a specific card product, user, or business.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getAutoreloads
      parameters:
        - name: card_product
          in: query
          description: Unique identifier of the card product whose auto reloads you want to retrieve.
          style: form
          schema:
            type: string
        - name: user_token
          in: query
          description: Unique identifier of the user whose auto reloads you want to retrieve.
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: Unique identifier of the business whose auto reloads you want to retrieve.
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReloadListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Auto Reload
      summary: Create auto reload
      description: Use this endpoint to create an auto reload.
      operationId: postAutoreloads
      requestBody:
        description: Auto reload object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auto_reload_model'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auto_reload_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/autoreloads/{token}':
    get:
      tags:
        - Auto Reload
      summary: Retrieve auto reload
      description: Use this endpoint to retrieve a specific auto reload object.
      operationId: getAutoreloadsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the auto reload.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auto_reload_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Auto Reload
      summary: Update auto reload
      description: "Use this endpoint to update an auto reload.\nOnly values of parameters in the request are modified; all others are left unchanged."
      operationId: putAutoreloadsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the auto reload.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Auto reload object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auto_reload_update_model'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auto_reload_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/balances/{token}':
    get:
      tags:
        - Balances
      summary: Retrieve GPA balances
      description: "Use this endpoint to return general purpose account (GPA) balances for a user or a business.\nThe response object includes a link to balances of related user GPAs."
      operationId: getBalancesToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the user or business for which you want to return GPA balances.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardholder_balances'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /banktransfers/ach:
    get:
      tags:
        - Funding via ACH (Beta)
      summary: List ACH transfers
      description: Retrieve a list of all ACH transfers.
      operationId: getBanktransfersAch
      parameters:
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: user_token
          in: query
          description: Unique identifier of the user resource.
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: Unique identifier of the business resource.
          style: form
          schema:
            type: string
        - name: funding_source_token
          in: query
          description: Unique identifier of the funding source.
          style: form
          schema:
            type: string
        - name: statuses
          in: query
          description: Comma-delimited list of bank transfer statuses.
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: 'Field on which to sort Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`. Prefix the field name with a hyphen (`-`) to sort in descending order. Omit the hyphen to sort in ascending order.'
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: expand
          in: query
          description: "Returns the full funding source object when `fundingsource` is passed.\nOtherwise, returns the funding source token."
          style: form
          schema:
            type: string
        - name: funding_source_type
          in: query
          description: Funding source type to filter.
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransferListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Funding via ACH (Beta)
      summary: Create ACH transfer
      description: Create an ACH transfer that pushes funds to an external account or pulls funds into your program funding account.
      operationId: postBanktransfersAch
      requestBody:
        description: Create bank transfer request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bank_transfer_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_transfer_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /banktransfers/ach/transitions:
    get:
      tags:
        - Funding via ACH (Beta)
      summary: List ACH transfer transitions
      description: Retrieve a list of all ACH transfer transitions for a given ACH transfer.
      operationId: getBanktransfersAchTransitions
      parameters:
        - name: count
          in: query
          description: Number of bank transfer transitions to retrieve.
          style: form
          schema:
            maximum: 50
            type: integer
            format: int32
            default: 5
        - name: token
          in: query
          description: Unique identifier of the bank transfer transition.
          style: form
          schema:
            type: string
        - name: bank_transfer_token
          in: query
          description: Unique identifier of the bank transfer.
          style: form
          schema:
            type: string
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort. Use any field in the resource model, or one of the system fields lastModifiedTime or createdTime.\nPrefix the field name with a hyphen (-) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
        - name: statuses
          in: query
          description: Comma-delimited list of bank transfer states to display.
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransferTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Funding via ACH (Beta)
      summary: Create ACH transfer transition
      description: "Create an ACH transfer transition that updates the `status` of an ACH transfer.\n\nEach ACH transfer has a lifecycle of statuses, as shown in the following diagram:\n\n[#banktransfers-1-image]\nimage::achtransfers1[alt='ACH transfer lifecycle', width=575]\n\n[NOTE]\nYou can create ACH transfer transitions in the sandbox environment.\nHowever, Marqeta transitions ACH transfers through their lifecycle in the production environment."
      operationId: postBanktransfersAchTransitions
      requestBody:
        description: Create bank transfer transition request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bank_transfer_transition_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_transfer_transition_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/banktransfers/ach/{token}':
    get:
      tags:
        - Funding via ACH (Beta)
      summary: Retrieve ACH transfer
      description: Retrieve a specific ACH transfer.
      operationId: getBanktransfersAchToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the bank transfer.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_transfer_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /bulkissuances:
    get:
      tags:
        - Bulk Card Orders
      summary: List bulk card orders
      description: "Use this endpoint to list existing bulk card orders.\n\nThis endpoint supports <</core-api/sorting-and-pagination, pagination and sorting>>."
      operationId: getBulkissuances
      parameters:
        - name: count
          in: query
          description: Number of bulk card orders to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCardOrderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Bulk Card Orders
      summary: Create bulk card order
      description: "Use this endpoint to order physical cards in bulk.\nA new bulk card order creates new cards or users, generally within about a day.\n\nBefore creating a bulk card order, set the `config.fulfillment.bulk_ship` field of the associated card product to `true`.\n\n*To associate all cards with the same user:*\n\n* Set `user_association.single_inventory_user=true`\n* Set `user_association.single_inventory_user_token` equal to the token of an existing user.\n\nThe bulk card order automatically populates the database with the specified card objects.\nValues for the card `token` fields are generated in the format `card-numericPostfix`, where `numericPostfix` is a randomly generated number that is added for each new card that is generated.\n\n*To associate each card with a unique user:*\n\nSet `user_association.single_inventory_user=false`.\nBoth the cards and their associated users are automatically generated.\nValues for the user `token` fields are generated in the format `user-numericPostfix`.\nThe `numericPostfix` values for cards and their associated users match.\nThis value is also printed on the physical cards if the `name_line_1_numeric_postfix` field is set to `true`."
      operationId: postBulkissuances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulk_issuance_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bulk_issuance_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/bulkissuances/{token}':
    get:
      tags:
        - Bulk Card Orders
      summary: Retrieve bulk card order
      description: Use this endpoint to retrieve a specific bulk card order.
      operationId: getBulkissuancesToken
      parameters:
        - name: token
          in: path
          description: The unique identifier of the bulk card order to retrieve.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bulk_issuance_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /bundles:
    get:
      tags:
        - Bundles (Beta)
      summary: List bundles
      description: "Retrieve an array of bundles.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: listBundles
      parameters:
        - name: count
          in: query
          description: Number of bundles resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
        - name: status
          in: query
          description: An array of statuses by which to filter bundles.
          style: form
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BundleResourceStatus'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleResponsePage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Bundles (Beta)
      summary: Create bundle
      description: Create a bundle.
      operationId: createBundle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BundleCreateReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/bundles/{token}':
    get:
      tags:
        - Bundles (Beta)
      summary: Retrieve bundle
      description: Retrieve a specific bundle.
      operationId: retrieveBundle
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the bundle to retrieve.\n\nSend a `GET` request to `/credit/bundles` to retrieve existing  tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing bundle token
        - name: expand_objects
          in: query
          description: "Embeds the associated object of the specified type into the response.\nFor more, see <</core-api/object-expansion, object expansion>>."
          style: form
          schema:
            maxItems: 5
            type: array
            items:
              $ref: '#/components/schemas/PolicyType'
      responses:
        '200':
          description: A JSON object containing bundle information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    put:
      tags:
        - Bundles (Beta)
      summary: Update bundle
      description: 'Update a specific bundle that is not `ACTIVE` or `ARCHIVED`. Bundles are created in a `DRAFT` state, and are still modifiable at this point. Using the transitions endpoint a bundle can be transitioned from `DRAFT`, to `ACTIVE`. Once a bundle is active, it is immutable, and cannot be modified.'
      operationId: updateBundle
      parameters:
        - name: token
          in: path
          description: "Token of the bundle to update.\n\nSend a `GET` request to `/credit/bundles` to retrieve existing  tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing bundle token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BundleUpdateReq'
        required: true
      responses:
        '200':
          description: A JSON object containing bundle information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/bundles/{token}/clone':
    post:
      tags:
        - Bundles (Beta)
      summary: Clone bundle
      description: Create a new bundle based on an existing bundle.
      operationId: cloneBundle
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the bundle to clone.\n\nSend a `GET` request to `/bundles` to retrieve existing bundle tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing bundle token
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/bundles/{token}/lineage':
    get:
      tags:
        - Bundles (Beta)
      summary: List related bundles
      description: "Retrieve an array of related product bundles.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: listRelatedBundles
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the parent product bundle.\n\nSend a `GET` request to `/bundles` to retrieve existing product bundles tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing bundle token
        - name: count
          in: query
          description: Number of related bundle product resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
        - name: status
          in: query
          description: Array of statuses by which to filter bundles.
          style: form
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BundleResourceStatus'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleResponsePage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/bundles/{token}/promote':
    put:
      tags:
        - Bundles (Beta)
      summary: Promote bundle
      description: 'Promote a specific bundle, which replaces the current active bundle and activates the promoted bundle.'
      operationId: promoteBundle
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the bundle to promote.\n\nSend a `GET` request to `/bundles` to retrieve existing bundle tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing bundle token
      responses:
        '200':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/bundles/{token}/transitions':
    post:
      tags:
        - Bundles (Beta)
      summary: Transition a bundle
      description: Transition the status of a specific bundle.
      operationId: transitionBundle
      parameters:
        - name: token
          in: path
          description: "Token of the bundle whose status you want to transition.\n\nSend a `GET` request to `/credit/bundles` to retrieve existing  tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing bundle token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BundleTransitionReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /businesses:
    get:
      tags:
        - Businesses
      summary: List businesses
      description: "To return an array of all businesses, send a `GET` request to the `/businesses` endpoint.\n\nTo narrow your result set to businesses that match a particular legal or fictitious name, include the appropriate parameters from the following query parameters table.\nThis endpoint also supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: getBusinesses
      parameters:
        - name: count
          in: query
          description: Number of business resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: business_name_dba
          in: query
          description: Fictitious or "doing business as (DBA)" name of the business.
          style: form
          schema:
            type: string
        - name: business_name_legal
          in: query
          description: Legal name of the business.
          style: form
          schema:
            type: string
        - name: search_type
          in: query
          description: Specifies the search type for the query.
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCardHolderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Businesses
      summary: Create business
      description: "Create a business.\nThe initial status of a newly created business depends on the <</core-api/kyc-verification, Know Your Customer (KYC) requirements>> of the program or associated <</core-api/account-holder-groups, account holder group>>.\n\n[cols=\"1,1,1,2\"]\n|===\n| KYC Required | Initial Business State | Business Active on Creation | Business Limitations\n\n| Always\n| `UNVERIFIED`\n| No\n| Cannot load funds.\n\n| Conditionally\n| `LIMITED`\n| No\n| Restricted by rules in `accountholdergroups.pre_kyc_controls`.\n\n| Never\n| `ACTIVE`\n| Required\n| None.\n|===\n\nTo change or track the history of a business' status, use the `/businesstransitions` endpoint.\nFor more information on status changes, see <<create_business_transition, Create Business Transition>>.\n\nFor information about configuring the required fields for KYC verification, see <</core-api/kyc-verification#_perform_kyc, Perform KYC>>."
      operationId: postBusinesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business_cardholder'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business_card_holder_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /businesses/lookup:
    post:
      tags:
        - Businesses
      summary: Search businesses
      description: "To search for one or more businesses, send a `POST` request to the `/businesses/lookup` endpoint.\nInclude in the message body any parameters by which you want to query.\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: postBusinessesLookup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DDARequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business_cardholder'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesses/{parent_token}/children':
    get:
      tags:
        - Businesses
      summary: List business children
      description: "To return an array of all child cardholders of a particular business, send a `GET` request to the `/businesses/{parent_token}/children` endpoint.\nInclude the `parent_token` as a URL path parameter.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getBusinessesParenttokenChildren
      parameters:
        - name: count
          in: query
          description: Number of child cardholders to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: parent_token
          in: path
          description: Unique identifier of the parent business.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUserCardHolderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesses/{token}':
    get:
      tags:
        - Businesses
      summary: Retrieve business
      description: "To retrieve a specific business, send a `GET` request to the `/businesses/{token}` endpoint.\nInclude the business `token` path parameter to specify the business to return.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: getBusinessesToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the business resource.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business_card_holder_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Businesses
      summary: Update business
      description: "To update a business, send a `PUT` request to `/businesses/{token}`.\nUse the `token` path parameter to specify the business to update.\nInclude the business details to update in link:http://www.json.org/[JSON, window=\"_blank\"] format in the body of the request.\nOnly values of parameters in the request are modified; all others are left unchanged."
      operationId: putBusinessesToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the business resource
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Business object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business_card_holder_update'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business_cardholder'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesses/{token}/ssn':
    get:
      tags:
        - Businesses
      summary: Retrieve business identification number
      description: "To retrieve the government-issued identification number of a business' proprietor, send a `GET` request to the `/businesses/{token}/ssn` endpoint.\nInclude the `token` path parameter to specify the business whose identification number (SSN, TIN, NIN, SIN) you want to return.\nYou can indicate whether to return the full number or the last four digits only."
      operationId: getBusinessesTokenSsn
      parameters:
        - name: token
          in: path
          description: Unique identifier of the business resource.
          required: true
          style: simple
          schema:
            type: string
        - name: full_ssn
          in: query
          description: "To return the full identification number, set to `true`.\nTo return only the last four digits, set to `false`.\nIf the `proprietor_or_officer.identifications` array contains only the last four digits of the identification number, the `/businesses/{token}/ssn` endpoint will return only the last four digits regardless of the `full_ssn` parameter."
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ssn_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /businesstransitions:
    post:
      tags:
        - Business Transitions
      summary: Create business transition
      description: "This endpoint enables you to change a business' status, depending on your role and the previous status change.\nBy changing a business' status, you can control the business' capabilities and the setting of the `business.active` field.\nThe `business.active` field is `true` if your business is in the `LIMITED` or `ACTIVE` state, and `false` if your business is in the `UNVERIFIED` state.\nYou cannot control the value of the `business.active` field directly.\n\n[cols=\",2a,2a\"]\n|===\n| The business.status field | Description | Business limitations\n\n| Unverified\n| Initial status of a newly created business belonging to an `accountholdergroup` where KYC is always required.\n| Cannot load funds.\n\n*The business.active field:*   +\n`false`\n\n*Allowable transitions:*   +\n`ACTIVE`, `SUSPENDED`, `CLOSED`\n\n| Limited\n| Initial status of a newly created business belonging to an `accountholdergroup` where KYC is conditionally required.\n| Restricted by rules in `accountholdergroups.pre_kyc_controls`.\n\n*The business.active field:*   +\n`true`\n\n*Allowable transitions:*   +\n`ACTIVE`, `SUSPENDED`, `CLOSED`\n\n| Active\n| Status of a business that has passed KYC; initial status of a newly created business belonging to an `accountholdergroup` where KYC is never required.\n| None.\n\n*The business.active field:*   +\n`true`\n\n*Allowable transitions:*   +\n`SUSPENDED`, `CLOSED`\n\n| Suspended\n| The business is temporarily inactive.\n\n*NOTE:* Transitioning a suspended business to the `ACTIVE` status is restricted, based on your role and the details of the previous status change.\n| Cannot load funds or activate cards.\n\n*The business.active field:*   +\n`false`\n\n*Allowable transitions:*   +\n`ACTIVE`, `LIMITED`, `UNVERIFIED`, `CLOSED`\n\n| Closed\n| The business is permanently inactive.\n\n*NOTE:* `CLOSED` is a terminal status.\nIn exceptional cases, you can transition a business from `CLOSED` to another status, depending on your role and the details of the previous status change.\nContact your Marqeta representative for more information.\n| Cannot load funds.\n\n*The business.active field:*   +\n`false`\n\n*Allowable transitions:*   +\n`ACTIVE`, `LIMITED`, `UNVERIFIED`, `SUSPENDED`\n|===\n\n[NOTE]\nThe Marqeta platform transitions a business' status in response to certain events.\nFor example, a business with an `UNVERIFIED` status transitions to `ACTIVE` when the business passes KYC."
      operationId: postBusinesstransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessTransitionRequest'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesstransitions/business/{business_token}':
    get:
      tags:
        - Business Transitions
      summary: List business transitions
      description: List all transitions for a given business.
      operationId: getBusinesstransitionsBusinessBusinesstoken
      parameters:
        - name: business_token
          in: path
          description: Unique identifier of the business resource associated with the transitions to retrieve.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of business transitions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-id'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesstransitions/{token}':
    get:
      tags:
        - Business Transitions
      summary: Retrieve business transition
      description: Use this endpoint to retrieve a business transition.
      operationId: getBusinesstransitionsToken
      parameters:
        - name: token
          in: path
          description: The unique identifier of the business transition you want to retrieve.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /cardgroups:
    get:
      tags:
        - Card Group
      summary: List Card Groups
      description: Get a list of all card groups in the program
      operationId: listCardGroups
      parameters:
        - name: card_tokens
          in: query
          description: list of unique card identifiers to retrieve.
          style: form
          schema:
            type: array
            items:
              type: string
        - name: count
          in: query
          description: Number of card group resources to retrieve.
          style: form
          schema:
            maximum: 10
            minimum: 1
            type: integer
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardGroupPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Card Group
      summary: Create Card Group
      description: Create a new card group object
      operationId: createCardGroup
      requestBody:
        description: Card group to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardGroupReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardGroup'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cardgroups/{token}':
    get:
      tags:
        - Card Group
      summary: Retrieve Card Group
      description: Retrieves the Card Group with the given token
      operationId: retrieveCardGroup
      parameters:
        - name: token
          in: path
          description: Unique identifier of the card group to retrieve
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: A JSON object containing `card_group` information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardGroup'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /cardproducts:
    get:
      tags:
        - Card Products
      summary: List card products
      description: "Use this endpoint to list existing card products.\n\nThis endpoint supports <</core-api/sorting-and-pagination, pagination>>."
      operationId: getCardproducts
      parameters:
        - name: count
          in: query
          description: "Number of resources to retrieve.\nCount can be between 1 - 10 items."
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardProductListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Card Products
      summary: Create card product
      description: "Use this endpoint to create a card product.\n\nThe card product request contains a set of fields that provide basic information about the card product, such as name, active status, and start and end dates.\nConfiguration information is contained in the `config` object, which contains sub-elements whose fields control the features and behavior of the card product.\nThe elements are referred to collectively as the card product \"configuration,\" and as such are contained in a `config` object."
      operationId: postCardproducts
      requestBody:
        description: Card product object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_product_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_product_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cardproducts/{token}':
    get:
      tags:
        - Card Products
      summary: Retrieve card product
      description: Use this endpoint to retrieve a specific card product.
      operationId: getCardproductsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the card product to retrieve.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_product_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Card Products
      summary: Update card product
      description: "Use this endpoint to update a card product.\nOnly values of fields in the request are modified; all others are left unchanged."
      operationId: putCardproductsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the card product to update.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Card product object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_product_update_model'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_product_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /cards:
    get:
      tags:
        - Cards
      summary: List cards by last 4 digits of PAN
      description: "Retrieves an array of cards whose primary account numbers (PANs) end in the four digits specified by the `last_four` query parameter.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/object-expansion, object expansion>>, <</core-api/sorting-and-pagination, sorting, and pagination>>."
      operationId: getCards
      parameters:
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: last_four
          in: query
          description: Last four digits of the primary account number (PAN) of the card you want to locate.
          required: true
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Cards
      summary: Create card
      description: "Creates a card.\n\nCreate the user and card product before you create the card.\nYou create a card using the `user_token` of the user who will own the card and the `card_product_token` of the card product that will control the card.\n\n[TIP]\nBy default, newly created cards are inactive and must be explicitly activated (see <</core-api/cards#_create_card_transition, Create Card Transition>> for information on activating cards).\nTo create cards that are activated upon issue, configure your card product's `config.card_life_cycle.activate_upon_issue` field (see <</core-api/card-products, Card Products>>).\n\nSend a `POST` request to `/pins/controltoken` to set the card's personal identification number (PIN) if your program requires PIN numbers (for example, for Europay Mastercard and Visa cards); this action updates the `pin_is_set` field to `true`.\nSee <</core-api/pins#_create_or_update_pin, Create or Update PIN>> for details.\n\nYou can use optional query parameters to show the primary account number (PAN) and card verification value (CVV2) number in the response.\nIf `show_pan` and `show_cvv_number` are set to `true`, the fulfillment state of the card is `DIGITALLY_PRESENTED` instead of the typical initial state of `ISSUED`.\nThis fulfillment state does not affect the delivery of physical cards.\n\nThis endpoint requires PCI DSS compliance if `show_pan` and `show_cvv_number` are set to `true`.\nYou must comply with PCI DSS data security requirements if you store, transmit, or process sensitive card data."
      operationId: postCards
      parameters:
        - name: show_cvv_number
          in: query
          description: Set to `true` to show the CVV2 number in the response.
          style: form
          schema:
            type: boolean
            default: false
        - name: show_pan
          in: query
          description: Set to `true` to show the full primary account number (PAN) in the response.
          style: form
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cards/barcode/{barcode}':
    get:
      tags:
        - Cards
      summary: Retrieve card by barcode
      description: "Retrieves a card by its barcode.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/object-expansion, object expansion>>."
      operationId: getCardsBarcodeBarcode
      parameters:
        - name: barcode
          in: path
          description: Barcode of the card to retrieve.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /cards/getbypan:
    post:
      tags:
        - Cards
      summary: Retrieve card by PAN
      description: "Retrieves the `user_token` and `card_token` for a primary account number (PAN).\nIn the case of a reissued card, where multiple cards share the same PAN, the information for the most recently issued card is returned.\n\nThis request is useful in IVR scenarios where a user has telephoned and identifies the card by the PAN.\nThe retrieval of these tokens is implemented as a `POST` request because supplying the PAN in the request body is more secure than supplying it in the URL (as would be required with a `GET`).\n\n[WARNING]\nSending a request to this endpoint requires PCI DSS compliance.\nYou must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date."
      operationId: postCardsGetbypan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pan_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pan_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cards/user/{token}':
    get:
      tags:
        - Cards
      summary: List cards for user
      description: "Retrieves a list of the cards associated with a specific user.\n\nThis endpoint supports <</core-api/field-filtering, field filtering,>> <</core-api/sorting-and-pagination, pagination>>, and <</core-api/object-expansion, object expansion>>."
      operationId: getCardsUserToken
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the user whose cards you want to list.\nSend a `GET` request to `/users` to retrieve user tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cards/{token}':
    get:
      tags:
        - Cards
      summary: Retrieve card
      description: "Retrieves a specific card.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/object-expansion, object expansion>>."
      operationId: getCardsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the card you want to retrieve.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: expand
          in: query
          description: 'Embeds the associated object of the specified type into the response, for all `GET /cards` endpoints.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Cards
      summary: Update card
      description: Updates the details of an existing card.
      operationId: putCardsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the card you want to update.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_update_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cards/{token}/showpan':
    get:
      tags:
        - Cards
      summary: Show card PAN
      description: "Retrieves a primary account number (PAN).\nFor security reasons, the PAN is not fully visible on the card resource returned by `GET` `/cards/{token}`.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/object-expansion, object expansion>>."
      operationId: getCardsTokenShowpan
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the card whose primary account number (PAN) you want to retrieve.\nSend a `GET` request to `/cards` to retrieve card tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: show_cvv_number
          in: query
          description: Set to `true` to show the CVV2 number in the response.
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /cardtransitions:
    post:
      tags:
        - Card Transitions
      summary: Create card transition
      description: "Creates a card state transition to set the state of an existing card.\n\nIf your system uses IVR, you can send a `POST` request to `/cards/getbypan` to retrieve a card token, which you can then use in your `POST` request to `/cardtransitions`.\n\nIt may not be possible to move a card from one user to another once the card has been activated."
      operationId: postCardtransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_transition_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cardtransitions/card/{token}':
    get:
      tags:
        - Card Transitions
      summary: List transitions for card
      description: "Retrieves a list of the transitions for a specific card.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getCardtransitionsCardToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the card.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of card transitions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cardtransitions/{token}':
    get:
      tags:
        - Card Transitions
      summary: Retrieve card transition
      description: "Retrieves a specific card transition.\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getCardtransitionsToken
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the card transition.\nSend a `GET` request to `/cardtransitions/card/{token}` to retrieve card transition tokens for a specific card."
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /commandomodes:
    get:
      tags:
        - Commando Mode
      summary: List Commando Mode control sets
      description: "Retrieve a list of Commando Mode control sets.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getCommandomodes
      parameters:
        - name: count
          in: query
          description: Number of Commando Mode control sets to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandoModeListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/commandomodes/transitions/{token}':
    get:
      tags:
        - Commando Mode
      summary: Retrieve Commando Mode transition
      description: Retrieve a specific Commando Mode control set transition.
      operationId: getCommandomodesTransitionsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the Commando Mode control set transition.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commando_mode_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/commandomodes/{commandomode_token}/transitions':
    get:
      tags:
        - Commando Mode
      summary: List Commando Mode transitions set
      description: "Retrieve a list of Commando Mode transitions for a specific control set.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getCommandomodesCommandomodetokenTransitions
      parameters:
        - name: count
          in: query
          description: Number of Commando Mode control set transitions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
        - name: commandomode_token
          in: path
          description: Unique identifier of the Commando Mode control set.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandoModeTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/commandomodes/{token}':
    get:
      tags:
        - Commando Mode
      summary: Retrieve Commando Mode control set
      description: Retrieve a specific Commando Mode control set.
      operationId: getCommandomodesToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the Commando Mode control set you want to retrieve.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commando_mode_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /credit/applications:
    post:
      tags:
        - Applications
      summary: Create application
      description: Create a new application.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationsRequest'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /credit/applications/files:
    get:
      tags:
        - Applications
      summary: List files on a bundle or application
      description: "Retrieve an array of files on a bundle or application\n\nEach top-level object returned in the array contains the fields documented in the <</core-api/credit-applications#_response_body_4, response body>>. The name of each object is its corresponding file type:\n\n* `BENEFITS_DISCLOSURE`\n* `CARD_MEMBER_AGREEMENT`\n* `E_DISCLOSURE`\n* `NOAA`\n* `PRIVACY_POLICY`\n* `REWARDS_DISCLOSURE_PRE_TERMS`\n* `REWARDS_DISCLOSURE_POST_TERMS`\n* `SOCT`\n* `TERMS_SCHEDULE`"
      operationId: retrieveFiles
      parameters:
        - name: bundle_token
          in: query
          description: "Unique identifier of the bundle whose files you want to retrieve.\n\nThe following file types are returned with the `bundle_token`:\n\n* `CARD_MEMBER_AGREEMENT`\n* `E_DISCLOSURE`\n* `PRIVACY_POLICY`\n* `REWARDS_DISCLOSURE_PRE_TERMS`\n* `REWARDS_DISCLOSURE_POST_TERMS`\n* `SOCT`"
          style: form
          schema:
            type: string
            x-allowableValues: Existing bundle token
        - name: application_token
          in: query
          description: "Unique identifier of the application whose files you want to retrieve.\n\nThe following file types are returned with the `application_token`:\n\n* `BENEFITS_DISCLOSURE`\n* `CARD_MEMBER_AGREEMENT`\n* `E_DISCLOSURE`\n* `NOAA`\n* `PRIVACY_POLICY`\n* `REWARDS_DISCLOSURE_PRE_TERMS`\n* `REWARDS_DISCLOSURE_POST_TERMS`\n* `SOCT`\n* `TERMS_SCHEDULE`"
          style: form
          schema:
            type: string
            x-allowableValues: Existing application token
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileMapResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/credit/applications/files/{type}':
    get:
      tags:
        - Applications
      summary: Retrieve file on a bundle or application
      description: Retrieve a specific type of file on a bundle or application.
      operationId: getFileByType
      parameters:
        - name: type
          in: path
          description: "The type of file to retrieve.\n\n* `SOCT` - The Summary of Credit Terms (SOCT), which outlines the interest rates, interest charges, and fees associated with the credit account being offered to the user.\n* `REWARDS_DISCLOSURE_PRE_TERMS` - The Rewards Disclosure Pre-terms, which discloses detailed information about the rewards program on the credit account being offered to the user before a decision is rendered on their application.\n* `REWARDS_DISCLOSURE_POST_TERMS` - The Rewards Disclosure Post-terms, which discloses detailed information about the rewards program on the user's credit account if their application is approved.\n* `BENEFITS_DISCLOSURE` - The Benefits Disclosure, which which is given to a user if their application is approved and discloses detailed information about the benefits on the user's credit account.\n* `CARD_MEMBER_AGREEMENT` - The Card Member Agreement, which specifies the terms and conditions of the user's credit account, including the interest rates, interest charges, fees, minimum payment calculations, and more.\n* `PRIVACY_POLICY` - The Privacy Policy, which explains how the information on the user's application is collected, handled, and processed.\n* `E_DISCLOSURE` - The eDisclosure, which states that the user has agreed to receive disclosures electronically.\n* `TERMS_SCHEDULE` - The Terms Schedule, which is given to a user if their application is approved and specifies the interest rate details on the user's credit account.\n* `NOAA` - The Notice of Adverse Action (NOAA), which is given to a user if their application is declined and informs them of the specific reasons why they were denied a credit account."
          required: true
          style: simple
          schema:
            $ref: '#/components/schemas/FileType'
        - name: bundle_token
          in: query
          description: "Unique identifier of the bundle on which you want to retrieve a file.\n\nRequired if retrieving one of the following file types:\n\n* `CARD_MEMBER_AGREEMENT`\n* `E_DISCLOSURE`\n* `PRIVACY_POLICY`\n* `REWARDS_DISCLOSURE_PRE_TERMS`\n* `REWARDS_DISCLOSURE_POST_TERMS`\n* `SOCT`"
          style: form
          schema:
            type: string
            x-allowableValues: Existing bundle token
        - name: application_token
          in: query
          description: "Unique identifier of the application on which you want to retrieve a file.\n\nRequired if retrieving one of the following files:\n\n* `BENEFITS_DISCLOSURE`\n* `NOAA`\n* `TERMS_SCHEDULE`"
          style: form
          schema:
            type: string
            x-allowableValues: Existing application token
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/credit/applications/{token}':
    get:
      tags:
        - Applications
      summary: Retrieve application
      description: Retrieve a specific application.
      operationId: retrieveApplication
      parameters:
        - name: token
          in: path
          description: Unique identifier of the application to retrieve.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing application token
        - name: expand
          in: query
          description: Embeds the specified object into the response.
          style: form
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ExpandObjects'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/credit/applications/{token}/transitions':
    get:
      tags:
        - Applications
      summary: List application transitions
      description: Retrieve an array of transitions on a specific application.
      operationId: pageApplicationTransitions
      parameters:
        - name: token
          in: path
          description: The unique identifier of the application for which you want to retrieve transitions.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing application token
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsTransitionPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Applications
      summary: Transition application state
      description: Transition the current state of an application to a new state.
      operationId: transitionApplication
      parameters:
        - name: token
          in: path
          description: Unique identifier of the application whose state you want to transition.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing application token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTransitionRequest'
        required: true
      responses:
        '200':
          description: Successful application transition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /depositaccounts:
    post:
      tags:
        - direct deposit accounts
      summary: Creates new direct deposit account for cardholder.
      operationId: createAccount
      requestBody:
        description: Create direct deposit account for cardholder
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/direct_deposit_account_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/account/{account_number}/user':
    get:
      tags:
        - direct deposit accounts
      summary: Get User for Plain Text Account Number
      operationId: getUserForDirectDepositAccount
      parameters:
        - name: account_number
          in: path
          description: Get user associated with direct deposit account number
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /depositaccounts/transitions:
    post:
      tags:
        - direct deposit accounts
      summary: Creates new transition for a direct deposit account.
      operationId: createTransition
      requestBody:
        description: Create transition for direct deposit account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/direct_deposit_account_transition_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/transitions/{token}':
    get:
      tags:
        - direct deposit accounts
      summary: Get direct deposit account transition.
      operationId: getDirectDepositAccountTransition
      parameters:
        - name: token
          in: path
          description: Get specific direct deposit account transition
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/user/{token}':
    get:
      tags:
        - direct deposit accounts
      summary: List all specific direct deposit accounts.
      operationId: getUserDirectDepositAccounts
      parameters:
        - name: count
          in: query
          description: Number of users to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: state
          in: query
          description: Direct deposit account status
          style: form
          schema:
            enum:
              - ACTIVE
              - SUSPENDED
              - TERMINATED
              - UNSUPPORTED
              - UNACTIVATED
              - LIMITED
            type: string
        - name: token
          in: path
          description: Get specific direct deposit account
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositAccountListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/{token}':
    get:
      tags:
        - direct deposit accounts
      summary: Get direct deposit account.
      operationId: getDirectDepositAccount
      parameters:
        - name: token
          in: path
          description: Get specific direct deposit account
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - direct deposit accounts
      summary: Update direct deposit account.
      operationId: update
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Update direct deposit account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositAccountUpdateRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: true
  '/depositaccounts/{token}/cdd':
    get:
      tags:
        - direct deposit accounts
      summary: Get direct deposit account transition list for card holder.
      operationId: getCDDInfo
      parameters:
        - name: token
          in: path
          description: Get CDD info for a specific DDA token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer_due_diligence_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/{token}/cdd/{cddtoken}':
    put:
      tags:
        - direct deposit accounts
      summary: Update CDD answers for Direct Deposit Account
      operationId: updateCDDInfo
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: cddtoken
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Update CDD answers
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer_due_diligence_update_response'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer_due_diligence_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/{user_token}/transitions':
    get:
      tags:
        - direct deposit accounts
      summary: Get direct deposit account transition list for card holder.
      operationId: getTransitionList
      parameters:
        - name: count
          in: query
          description: Number of users to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
        - name: user_token
          in: path
          description: Get direct deposit account transition list for user
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwalletprovisionrequests/androidpay:
    post:
      tags:
        - Digital Wallets Management
      summary: Create digital wallet token provisioning request for Google Wallet
      description: "Use this endpoint to return card data for use in provisioning a digital wallet token into Google Wallet.\n\nThe returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead."
      operationId: postDigitalwalletprovisionrequestsAndroidpay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_android_pay_provision_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_android_pay_provision_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwalletprovisionrequests/applepay:
    post:
      tags:
        - Digital Wallets Management
      summary: Create digital wallet token provisioning request for Apple Wallet
      description: "Use this endpoint to return card data for use in provisioning a digital wallet token into Apple Wallet.\n\nThe returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead."
      operationId: postDigitalwalletprovisionrequestsApplepay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_apple_pay_provision_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_apple_pay_provision_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwalletprovisionrequests/samsungpay:
    post:
      tags:
        - Digital Wallets Management
      summary: Create digital wallet token provisioning request for Samsung Wallet
      description: "[NOTE]\nThis endpoint is limited in availability.\nFor more information, contact your Marqeta representative.\n\nUse this endpoint to return card data for use in provisioning a digital wallet token into Samsung Wallet.\n\nThe returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead."
      operationId: postDigitalwalletprovisionrequestsSamsungpay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_samsung_pay_provision_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_samsung_pay_provision_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwalletprovisionrequests/xpay:
    post:
      tags:
        - Digital Wallets Management
      summary: Create digital wallet token provisioning request for XPay
      description: "[NOTE]\nThis endpoint is limited in availability.\nFor more information, contact your Marqeta representative.\n\nUse this endpoint to return card data for use in provisioning a digital wallet token into an XPay digital wallet.\n\nThe returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead."
      operationId: postDigitalwalletprovisionrequestsXPay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_x_pay_provision_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_x_pay_provision_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwallets/wpp/applePayJWT:
    post:
      tags:
        - Digital Wallets Management
      summary: Create request for Apple Wallet web push provisioning
      description: "[NOTE]\nThis endpoint is currently in beta and subject to change.\nFor more information, contact your Marqeta representative.\n\nUse this endpoint to add a card to Apple Wallet via a web application."
      operationId: generateApplePayWPPJWT
      parameters:
        - name: req-sys-id
          in: header
          description: Random pseudo-unique value used for troubleshooting between multiple parties.
          required: true
          style: simple
          schema:
            type: string
          example: 123d837e-958a-4e9f-bc97-4843ec948123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request_for_apple_pay_wpp_JWT'
        required: true
      responses:
        '200':
          description: Ok
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between multiple parties.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web_push_provisioning_apple_pay_JWT_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwallets/wpp/googlePayPushProvisioningNotification:
    post:
      tags:
        - Digital Wallets Management
      summary: Create request for Google Wallet web push provisioning
      description: "[NOTE]\nThis endpoint is currently in beta and subject to change.\nFor more information, contact your Marqeta representative.\n\nUse this endpoint to add a card to Google Wallet via a web application.\n\nThis endpoint does not return a payload in response to a request.\nInstead, a successful call will return a response code only."
      operationId: sendOPCDataToGooglePay
      parameters:
        - name: req-sys-id
          in: header
          description: Random pseudo-unique value used for troubleshooting between multiple parties.
          required: true
          style: simple
          schema:
            type: string
          example: 123d837e-958a-4e9f-bc97-4843ec948123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sending_provisioning_data_to_google_pay_backend_request'
        required: true
      responses:
        '202':
          description: Accepted
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between multiple parties.
              style: simple
              schema:
                type: string
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwallettokens:
    get:
      tags:
        - Digital Wallets Management
      summary: List digital wallet tokens
      description: Use this endpoint to retrieve a list of digital wallet tokens.
      operationId: getDigitalwallettokens
      parameters:
        - name: count
          in: query
          description: Number of digital wallet token resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: Sort order index of the first digital wallet token resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
        - name: start_date
          in: query
          description: Date when the digital wallet token becomes active.
          style: form
          schema:
            type: string
        - name: end_date
          in: query
          description: Expiration date of the digital wallet token.
          style: form
          schema:
            type: string
        - name: pan_reference_id
          in: query
          description: "Unique identifier of the digital wallet token primary account number (PAN) within the card network.\nThis value may vary, depending on the digital wallet.\nFor example, the `pan_reference_id` may be different in Apple Wallet and Google Wallet for the same digital wallet token."
          style: form
          schema:
            type: string
        - name: token_reference_id
          in: query
          description: "Unique identifier of the digital wallet token within the card network.\nThe `token_reference_id` is unique at the card network level."
          style: form
          schema:
            type: string
        - name: correlation_id
          in: query
          description: Unique value representing a tokenization request (Mastercard only).
          style: form
          schema:
            type: string
        - name: token_type
          in: query
          description: Comma-delimited list of digital wallet token types to display.
          style: form
          schema:
            type: string
        - name: token_requestor_name
          in: query
          description: "Name of the token requestor within the card network.\n\n*NOTE:* The list of example values for this field is maintained by the card networks and is subject to change."
          style: form
          schema:
            type: string
        - name: state
          in: query
          description: Comma-delimited list of digital wallet token states to display.
          style: form
          schema:
            type: string
        - name: embed
          in: query
          description: An optional embedded user object.
          style: form
          schema:
            enum:
              - user
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalWalletTokenListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/digitalwallettokens/card/{card_token}':
    get:
      tags:
        - Digital Wallets Management
      summary: List digital wallet tokens for card
      description: "Use this endpoint to return an array of all digital wallet tokens for a particular card.\n\nThis endpoint supports <</core-api/sorting-and-pagination, pagination>>."
      operationId: getDigitalwallettokensCardCardtoken
      parameters:
        - name: card_token
          in: path
          description: "Unique identifier of the card.\nUsed to minimize the need to exchange card details during subsequent calls, and also for troubleshooting."
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of digital wallet token resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first digital wallet token resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalWalletTokenListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/digitalwallettokens/{token}':
    get:
      tags:
        - Digital Wallets Management
      summary: Retrieve digital wallet token
      description: Use this endpoint to retrieve a specific digital wallet token.
      operationId: getDigitalwallettokensToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the digital wallet token (DWT).
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_token'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/digitalwallettokens/{token}/showtokenpan':
    get:
      tags:
        - Digital Wallets Management
      summary: Retrieve digital wallet token PAN
      description: "Use this endpoint to retrieve a digital wallet token with the entire primary account number (PAN) displayed.\nThe PAN returned is of the digital wallet token and not of the card.\n(For security reasons, the PAN is not fully visible on the digital wallet token returned by `GET` `/digitalwallettokens/{token}`.)\n\n[WARNING]\nSending a request to this endpoint requires PCI DSS compliance.\nYou must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date."
      operationId: getDigitalwallettokensTokenShowtokenpan
      parameters:
        - name: token
          in: path
          description: Unique identifier of the digital wallet token (DWT).
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_token'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwallettokentransitions:
    post:
      tags:
        - Digital Wallets Management
      summary: Create digital wallet token transition
      description: Use this endpoint to transition a digital wallet token from one state to another.
      operationId: postDigitalwallettokentransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_token_transition_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_token_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/digitalwallettokentransitions/digitalwallettoken/{token}':
    get:
      tags:
        - Digital Wallets Management
      summary: List transitions for digital wallet token
      description: "Use this endpoint to return an array of all transitions for a particular digital wallet token.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, pagination>>, and <</core-api/sorting-and-pagination, sorting>>."
      operationId: getDigitalwallettokentransitionsDigitalwallettokenToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the digital wallet token (DWT).
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of digital wallet transitions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: The sort order index of the first digital wallet token in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-id'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalWalletTokenTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/digitalwallettokentransitions/{token}':
    get:
      tags:
        - Digital Wallets Management
      summary: Retrieve digital wallet token transition
      description: "Use this endpoint to retrieve a specific digital wallet token transition.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getDigitalwallettokentransitionsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the digital wallet token (DWT) transition.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_token_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /directdeposits:
    get:
      tags:
        - direct deposits
      summary: Retrieves a list of all direct deposit records for your program.
      operationId: getDirectdeposits
      parameters:
        - name: count
          in: query
          description: The number of direct deposit records to retrieve.
          style: form
          schema:
            maximum: 100
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: reversed_after_grace_period
          in: query
          description: Reversed after grace period
          style: form
          schema:
            type: boolean
        - name: user_token
          in: query
          description: User token
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: Business token
          style: form
          schema:
            type: string
        - name: direct_deposit_state
          in: query
          description: 'Comma-delimited list of direct deposit states to display e.g. PENDING | REVERSED | APPLIED | REJECTED '
          style: form
          schema:
            enum:
              - PENDING
              - APPLIED
              - REVERSED
              - REJECTED
            type: string
        - name: start_settlement_date
          in: query
          description: Start Settlement Date
          style: form
          schema:
            type: string
        - name: end_settlement_date
          in: query
          description: End Settlement Date
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/directdeposits/accounts/{user_or_business_token}':
    get:
      tags:
        - direct deposits
      summary: Returns an account and routing number which can be used for direct deposit
      operationId: getDirectdepositsAccountsUserorbusinesstoken
      parameters:
        - name: user_or_business_token
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deposit_account'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: true
    put:
      tags:
        - direct deposits
      summary: Updates a specific direct deposit account
      operationId: putDirectdepositsAccountsUserorbusinesstoken
      parameters:
        - name: user_or_business_token
          in: path
          description: User or business token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Deposit account update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deposit_account_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deposit_account'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: true
  /directdeposits/transitions:
    get:
      tags:
        - direct deposits
      summary: Returns a list of direct deposit transitions
      operationId: getDirectdepositsTransitions
      parameters:
        - name: count
          in: query
          description: Number of direct deposit transitions to retrieve
          style: form
          schema:
            maximum: 100
            type: integer
            format: int32
            default: 5
        - name: user_token
          in: query
          description: User token
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: Business token
          style: form
          schema:
            type: string
        - name: direct_deposit_token
          in: query
          description: Direct deposit token
          style: form
          schema:
            type: string
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
        - name: states
          in: query
          description: 'Comma-delimited list of direct deposit states to display e.g. PENDING | REVERSED | APPLIED | REJECTED '
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - direct deposits
      summary: Creates a direct deposit transition
      operationId: postDirectdepositsTransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectDepositTransitionRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/directdeposits/transitions/{token}':
    get:
      tags:
        - direct deposits
      summary: Returns a direct deposit transition
      operationId: getDirectdepositsTransitionsToken
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/directdeposits/{token}':
    get:
      tags:
        - direct deposits
      summary: Returns a direct deposit entry
      operationId: getDirectdepositsToken
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /feecharges:
    post:
      tags:
        - Fee Charges
      summary: Create fee charge
      description: "Use this endpoint to create a fee charge.\nYou must pass in either `user_token` or `business_token` to associate a user or business with the fee charge.\n\nThis is an all-or-nothing operation.\nWhen more than one fee is present, you must assess either all fees, or no fees.\n\n[NOTE]\nThis feature is currently in beta and subject to change.\nIt also requires additional activation steps.\nTo learn more about the Beta program for this feature and about activating it for your program, contact your Marqeta representative."
      operationId: postFeeCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fee_transfer_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/feecharges/{token}':
    get:
      tags:
        - Fee Charges
      summary: Retrieve fee charge
      description: "Use this endpoint to retrieve a specific fee charge.\nInclude the fee transfer `token` path parameter to specify the fee charge to return."
      operationId: getFeeChargeToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the fee charge to retrieve.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /feedback/fraud:
    post:
      summary: Creates a fraud feedback
      description: This endpoint is to get a fraud feedback from the customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudFeedbackRequest'
        required: true
      responses:
        '201':
          description: Fraud feedback is created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudFeedbackResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /feerefunds:
    post:
      tags:
        - Fee Refunds
      summary: Create fee refund
      description: "Use this endpoint to create a fee refund.\nInclude the fee charge `token` path parameter to specify the fee to return.\n\nIf there are insufficient funds in your fee account to refund the fee, funds are drawn from your program reserve account."
      operationId: postFeeRefunds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fee_refund_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fees:
    get:
      tags:
        - Fees
      summary: List fees
      description: "Use this endpoint to list existing fees.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getFees
      parameters:
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 100
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Fees
      summary: Create fee
      description: "Use this endpoint to create a fee.\nAdd the source details to the body of the request in link:http://www.json.org/[JSON, window=\"_blank\"] format."
      operationId: postFees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fee_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fees/{token}':
    get:
      tags:
        - Fees
      summary: Retrieve fee
      description: "Use this endpoint to retrieve a fee.\nInclude the `token` path parameter to specify the fee to return."
      operationId: getFeesToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the fee resource.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Fees
      summary: Update fee
      description: "Use this endpoint to update a fee.\nInclude the `token` as a path parameter to indicate the fee to update."
      operationId: putFeesToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the fee resource.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fee_update_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/ach:
    post:
      tags:
        - Account Holder Funding Sources
      summary: Create ACH source
      description: "Create an ACH funding source for an existing account holder.\nSpecify the account holder of the funding source by passing a user or business token.\n\nWhen adding an ACH funding source, a small amount is deposited in the bank account as a test.\nThe test deposit should be reflected in the account after two to three business days.\nYou must then make an API call to verify the deposit amount in order to activate the ACH account.\nSee <</core-api/account-holder-funding-sources#putFundingsourcesAchFundingsourcetoken, Verify or Update ACH Funding Source>> on this page for more information.\n\nThe response body returns details about the account, including the verification status.\nPossible ACH verification status values include `ACH_VERIFIED`, `ACH_FAILED`, and `VERIFICATION_PENDING`."
      operationId: postFundingsourcesAch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ach_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ach_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/ach/partner:
    post:
      tags:
        - Account Holder Funding Sources
      summary: Create ACH source via a partner integration
      description: "Create an ACH funding source for an existing account holder by using a third-party partner to handle account validation and provide PII account data.\nBecause you don't handle any personally identifiable information (PII) yourself, using a third party when creating the funding source enables you to bypass the regulatory and compliance measures related to capturing, storing, and transmitting PII.\n\nWith this endpoint, you can create a US-based funding source—either a checking account or a savings account—for a program or user without passing bank account details such as the account number or routing number to Marqeta.\nInstead, validating account data and account verification is handled by the third-party partner you specify, and a secure token (i.e., a Plaid `processor_token`) is shared across partners.\nBy using a secure account verification platform to provide immediate verification, you shorten the wait time until the ACH funding source is ready and avoid managing the microdeposit-based account verification process.\n\nTo create an ACH funding source for an existing account holder without validating through a third party, see <</core-api/account-holder-funding-sources#postFundingsourcesAch, Create ACH source>>.\n\n[NOTE]\nThis endpoint assumes that you already have established a relationship with both Marqeta and the third-party account validation partner you want to use.\nIn addition, you must explicitly authorize the sharing of information with the third-party partner, and enable Marqeta as a processor for your integration.\nFor more information, contact your Marqeta representative."
      operationId: postFundingsourcesAchPartner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ach_partner_request_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ach_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/ach/{funding_source_token}':
    get:
      tags:
        - Account Holder Funding Sources
      summary: Retrieve ACH source
      description: "Retrieve a specific ACH funding source.\n\nThe response body returns details about the account, including the verification status.\nPossible ACH verification status values are: `ACH_FAILED`, `ACH_VERIFIED`, and `VERIFICATION_PENDING`."
      operationId: getFundingsourcesAchFundingsourcetoken
      parameters:
        - name: funding_source_token
          in: path
          description: "Unique identifier of the funding source.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve existing funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve existing funding source tokens for a business."
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ach_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Account Holder Funding Sources
      summary: Verify or update ACH source
      description: "Verify or update an ACH funding source.\n\nIf you are verifying the ACH source, include the verification amounts in the body of the request.\nACH verification will fail if the verification amounts are not entered in the correct order.\n`verify_amount1` must match the first deposit amount, and `verify_amount2` must match the second.\n\nIf you are updating the ACH source, include the `active` field instead.\nThe `active` field is the only field you can update."
      operationId: putFundingsourcesAchFundingsourcetoken
      parameters:
        - name: funding_source_token
          in: path
          description: "Unique identifier of the funding source.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve existing funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve existing funding source tokens for a business."
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ach_verification_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ach_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/ach/{funding_source_token}/verificationamounts':
    get:
      tags:
        - Account Holder Funding Sources
      summary: Retrieve ACH verification amounts
      description: "In your sandbox environment, retrieve the amounts used to verify the association with your ACH account.\n\nUse this endpoint for testing purposes only.\nIn production, verification amounts are retrieved from the bank statement of the account holder."
      operationId: getFundingsourcesAchFundingsourcetokenVerificationamounts
      parameters:
        - name: funding_source_token
          in: path
          description: "Unique identifier of the funding source.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve existing funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve existing funding source tokens for a business."
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ach_verification_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/addresses:
    post:
      tags:
        - Addresses
      summary: Create address
      description: "Use this endpoint to create an address resource.\n\nWhen creating the address, you must pass the token of either an existing user in the `user_token` field or an existing business in the `business_token` field.\nDo not pass both."
      operationId: postFundingsourcesAddresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_holder_address_model'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderAddressResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/addresses/business/{business_token}':
    get:
      tags:
        - Addresses
      summary: List business addresses
      description: "Use this endpoint to list existing addresses for a business.\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getFundingsourcesAddressesBusinessBusinesstoken
      parameters:
        - name: business_token
          in: path
          description: "Unique identifier of the business account holder.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderAddressListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/addresses/user/{user_token}':
    get:
      tags:
        - Addresses
      summary: Lists all addresses for a user
      description: "Use this endpoint to list existing addresses for a user.\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getFundingsourcesAddressesUserUsertoken
      parameters:
        - name: user_token
          in: path
          description: Unique identifier of the user account holder.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderAddressListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/addresses/{funding_source_address_token}':
    get:
      tags:
        - Addresses
      summary: Retrieve address
      description: Use this endpoint to retrieve a funding source address.
      operationId: getFundingsourcesAddressesFundingsourceaddresstoken
      parameters:
        - name: funding_source_address_token
          in: path
          description: Unique identifier of the funding source address.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderAddressResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Addresses
      summary: Update address
      description: Use this endpoint to update an address.
      operationId: putFundingsourcesAddressesFundingsourceaddresstoken
      parameters:
        - name: funding_source_address_token
          in: path
          description: Unique identifier of the funding source address.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_holder_address_update_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderAddressResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/business/{business_token}':
    get:
      tags:
        - Account Holder Funding Sources
      summary: List sources for business
      description: "List funding sources associated with a specific business.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getFundingsourcesBusinessBusinesstoken
      parameters:
        - name: business_token
          in: path
          description: "Unique identifier of the business account holder.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: type
          in: query
          description: "Type of funding source to return: ACH or payment card.\nLeave unspecified to return both types."
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingAccountListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/paymentcard:
    post:
      tags:
        - Account Holder Funding Sources
      summary: Create payment card source
      description: "Create a payment card funding source for an existing account holder.\nThis endpoint returns the card type and the last four digits of the card, and then sets the `active_ field` to `true`.\n\nMarqeta retains only a tokenized representation of the card number."
      operationId: postFundingsourcesPaymentcard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/paymentcard/{funding_source_token}':
    get:
      tags:
        - Account Holder Funding Sources
      summary: Retrieve payment card source
      description: Retrieve a specific payment card funding source.
      operationId: getFundingsourcesPaymentcardFundingsourcetoken
      parameters:
        - name: funding_source_token
          in: path
          description: "Unique identifier of the funding source.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve existing funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve existing funding source tokens for a business."
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Account Holder Funding Sources
      summary: Update payment card source
      description: Update a payment card funding source.
      operationId: putFundingsourcesFundingsourcetoken
      parameters:
        - name: funding_source_token
          in: path
          description: "Unique identifier of the funding source.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve existing funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve existing funding source tokens for a business."
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Payment card
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/program:
    post:
      tags:
        - Program Funding Sources
      summary: Create program source
      description: Create a program funding source.
      operationId: postFundingsourcesProgram
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/program_funding_source_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/program/ach:
    get:
      tags:
        - Program Funding Sources
      summary: List ACH program sources
      description: List ACH program funding sources.
      operationId: getAllACHFundingSources
      parameters:
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: active
          in: query
          description: "If `true`, returns ACH funding sources from active programs only.\nIf `false`, returns all ACH funding sources."
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACHListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Program Funding Sources
      summary: Create ACH program source
      description: Create an ACH program funding source.
      operationId: postFundingsourcesProgramAch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/base_ach_request_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_ach_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/program/{token}':
    get:
      tags:
        - Program Funding Sources
      summary: Retrieve program source
      description: 'Retrieve a specific program funding source, whether active or inactive.'
      operationId: getFundingsourcesProgramToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program funding source.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Program Funding Sources
      summary: Update program source
      description: Update a program funding source.
      operationId: putFundingsourcesProgramToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program funding source.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/program_funding_source_update_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/programgateway:
    post:
      tags:
        - Program Gateway Funding Sources
      summary: Create program gateway source
      description: "Creates a program gateway funding source.\nA program gateway funding source is a transaction relay that allows you to approve or decline transactions in real time."
      operationId: postFundingsourcesProgramgateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway_program_funding_source_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/programgateway/customheaders/{token}':
    put:
      tags:
        - Program Gateway Funding Sources
      summary: Update program gateway source custom headers
      description: Adds or updates custom HTTP headers for a specific program gateway funding source.
      operationId: putFundingsourcesProgramgatewayCustomHeaderToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program gateway funding source.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway_program_custom_header_update_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/programgateway/{token}':
    get:
      tags:
        - Program Gateway Funding Sources
      summary: Retrieve program gateway source
      description: Retrieves a specific program gateway funding source.
      operationId: getFundingsourcesProgramgatewayToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program gateway funding source.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Program Gateway Funding Sources
      summary: Update program gateway source
      description: Update a program gateway funding source.
      operationId: putFundingsourcesProgramgatewayToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program gateway funding source.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway_program_funding_source_update_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/user/{user_token}':
    get:
      tags:
        - Account Holder Funding Sources
      summary: List sources for user
      description: "List funding sources associated with a specific user.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getFundingsourcesUserUsertoken
      parameters:
        - name: user_token
          in: path
          description: Unique identifier of the user account holder.
          required: true
          style: simple
          schema:
            type: string
        - name: type
          in: query
          description: "Type of funding source to retrieve: ACH or payment card.\nLeave unspecified to return both types."
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingAccountListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/{funding_source_token}/default':
    put:
      tags:
        - Account Holder Funding Sources
      summary: Set default source
      description: "Configure either an ACH funding source or a payment card funding source as the default funding source.\n\nA default funding source is used when you omit the `funding_source_token` field from funding requests, such as a `POST` request to `/gpaorders`.\nNote that the first funding source you create is automatically set as the default (`is_default_source=true`)."
      operationId: putFundingsourcesFundingsourcetokenDefault
      parameters:
        - name: funding_source_token
          in: path
          description: "Unique identifier of the funding source.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve existing funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve existing funding source tokens for a business."
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /gpaorders:
    post:
      tags:
        - GPA Orders
      summary: Create GPA order
      description: "Use this endpoint to create an order to fund an account holder's GPA.\n\nYou can assess a <</core-api/fees, fee>> while funding a GPA by using the optional `fees` array to attach one or more fee resources to the GPA order.\nWhen you create a GPA order, the GPA is first credited for the fees, then debited at funding time."
      operationId: postGpaorders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gpa_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpa_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /gpaorders/unloads:
    get:
      tags:
        - GPA Orders
      summary: List GPA unloads
      description: "Use this endpoint to list all GPA unloads or GPA unloads associated with a specific user or business.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getGpaordersUnloads
      parameters:
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: user_token
          in: query
          description: "Unique identifier of the user resource.\n\nSend a `GET` request to `/users` to retrieve user tokens."
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: "Unique identifier of the business resource.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
          style: form
          schema:
            type: string
        - name: original_order_token
          in: query
          description: "Unique identifier of the original GPA order.\n\nSend a `GET` request to `/transactions?type=gpa.credit` to retrieve GPA order tokens."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GPAUnloadListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - GPA Orders
      summary: Create GPA unload
      description: "Use this endpoint to unload a GPA order.\n\nUnloading a GPA order returns funds to the funding source.\nA GPA unload must be tied to an original GPA order and can be used to return the amount of the original order or a lesser amount."
      operationId: postGpaordersUnloads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/unload_request_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpa_returns'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/gpaorders/unloads/{unload_token}':
    get:
      tags:
        - GPA Orders
      summary: Retrieve GPA unload
      description: Use this endpoint to retrieve a specific GPA unload.
      operationId: getGpaordersUnloadsUnloadtoken
      parameters:
        - name: unload_token
          in: path
          description: Unique identifier of the GPA unload.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpa_returns'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/gpaorders/{token}':
    get:
      tags:
        - GPA Orders
      summary: Retrieve GPA order
      description: Use this endpoint to retrieve a GPA order.
      operationId: getGpaordersToken
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the GPA order.\n\nSend a `GET` request to `/transactions?type=gpa.credit` to retrieve GPA order tokens."
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpa_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /kyc:
    post:
      tags:
        - KYC Verification
      summary: Perform KYC verification
      description: "Use this endpoint to verify the identity of an account holder in the United States, either a user or a business.\nYou can perform KYC verification on an account holder, provided the following are true:\n\n* The KYC status of the account holder is `UNVERIFIED` or `LIMITED`\n* The account holder has not been submitted for KYC verification twice\n\n=== Required fields\n\nIn order to perform KYC verification, the user or business resource on which you perform the check must have the following fields configured with valid values:\n\n[cols=\"1a,1a\"]\n|===\n| User Fields Required for KYC | Business Fields Required for KYC\n\n|\n* `first_name` (legal first name only, no prefixes)\n* `last_name` (legal last name only, no suffixes)\n* `address1` (cannot be a PO Box)\n* `city`\n* `state`\n* `postal_code`\n* `country`\n* `birth_date`\n* `ssn` (nine digits, no delimiters)\n* `email` (required in some cases)\n* `phone` (required in some cases)\n\n|\n* `business_name_legal` (128 char max)\n* `business_name_dba` (\"Doing Business As\" or fictitious business name; enter the legal business name in this field if your business does not use a fictitious business name)\n* `office_location` (cannot be a PO Box; `state` field must use a <<valid_state_provincial_and_territorial_abbreviations, valid two-letter state, provincial, or territorial abbreviation>>)\n* `identifications` (nine digits, no delimiters)\n* `incorporation.incorporation_type`\n* `incorporation.state_of_incorporation`\n* `date_established`\n* `proprietor_or_officer`\n* `beneficial_owner` (maximum of four beneficial owners)\n* `proprietor_is_beneficial_owner` (required if the business proprietor or officer is also a beneficial owner)\n* `attestation_consent`\n* `attester_name`\n* `attestation_date`\n|===\n\n==== Valid state, provincial, and territorial abbreviations\nThe following list includes all valid two-letter abbreviations for US states, territories, and military (APO/FPO/DPO) addresses.\nIt also includes abbreviations for Canadian provinces and territories.\nState, provincial, and territorial abbreviations are case sensitive, and must be in uppercase as they appear in this list:\n\n* `AL`: Alabama\n* `AK`: Alaska\n* `AB`: Alberta\n* `AS`: American Samoa\n* `AZ`: Arizona\n* `AR`: Arkansas\n* `AE`: Armed Forces\n* `AA`: Armed Forces Americas\n* `AP`: Armed Forces Pacific\n* `BC`: British Columbia\n* `CA`: California\n* `CO`: Colorado\n* `CT`: Connecticut\n* `DE`: Delaware\n* `DC`: District of Columbia\n* `FL`: Florida\n* `GA`: Georgia\n* `GU`: Guam\n* `HI`: Hawaii\n* `ID`: Idaho\n* `IL`: Illinois\n* `IN`: Indiana\n* `IA`: Iowa\n* `KS`: Kansas\n* `KY`: Kentucky\n* `LA`: Louisiana\n* `ME`: Maine\n* `MB`: Manitoba\n* `MD`: Maryland\n* `MA`: Massachusetts\n* `MI`: Michigan\n* `MN`: Minnesota\n* `MS`: Mississippi\n* `MO`: Missouri\n* `MT`: Montana\n* `NE`: Nebraska\n* `NV`: Nevada\n* `NB`: New Brunswick\n* `NH`: New Hampshire\n* `NJ`: New Jersey\n* `NM`: New Mexico\n* `NY`: New York\n* `NF`: Newfoundland\n* `NC`: North Carolina\n* `ND`: North Dakota\n* `NT`: Northwest Territories\n* `NS`: Nova Scotia\n* `NU`: Nunavut\n* `OH`: Ohio\n* `OK`: Oklahoma\n* `ON`: Ontario\n* `OR`: Oregon\n* `PA`: Pennsylvania\n* `PE`: Prince Edward Island\n* `PR`: Puerto Rico\n* `QC`: Quebec\n* `RI`: Rhode Island\n* `SK`: Saskatchewan\n* `SC`: South Carolina\n* `SD`: South Dakota\n* `TN`: Tennessee\n* `TX`: Texas\n* `UT`: Utah\n* `VT`: Vermont\n* `VI`: Virgin Islands\n* `VA`: Virginia\n* `WA`: Washington\n* `WV`: West Virginia\n* `WI`: Wisconsin\n* `WY`: Wyoming\n* `YT`: Yukon Territory"
      operationId: postKyc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kyc_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kyc_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/kyc/business/{business_token}':
    get:
      tags:
        - KYC Verification
      summary: List KYC results for a business
      description: "Use this endpoint to retrieve all KYC verification results for a business.\n\nThis endpoint supports <</core-api/sorting-and-pagination, pagination>>.\n\n=== Business KYC outcome reasons (business response)\n\nThe following tables describe KYC outcome reasons potentially returned in the `outcome_reasons` field of the business `result` response object when a business is in a `PENDING` or `FAILURE` state.\nWhere possible, they also describe acceptable documents that your customers can submit to resolve `PENDING` outcomes.\n\n==== Outcome reasons for the business\n\nThese outcome reasons pertain to the business organization itself.\n\n[cols=\",,2a\"]\n|===\n| Outcome Reason and State | Description | Accepted Documents\n\n| AddressIssue   +\n`PENDING`\n| Missing, invalid, mismatched, or PO Box address.\n| One of the following documents.\nDocument must show the full business name and address:\n\n* Bank statement\n* Utility bill\n* Current lease or rental agreement\n* Insurance policy\n\n| BusinessNameIssue   +\n`PENDING`\n| Invalid or mismatched name.\n| Articles or certificate of incorporation.\n\n| OFACIssue   +\n`FAILURE`\n| Business appears on an OFAC list.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n| RegistrationIssue   +\n`PENDING`\n| Business is inactive, not registered, or not in good standing with the Secretary of State; recently reported or not recently updated.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n| Sanctions List Non-OFAC   +\n`PENDING`\n| Business appears on a non-OFAC screening list, bankruptcy, or alert list.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n| TINIssue   +\n`PENDING`\n| Missing, invalid, or mismatched Tax Identification Number (TIN).\n| IRS Notice Letter 147C or CP575, or most recent tax return.\n\n|===\n\n===== Outcome reasons for individuals associated with a business\n\nThese outcome reasons pertain to individuals associated with a business: proprietors, business officers, and beneficial owners.\n\n[cols=\",,2a\"]\n|===\n| Outcome Reason and State | Description | Accepted Documents\n\n| AddressIssue   +\n`PENDING`\n| Missing, invalid, mismatched, or PO Box address.\n| One of the following documents.\nDocument must show the full name and address:\n\n* Unexpired state-issued driver's license or identification card\n* US Military Identification Card\n* Utility bill\n* Bank statement\n* Current rental or lease agreement\n* Mortgage statement\n\n| DateOfBirthIssue   +\n`PENDING`\n| Invalid or mismatched date of birth.\n| Unexpired government-issued photo identification that shows name and date of birth:\n\n* Driver's license or state-issued identification card\n* Passport\n\n| NameIssue   +\n`PENDING`\n| Invalid or mismatched name.\n| Unexpired government-issued photo identification that has name and date of birth:\n\n* Driver's license or state-issued identification card\n* Passport or US passport card\n\n| NoRecordFound   +\n`FAILURE`\n| No records were found for this individual.\n| As no record was found for this individual, supporting documentation must be provided for each attribute (name, date of birth, address, and SSN):\n\n* To verify an individual's address, provide one of these documents:\n** Unexpired state-issued driver's license or identification card\n** US Military Identification Card\n** Utility bill\n** Bank statement\n** Current rental or lease agreement\n** Mortgage statement\n* To verify an individual's name and date of birth, provide one of these documents:\n** Driver's license or state-issued identification card\n** Passport\n* To verify an individual's Social Security Number, provide one of these documents:\n** Social Security card\n** Recent W-2 or 1099 showing nine-digit SSN, full name, and address.\n** ITIN card or document showing ITIN approval\n\n| OFAC   +\n`FAILURE`\n| Appears on an Office of Foreign Assets Control (OFAC) list.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n| RiskIssue   +\n`FAILURE`\n| Appears on a non-OFAC screening list, bankruptcy, or alert list, or has an insufficient record.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n//| SSNFail   +\n`FAILURE`\n//| Social Security Number (SSN) appears on Network Alert List, is of a deceased person, or was issued before the individual's date of birth.\n//| This outcome requires a manual review by Marqeta to determine the next appropriate step.\n//Contact your Marqeta representative.\n//Code removed per https://marqeta.atlassian.net/browse/ID-3574, commenting out in case we ever add it back.\n\n| SSNIssue   +\n`PENDING`\n| Missing, invalid, or mismatched SSN.\n| * Social Security card\n* Recent W-2 or 1099 showing nine-digit SSN, full name, and address.\n* ITIN card or document showing ITIN approval\n\n| warmaddress   +\n`FAILURE`\n| Address is a PO box or other post office address, virtual address, UPS store, mail forward, or mail drop.\nSuch addresses are not valid for KYC verification.\n| One of the following documents.\nDocument must show the full name and valid street address:\n\n* Unexpired state-issued driver's license or identification card\n* US Military Identification Card\n* Utility bill\n* Bank statement\n* Current rental or lease agreement\n* Mortgage statement\n|==="
      operationId: getKycBusinessBusinesstoken
      parameters:
        - name: business_token
          in: path
          description: The unique identifier of the business resource for which you want to retrieve KYC verification results.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: The number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KYCListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/kyc/user/{user_token}':
    get:
      tags:
        - KYC Verification
      summary: List KYC results for a user
      description: "Use this endpoint to retrieve all KYC results for a user.\n\nThis endpoint supports <</core-api/sorting-and-pagination, pagination>>.\n\n=== User KYC failure codes\n\nThe following table lists KYC failure codes potentially returned in the response when a user does not pass verification.\nIt also includes a list of acceptable documents that your customers can submit to resolve failures.\n\n[cols=\",,2a\"]\n|===\n| Failure Code and State | Description | Accepted Documents\n\n| AddressIssue   +\n`FAILURE`\n| Missing, invalid, mismatched, or PO Box address.\n| One of the following documents.\nDocument must show the full name and address:\n\n* Unexpired state-issued driver's license or identification card\n* US Military Identification Card\n* Utility bill\n* Bank statement\n* Current rental or lease agreement\n* Mortgage statement\n\n| DateOfBirthIssue   +\n`FAILURE`\n| Invalid or mismatched date of birth.\n| Unexpired government-issued photo identification that shows name and date of birth:\n\n* Driver's license or state-issued identification card\n* Passport\n\n| EmailIssue   +\n`FAILURE`\n| Invalid, insufficient, mismatched, or other risk signal on provided email address.\n| Unexpired government-issued photo identification that shows name and date of birth:\n\n* Driver's license or state-issued identification card\n* US Passport\n* US Military identification Card\n* Native American tribal identification card\n* Government employee identification card\n* Permanent Resident Alien Card\n\n| NameIssue   +\n`FAILURE`\n| Invalid or mismatched name.\n| Unexpired government-issued photo identification that has name and date of birth:\n\n* Driver's license or state-issued identification card\n* Passport or US passport card\n\n| NoRecordFound   +\n`FAILURE`\n| No records were found for this individual.\n| As no record was found for this individual, supporting documentation must be provided for each attribute (name, date of birth, address, and SSN):\n\n* To verify an individual's address, provide one of these documents:\n** Unexpired state-issued driver's license or identification card\n** US Military Identification Card\n** Utility bill\n** Bank statement\n** Current rental or lease agreement\n** Mortgage statement\n* To verify an individual's name and date of birth, provide one of these documents:\n** Driver's license or state-issued identification card\n** Passport\n* To verify an individual's Social Security Number, provide one of these documents:\n** Social Security card\n** Recent W-2 or 1099 showing nine-digit SSN, full name, and address.\n** ITIN card or document showing ITIN approval\n\n| OFAC   +\n`FAILURE`\n| Appears on an Office of Foreign Assets Control (OFAC) list.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n| PhoneIssue   +\n`FAILURE`\n| Invalid, insufficient, mismatched, or other risk signal on provided phone number.\n| Unexpired government-issued photo identification that shows name and date of birth:\n\n* Driver's license or state-issued identification card\n* US Passport\n* US Military identification Card\n* Native American tribal identification card\n* Government employee identification card\n* Permanent Resident Alien Card\n\n| RiskIssue   +\n`FAILURE`\n| Appears on a non-OFAC screening list, bankruptcy, or alert list, or has an insufficient record.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n//| SSNFail   +\n//`FAILURE`\n//| Social Security Number (SSN) appears on Network Alert List, is of a deceased person, or was issued before the individual's date of birth.\n//| This outcome requires a manual review by Marqeta to determine the next appropriate step.\n//Contact your Marqeta representative.\n//Code removed per https://marqeta.atlassian.net/browse/ID-3574, commenting out in case we ever add it back.\n\n| SSNIssue   +\n`FAILURE`\n| Missing, invalid, or mismatched SSN.\n| * Social Security card\n* Recent W-2 or 1099 showing nine-digit SSN, full name, and address.\n* ITIN card or document showing ITIN approval\n\n| warmaddress   +\n`FAILURE`\n| Address is a PO box or other post office address, virtual address, UPS store, mail forward, or mail drop.\nSuch addresses are not valid for KYC verification.\n| One of the following documents.\nDocument must show the full name and valid street address:\n\n* Unexpired state-issued driver's license or identification card\n* US Military Identification Card\n* Utility bill\n* Bank statement\n* Current rental or lease agreement\n* Mortgage statement\n|==="
      operationId: getKycUserUsertoken
      parameters:
        - name: user_token
          in: path
          description: Unique identifier of the user resource for which you want to retrieve KYC verification results.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KYCListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/kyc/{token}':
    get:
      tags:
        - KYC Verification
      summary: Retrieve KYC result
      description: Use this endpoint to retrieve a specific KYC result.
      operationId: getKycToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the KYC verification for which you want to retrieve the result.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kyc_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /mccgroups:
    get:
      tags:
        - MCC Groups
      summary: List MCC groups
      description: "Use this endpoint to list all MCC groups defined in your program or list MCC groups that contain a specified code.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getMccgroups
      parameters:
        - name: mcc
          in: query
          description: Returns all MCC groups that contain the specified merchant category code.
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: The number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MCCGroupListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - MCC Groups
      summary: Create MCC group
      description: Use this endpoint to create an MCC group.
      operationId: postMccgroups
      requestBody:
        description: MCC group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mcc_group_model'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mcc_group_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/mccgroups/{token}':
    get:
      tags:
        - MCC Groups
      summary: Retrieve MCC group
      description: Use this endpoint to retrieve a specific MCC group.
      operationId: getMccgroupsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the MCC group.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mcc_group_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - MCC Groups
      summary: Update MCC group
      description: "Use this endpoint to update an MCC group.\nInclude the `token` path parameter to identify the MCC group to update.\nYou must pass all the merchant category codes you want included in the group, including existing ones you want to retain."
      operationId: putMccgroupsToken
      parameters:
        - name: token
          in: path
          description: "The unique identifier of the MCC group.\nSend a `GET` request to `/mccgroups` to retrieve MCC group tokens."
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: MCC group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mcc_group_update_model'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mcc_group_update_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /merchantgroups:
    get:
      tags:
        - Merchant Groups
      summary: List merchant groups
      description: "To return an array of all merchant groups, send a `GET` request to the `/merchantgroups` endpoint.\n\nTo return an array of all merchant groups that include a specific merchant identifier, send a `GET` request to the `/merchantgroups` endpoint that includes the merchant identifier in the query parameters."
      operationId: getMerchantGroups
      parameters:
        - name: mid
          in: query
          description: Returns all merchant groups that contain the specified merchant identifier.
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantGroupListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Merchant Groups
      summary: Create merchant group
      description: 'To create a merchant group, send a `POST` request to the `/merchantgroups` endpoint.'
      operationId: postMerchantGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant_group_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/merchantgroups/{token}':
    get:
      tags:
        - Merchant Groups
      summary: Retrieve merchant group
      description: "To retrieve a specific merchant group, send a `GET` request to the `/merchantgroups/{token}` endpoint.\nInclude the merchant group `token` path parameter to specify the merchant group to return."
      operationId: getMerchantGroup
      parameters:
        - name: token
          in: path
          description: Unique identifier of the merchant group.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Merchant Groups
      summary: Update merchant group
      description: "To update a merchant group, send a `PUT` request to the `/merchantgroups/{token}` endpoint.\nInclude the merchant group `token` path parameter to specify the merchant group to update."
      operationId: putMerchantGroupsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the merchant group.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Merchant Group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant_group_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /paymentsources:
    get:
      tags:
        - Payment Sources
      summary: List payment sources
      description: "Retrieve an array of payment sources.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: listPaymentSources
      parameters:
        - name: account_token
          in: query
          description: Unique identifier of the credit account associated with the payment source.
          style: form
          schema:
            type: string
            x-allowableValues: Existing account token
        - name: user_token
          in: query
          description: Unique identifier of the user associated with the payment source.
          style: form
          schema:
            type: string
            x-allowableValues: Existing user token
        - name: business_token
          in: query
          description: Unique identifier of the business associated with the payment source.
          style: form
          schema:
            type: string
            x-allowableValues: Existing business token
        - name: count
          in: query
          description: Number of payment source resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Response containing a list of all payment sources for a provided account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSourcePage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Payment Sources
      summary: Create payment source
      description: Create a payment source from which to make payments.
      operationId: createPaymentSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSourceCreateReq'
        required: true
      responses:
        '201':
          description: Response containing the created payment source
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSourceResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/paymentsources/{token}':
    get:
      tags:
        - Payment Sources
      summary: Retrieve payment source
      description: Retrieve a payment source.
      operationId: retrievePaymentSource
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the payment source to retrieve.\n\nSend a `GET` request to `/credit/paymentsources` to retrieve existing payment source tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing payment source token
      responses:
        '200':
          description: Response containing details for the requested payment source
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSourceResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    put:
      tags:
        - Payment Sources
      summary: Update payment source
      description: Update details of a payment source.
      operationId: updatePaymentSource
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the payment source to retrieve.\n\nSend a `GET` request to `/credit/paymentsources` to retrieve existing payment source tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing payment source token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSourceUpdateReq'
        required: true
      responses:
        '200':
          description: Response containing updated payment source
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSourceResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /peertransfers:
    post:
      tags:
        - Peer Transfers
      summary: Create peer transfer
      description: "Use this endpoint to request a peer transfer.\nAdd the source details to the body of the request in link:http://www.json.org/[JSON, window=\"_blank\"] format.\n\nWhen creating a peer transfer request, you must pass in both a token to identify the transfer sender (either `sender_user_token` or `sender_business_token`) and a token to identify the transfer recipient (either `recipient_user_token` or `recipient_business_token`).\nThe sender and recipient objects must already exist.\n\n[NOTE]\nThis feature is disabled by default and requires activation by Marqeta.   +\n  +\nThis feature enables you to transfer or reallocate funds where the `sender_*\\_token` and the `recipient_*_token` belong to the same program.\nIt does not allow you to transfer or reallocate funds between different programs.\nContact your Marqeta representative for more information."
      operationId: postPeertransfers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/peer_transfer_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/peertransfers/user/{user_or_business_token}':
    get:
      tags:
        - Peer Transfers
      summary: List peer transfers by account holder
      description: "Use this endpoint to list peer transfers sent or received by a particular account holder.\nInclude a user or business token as a path parameter to identify the account holder whose transfers you want to list.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getPeertransfersUserUserorbusinesstoken
      parameters:
        - name: user_or_business_token
          in: path
          description: "Existing user or business token.\n\nSend a `GET` request to `/users` to retrieve user tokens or to `/businesses` to retrieve business tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of peer transfer resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 25
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/peertransfers/user/{user_or_business_token}/recipient':
    get:
      tags:
        - Peer Transfers
      summary: List received peer transfers
      description: "Use this endpoint to list peer transfers sent by an account holder.\nInclude a user or business token as a path parameter to identify the recipient.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getPeertransfersUserUserorbusinesstokenRecipient
      parameters:
        - name: user_or_business_token
          in: path
          description: "Existing user or business token.\n\nSend a `GET` request to `/users` to retrieve user tokens or to `/businesses` to retrieve business tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of peer transfer resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 25
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/peertransfers/user/{user_or_business_token}/sender':
    get:
      tags:
        - Peer Transfers
      summary: List sent peer transfers
      description: "Use this endpoint to list peer transfers sent by an account holder.\nInclude a user or business token as a path parameter to identify the sender.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getPeertransfersUserUserorbusinesstokenSender
      parameters:
        - name: user_or_business_token
          in: path
          description: "Existing user or business token.\n\nSend a `GET` request to `/users` to retrieve user tokens or to `/businesses` to retrieve business tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of peer transfer resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 25
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/peertransfers/{token}':
    get:
      tags:
        - Peer Transfers
      summary: Retrieve peer transfer
      description: "Use this endpoint to retrieve a peer transfer request.\nInclude the peer transfer `token` as a path parameter in the URL to identify the peer transfer to return."
      operationId: getPeertransfersToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the peer transfer.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /ping:
    get:
      tags:
        - ping
      summary: Returns a heartbeat to the consumer
      description: Tests if the Marqeta server is available and responsive.
      operationId: getPing
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ping_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - ping
      summary: Echo test for sending payload to server
      operationId: postPing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/echo_ping_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo_ping_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /pins:
    put:
      tags:
        - PINs
      summary: Create or update PIN
      description: "Creates or updates a personal identification number (PIN) for an existing card.\n\nIf you want to manage a card's PIN, first create a new control token for the card by sending a `POST` request to `/pins/controltoken`, and then use that token to update the PIN.\nYou must create a card before you can manage a PIN.\n\nUnless PIN reveal functionality has been enabled for your program, you cannot retrieve a PIN that has previously been created.\nIf the PIN has been forgotten, you must either update the card's PIN or create a new card and PIN.\n\nIf you have enabled PIN reveal functionality for your program, you can send a `POST` request to the `/pins/reveal` endpoint to retrieve an existing PIN.\nSee <</core-api/pins#revealPins, Reveal PIN>> on this page for details.\n\n[WARNING]\nSending a request to this endpoint requires PCI DSS compliance.\nYou must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date."
      operationId: putPins
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pin_request'
      responses:
        '204':
          description: PIN was successfully set
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /pins/controltoken:
    post:
      tags:
        - PINs
      summary: Create PIN control token
      description: "Creates a control token necessary when creating or updating a card's personal identification number (PIN).\n\nCreating, updating, or revealing a card's PIN is a two-step process.\nYou must first create the control token that is required to create the PIN, and then you create, update, or reveal the PIN itself.\n\nThe lifespan of the control token in a production environment is either five minutes or one hour from creation, depending on the token type.\nIf multiple tokens are requested for a single card, only the most recent one is valid.\nOnce redeemed, a token cannot be reused."
      operationId: postPinsControltoken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/control_token_request'
      responses:
        '201':
          description: Control token created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/control_token_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /pins/reveal:
    post:
      tags:
        - PINs
      summary: Reveal PIN
      description: "Reveals the personal identification number (PIN) of an existing, active card.\n\n*WARNING:* Only use this endpoint to access a PIN in order to reveal it to its cardholder.\nDo not use this endpoint for the purpose of storing a PIN at any location.\n\nSending a request to this endpoint requires PCI DSS compliance.\nYou must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date.\n\nIf you want instead to update a card's PIN, send a `PUT` request to the `/pins` endpoint.\nSee <</core-api/pins#putPins, Create or Update PIN>> on this page for details.\n\nRevealing a card's PIN is a two-step process.\nYou must first create a new control token for the card by sending a `POST` request to `/pins/controltoken`, and then use that token to reveal the PIN."
      operationId: revealPins
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pin_reveal_request'
      responses:
        '204':
          description: PIN was successfully revealed
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /policies/aprs:
    get:
      tags:
        - Policies (Beta)
      summary: List APR policies
      description: "Retrieve an array of existing APR policies.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: getAprPolicies
      parameters:
        - name: count
          in: query
          description: Number of APR policy resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `effectiveDate`, and not by the field names appearing in response bodies such as `effective_date`."
          style: form
          schema:
            enum:
              - effectiveDate
              - '-effectiveDate'
            type: string
            default: '-effectiveDate'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAprsPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Policies (Beta)
      summary: Create APR policy
      description: Create a new annual percentage rate (APR) policy.
      operationId: createAprPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyAprCreateReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAprResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/policies/aprs/{token}':
    get:
      tags:
        - Policies (Beta)
      summary: Retrieve APR policy
      description: "Retrieve a specific annual percentage rate (APR) policy.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: getAprPolicyByToken
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the APR policy to retrieve.\n\nSend a `GET` request to `/policies/aprs` to retrieve existing APR policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing APR policy token
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAprResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    put:
      tags:
        - Policies (Beta)
      summary: Update APR policy
      description: Update a specific APR policy.
      operationId: updateAprPolicyWithToken
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the APR policy to update.\n\nSend a `GET` request to `/policies/aprs` to retrieve existing APR policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing APR policy token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyAprUpdateReq'
        required: true
      responses:
        '200':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAprResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/policies/aprs/{token}/clone':
    post:
      tags:
        - Policies (Beta)
      summary: Clone APR policy
      description: Create a new annual percentage rate (APR) policy based on an existing APR policy.
      operationId: cloneAprPolicy
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the APR policy to clone.\n\nSend a `GET` request to `/policies/aprs` to retrieve existing APR policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing APR policy token
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAprResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/policies/aprs/{token}/schedule':
    get:
      tags:
        - Policies (Beta)
      summary: List APR schedules
      description: "Retrieve an array of the historic annual percentage rate (APR) schedules on a specific APR policy.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: getAprPolicySchedulesWithToken
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the APR policy on which to retrieve APR schedules.\n\nSend a `GET` request to `/policies/aprs` to retrieve existing product policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing APR policy token
        - name: count
          in: query
          description: Number of APR schedule resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAprsPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /policies/documents:
    get:
      tags:
        - Policies (Beta)
      summary: List document policies
      description: "Retrieve an array of existing document policies.\nA document policy consists of all the pre- and post-application disclosures and credit program documents known as assets and templates.\nAssets contain finalized values after a bundle is created; templates do not contain finalized values.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: listDocumentPolicies
      parameters:
        - name: count
          in: query
          description: Number of document policy resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesDocumentPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Policies (Beta)
      summary: Create document policy
      description: "Create a new document policy, which consists of all the pre- and post-application disclosures and credit program documents known as assets and templates.\nAssets contain finalized values after a bundle is created; templates do not contain finalized values."
      operationId: createDocumentPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyDocumentCreateReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDocumentResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/policies/documents/{token}':
    get:
      tags:
        - Policies (Beta)
      summary: Retrieve document policy
      description: "Retrieve a specific document policy, which consists of all the pre- and post-application disclosures and credit program documents known as assets and templates.\nAssets contain finalized values after a bundle is created; templates do not contain finalized values."
      operationId: retrieveDocumentPolicy
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the document policy to retrieve.\n\nSend a `GET` request to `/policies/documents` to retrieve existing document policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing document policy token
      responses:
        '200':
          description: A JSON object containing document policy information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDocumentResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    put:
      tags:
        - Policies (Beta)
      summary: Update document policy
      description: "Update a specific document policy, which consists of all the pre- and post-application disclosures and credit program documents known as assets and templates.\nAssets contain finalized values after a bundle is created; templates do not contain finalized values."
      operationId: updateDocumentPolicy
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the document policy to update.\n\nSend a `GET` request to `/policies/documents` to retrieve existing document policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing document policy token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyDocumentUpdateReq'
        required: true
      responses:
        '200':
          description: A JSON object containing document policy information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDocumentResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/policies/documents/{token}/clone':
    post:
      tags:
        - Policies (Beta)
      summary: Clone document policy
      description: "Create a new document policy based on an existing document policy.\nA document policy consists of all the pre- and post-application disclosures and credit program documents known as assets and templates.\nAssets contain finalized values after a bundle is created; templates do not contain finalized values."
      operationId: cloneDocumentPolicy
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the document policy to clone.\n\nSend a `GET` request to `/policies/documents` to retrieve existing document policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing document policy token
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDocumentResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /policies/fees:
    get:
      tags:
        - Policies (Beta)
      summary: List fee policies
      description: "Retrieve an array of existing fee policies.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: getFeePolicies
      parameters:
        - name: count
          in: query
          description: Number of fee policy resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyFeesPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Policies (Beta)
      summary: Create fee policy
      description: Create a new fee policy.
      operationId: createFeePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyFeeCreateReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyFeeResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/policies/fees/{token}':
    get:
      tags:
        - Policies (Beta)
      summary: Retrieve fee policy
      description: "Retrieve a specific fee policy.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: getFeePolicyByToken
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the fee policy to retrieve.\n\nSend a `GET` request to `/policies/fee` to retrieve existing fee policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing fee policy token
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyFeeResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    put:
      tags:
        - Policies (Beta)
      summary: Update fee policy
      description: Update a specific fee policy.
      operationId: updateFeePolicyWithToken
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the fee policy to retrieve.\n\nSend a `GET` request to `/policies/fee` to retrieve existing fee policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing fee policy token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyFeeUpdateReq'
        required: true
      responses:
        '200':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyFeeResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/policies/fees/{token}/clone':
    post:
      tags:
        - Policies (Beta)
      summary: Clone fee policy
      description: Create a new fee policy based on an existing fee policy.
      operationId: cloneFeePolicy
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the fee policy to clone.\n\nSend a `GET` request to `/policies/fee` to retrieve existing fee policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing fee policy token
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyFeeResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /policies/products:
    get:
      tags:
        - Policies (Beta)
      summary: List credit product policies
      description: "Retrieve an array of existing credit product policies.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: listProductPolicies
      parameters:
        - name: count
          in: query
          description: Number of product policy resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesProductPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Policies (Beta)
      summary: Create credit product policy
      description: Create a new credit product policy.
      operationId: createProductPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyProductCreateReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyProductResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/policies/products/{token}':
    get:
      tags:
        - Policies (Beta)
      summary: Retrieve credit product policy
      description: Retrieve a specific credit product policy.
      operationId: retrieveProductPolicy
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the credit product policy to retrieve.\n\nSend a `GET` request to `/policies/products` to retrieve existing credit product policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing credit product policy token
      responses:
        '200':
          description: A JSON object containing product policy information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyProductResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    put:
      tags:
        - Policies (Beta)
      summary: Update credit product policy
      description: Update a specific credit product policy.
      operationId: updateProductPolicy
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the credit product policy to retrieve.\n\nSend a `GET` request to `/policies/products` to retrieve existing credit product policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing credit product policy token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyProductUpdateReq'
        required: true
      responses:
        '200':
          description: A JSON object containing product policy information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyProductResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/policies/products/{token}/clone':
    post:
      tags:
        - Policies (Beta)
      summary: Clone credit product policy
      description: Create a new credit product policy based on an existing credit product policy.
      operationId: cloneProductPolicy
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the credit product policy to clone.\n\nSend a `GET` request to `/policies/products` to retrieve existing credit product policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing credit product policy token
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyProductResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /policies/rewards:
    get:
      tags:
        - Policies (Beta)
      summary: List reward policies
      description: "Retrieve an array of reward policies.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: listRewardPolicies
      parameters:
        - name: count
          in: query
          description: Number of reward policy resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRewardPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Policies (Beta)
      summary: Create reward policy
      description: Create a new reward policy.
      operationId: createRewardPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRewardReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRewardResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/policies/rewards/{token}':
    get:
      tags:
        - Policies (Beta)
      summary: Retrieve reward policy
      description: Retrieve a reward policy.
      operationId: retrieveRewardPolicy
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the reward policy to retrieve.\n\nSend a `GET` request to `/policies/rewards` to retrieve existing reward policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward policy token
      responses:
        '200':
          description: A JSON object containing reward policy information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRewardResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    put:
      tags:
        - Policies (Beta)
      summary: Update reward policy
      description: Update a reward policy.
      operationId: updateRewardPolicy
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the reward policy to update.\n\nSend a `GET` request to `/policies/rewards` to retrieve existing reward policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward policy token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRewardReq'
        required: true
      responses:
        '200':
          description: A JSON object containing reward policy information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRewardResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/policies/rewards/{token}/clone':
    post:
      tags:
        - Policies (Beta)
      summary: Clone reward policy
      description: Create a new reward policy based on existing reward policy.
      operationId: cloneRewardPolicy
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the reward policy to clone.\n\nSend a `GET` request to `/policies/rewards` to retrieve existing reward policy tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward policy token
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRewardResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /products:
    get:
      tags:
        - Credit Products
      summary: List credit products
      description: "Retrieve an array of credit products.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: listProducts
      parameters:
        - name: status
          in: query
          description: An array of statuses by which to filter credit products.
          style: form
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceStatus'
        - name: count
          in: query
          description: Number of credit product resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Credit Products
      summary: Create credit product
      description: Create a credit product.
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/products/{token}':
    get:
      tags:
        - Credit Products
      summary: Retrieve credit product
      description: Retrieve a credit product.
      operationId: retrieveProduct
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the credit product to retrieve.\n\nSend a `GET` request to `/credit/products` to retrieve existing credit product tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing credit product token
      responses:
        '200':
          description: A JSON object containing product information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/products/{token}/lineage':
    get:
      tags:
        - Credit Products
      summary: Retrieve credit product lineage
      description: "Retrieve the lineage of a credit product, which is an array of related credit products whose lineage can be traced back to the same original credit product.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: lineageProducts
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the credit product whose lineage you want to retrieve.\n\nSend a `GET` request to `/credit/products` to retrieve existing credit product tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing credit product token
        - name: status
          in: query
          description: An array of statuses by which to filter credit products.
          style: form
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceStatus'
        - name: count
          in: query
          description: Number of credit product resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /programgateways:
    get:
      tags:
        - Program Gateways
      summary: List Program Gateways
      description: "Retrieve an array of existing Credit Program Gateways.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: listProgramGateways
      parameters:
        - name: count
          in: query
          description: Number of program gateway resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE:*\nYou must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`."
          style: form
          schema:
            enum:
              - lastModifiedTime
              - '-lastModifiedTime'
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramGatewayPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Program Gateways
      summary: Create Program Gateway
      description: "Create a new Credit Program Gateway.\n\nUse this endpoint to configure your Program Gateway to receive gateway requests from Marqeta's credit platform.\nYou can create multiple Program Gateways, but only one can be active per credit program.\n\n[NOTE]\nTo create a Program Gateway, you must have consumer or admin credentials."
      operationId: createProgramGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgramGatewayCreateReq'
        required: true
      responses:
        '201':
          description: Expected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramGatewayResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/programgateways/{token}':
    get:
      tags:
        - Program Gateways
      summary: Retrieve Program Gateway
      description: Retrieve an existing Credit Program Gateway.
      operationId: retrieveProgramGateway
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the Program Gateway to retrieve.\n\nSend a `GET` request to `/credit/programgateways` to retrieve existing Program Gateway tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing Program Gateway token
      responses:
        '200':
          description: Response containing details for the requested Program Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramGatewayResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    put:
      tags:
        - Program Gateways
      summary: Update Program Gateway
      description: "Update an existing Credit Program Gateway.\n\nYou may want to update a Program Gateway if you are switching it to active or inactive, updating the URL, username, or password, and more."
      operationId: updateProgramGateway
      parameters:
        - name: token
          in: path
          description: Unique identifier of the Program Gateway to update.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing Program Gateway token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgramGatewayUpdateReq'
        required: true
      responses:
        '200':
          description: Response containing updated Program Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramGatewayResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /programreserve/balances:
    get:
      tags:
        - Program Reserve
      summary: Retrieve reserve account balances
      description: Use this endpoint to return balances for your program reserve account.
      operationId: getProgramreserveBalances
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_reserve_account_balance'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /programreserve/transactions:
    get:
      tags:
        - Program Reserve
      summary: List program reserve transactions
      description: "Use this endpoint to return a list of credits and debits made to your program reserve account.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: getProgramreserveTransactions
      parameters:
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramReserveTransactionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /programtransfers:
    get:
      tags:
        - Program Transfers
      summary: List program transfers
      description: "Use this endpoint to list all program transfers.\n\nTo narrow your result set to program transfers of a particular type or that are associated with a particular account holder, include the appropriate parameters from the following URL Query Parameters table.\nThis endpoint also supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, pagination>>, and <</core-api/sorting-and-pagination, sorting>>."
      operationId: getProgramtransfers
      parameters:
        - name: count
          in: query
          description: Number of program transfers to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: user_token
          in: query
          description: "Unique identifier of the user account holder whose program transfers you want to retrieve.\n\nSend a `GET` request to `/users` to retrieve user tokens."
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: "Unique identifier of the business account holder whose program transfers you want to retrieve.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
          style: form
          schema:
            type: string
        - name: type_token
          in: query
          description: Unique identifier of the program transfer type to retrieve.
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTransferListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Program Transfers
      summary: Create program transfer
      description: "Use this endpoint to create a program transfer.\nAdd the program transfer details to the body of the request in link:http://www.json.org/[JSON, window=\"_blank\"] format.\n\nInclude either `user_token` or `business_token` in the message body to specify the account holder whose general purpose account (GPA) will be debited by the program transfer.\nThe user or business must already exist.\n\n[NOTE]\nIf the GPA has insufficient funds to cover both the amount of the program transfer and all attached fees, then no funds are transferred."
      operationId: postProgramtransfers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/program_transfer'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /programtransfers/types:
    get:
      tags:
        - Program Transfers
      summary: List program transfer types
      description: "Use this endpoint to list all program transfer types.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, pagination>>, and <</core-api/sorting-and-pagination, sorting>>."
      operationId: getProgramtransfersTypes
      parameters:
        - name: count
          in: query
          description: Number of program transfer types to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTransferTypeListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Program Transfers
      summary: Create program transfer type
      description: "Use this endpoint to create a program transfer type.\nAdd the program transfer details to the body of the request in link:http://www.json.org/[JSON, window=\"_blank\"] format.\n\nYou are required to pass in a `program_funding_source_token` to associate a program funding source with the program transfer type.\nYou must therefore create a program funding source before creating a program transfer type."
      operationId: postProgramtransfersTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/program_transfer_type_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_transfer_type_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/programtransfers/types/{type_token}':
    get:
      tags:
        - Program Transfers
      summary: Retrieve program transfer type
      description: "Use this endpoint to retrieve a specific program transfer.\nInclude the `type_token` path parameter to indicate the program transfer type to return."
      operationId: getProgramtransfersTypesTypetoken
      parameters:
        - name: type_token
          in: path
          description: Unique identifier of the program transfer type.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_transfer_type_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Program Transfers
      summary: Update program transfer type
      description: "Use this endpoint to update a program transfer type.\nInclude the `type_token` path parameter to indicate the program transfer type to update.\nAdd the modified detail parameters to the body of the request in link:http://www.json.org/[JSON, window=\"_blank\"] format.\nOnly values of parameters in the request are modified; all others are left unchanged."
      operationId: putProgramtransfersTypesTypetoken
      parameters:
        - name: type_token
          in: path
          description: Unique identifier of the program transfer type.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/program_transfer_type_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_transfer_type_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/programtransfers/{token}':
    get:
      tags:
        - Program Transfers
      summary: Retrieve program transfer
      description: "Use this endpoint to retrieve a specific program transfer.\nInclude the program transfer `token` path parameter to specify the program transfer to retrieve."
      operationId: getProgramtransfersToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program transfer.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /pushtocards/disburse:
    get:
      tags:
        - push to card
      summary: Lists all push-to-card disbursements
      operationId: getPushtocardsDisburse
      parameters:
        - name: count
          in: query
          description: Number of push-to-card disbursements to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushToCardDisburseListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - push to card
      summary: Initiates a push-to-card money disbursement
      operationId: postPushtocardsDisburse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/push_to_card_disburse_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_disbursement_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/pushtocards/disburse/{token}':
    get:
      tags:
        - push to card
      summary: Returns a specific push-to-card disbursement
      operationId: getPushtocardsDisburseToken
      parameters:
        - name: token
          in: path
          description: Push-to-card disbursement token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_disbursement_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /pushtocards/paymentcard:
    get:
      tags:
        - push to card
      summary: Returns all push-to-card payment card details
      operationId: getPushtocardsPaymentcard
      parameters:
        - name: count
          in: query
          description: Number of push-to-card payment cards to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: user_token
          in: query
          description: User token
          required: true
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushToCardListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - push to card
      summary: Adds an external card to which funds will be pushed
      operationId: postPushtocardsPaymentcard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/push_to_card_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/pushtocards/paymentcard/{token}':
    get:
      tags:
        - push to card
      summary: Returns a specific paymentcard object
      operationId: getPushtocardsPaymentcardToken
      parameters:
        - name: token
          in: path
          description: Push-to-card token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /realtimefeegroups:
    get:
      tags:
        - Real-Time Fee Groups
      summary: List real-time fee groups
      description: "Use this endpoint to list existing real-time fee groups.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getRealtimefeegroups
      parameters:
        - name: count
          in: query
          description: Number of real-time fee groups to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\n\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealTimeFeeGroupListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Real-Time Fee Groups
      summary: Create real-time fee group
      description: Use this endpoint to create a real-time fee group.
      operationId: postRealtimefeegroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/real_time_fee_group_create_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/real_time_fee_group'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/realtimefeegroups/{token}':
    get:
      tags:
        - Real-Time Fee Groups
      summary: Retrieve real-time fee group
      description: "Use this endpoint to retrieve a specific real-time fee group.\nInclude the real-time fee group `token` path parameter to specify the real-time fee group to return."
      operationId: getRealtimefeegroupsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the real-time fee group.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/real_time_fee_group'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Real-Time Fee Groups
      summary: Update real-time fee group
      description: "Use this endpoint to update a real-time fee group.\nInclude the real-time fee group `token` path parameter to specify the real-time fee group to update."
      operationId: putRealtimefeegroupsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the real-time fee group.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/real_time_fee_group_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/real_time_fee_group'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /rewardprograms:
    get:
      tags:
        - Reward Programs (Beta)
      summary: List reward programs
      description: Retrieve an array of reward programs.
      operationId: retrieveRewardPrograms
      parameters:
        - name: account_token
          in: query
          description: The unique identifier of the credit account for which you want to retrieve reward programs.
          style: form
          schema:
            type: string
            x-allowableValues: 36 char max
        - name: is_active
          in: query
          description: A value of `true` returns active resources; `false` returns inactive resources.
          style: form
          schema:
            type: boolean
            x-allowableValues: '`true`, `false`'
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            default: 5
            x-allowableValues: 1–100
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int64
            default: 0
            x-allowableValues: 0 min
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE*:\nYou must sort using system field names such as `updatedTime`, and not by the field names appearing in response bodies such as `updated_time`."
          style: form
          schema:
            enum:
              - updatedTime
              - '-updatedTime'
            type: string
            default: '-updatedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardProgramsPageResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  /rewardprograms/redemptions:
    get:
      tags:
        - reward programs
        - redemptions
      summary: retrieves all completed redemptions by settlement date
      description: retrieves all completed redemptions by settlement date
      operationId: retrieveRedemptionsBySettlementDate
      parameters:
        - name: destination
          in: query
          description: Specifies the destination for external redemptions to filter for.
          style: form
          schema:
            $ref: '#/components/schemas/DestinationType'
        - name: settlement_start_date
          in: query
          description: Settlement start date to filter by.
          required: true
          style: form
          schema:
            type: string
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
        - name: settlement_end_date
          in: query
          description: Settlement end date to filter by.
          required: true
          style: form
          schema:
            type: string
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            default: 5
            x-allowableValues: 1–100
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int64
            default: 0
            x-allowableValues: 0 min
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedemptionsBySettlementDatePage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}':
    get:
      tags:
        - Reward Programs (Beta)
      summary: Retrieve reward program
      description: Retrieve a specific reward program.
      operationId: retrieveRewardProgram
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardProgramsResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
    put:
      tags:
        - Reward Programs (Beta)
      summary: Activate or deactivate reward program
      description: "Activate or deactivate a specific reward program.\n\n[CAUTION]\nThis endpoint is available for banks only.\nDo not use this endpoint if you are a brand contributor."
      operationId: updateRewardProgram
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRewardProgramsRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardProgramsResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}/balances':
    get:
      tags:
        - Reward Programs (Beta)
      summary: Retrieve reward program balances
      description: "Retrieve the balances for a specific reward program.\n\nThe reward accrual service calculates values to four-decimal precision, however the `/credit/rewardprograms/{token}/entries/balance` endpoint returns pending and accrued balances to two-decimal precision."
      operationId: retrieveRewardProgramBalance
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardProgramsBalancesResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}/entries':
    get:
      tags:
        - Reward Programs (Beta)
      summary: List reward entries
      description: "Retrieve an array of reward entries on a specific reward program.\n\nThe reward accrual service calculates values to four-decimal precision, however the `/credit/rewardprograms/{token}/entries/balance` endpoint returns pending and accrued balances to two-decimal precision."
      operationId: retrieveRewardProgramEntries
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
        - name: start_date
          in: query
          description: 'The starting date (or date-time) of a date range from which to return resources, in UTC.'
          style: form
          schema:
            type: string
            format: date-time
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
        - name: end_date
          in: query
          description: 'The ending date (or date-time) of a date range from which to return resources, in UTC.'
          style: form
          schema:
            type: string
            format: date-time
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            default: 5
            x-allowableValues: 1–100
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int64
            default: 0
            x-allowableValues: 0 min
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE*:\nYou must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`."
          style: form
          schema:
            enum:
              - createdTime
              - '-createdTime'
            type: string
            default: '-createdTime'
        - name: status
          in: query
          description: Status of the reward entries in the returned array.
          style: form
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RewardEntryStatus'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardProgramsEntriesPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
    post:
      tags:
        - Reward Programs (Beta)
      summary: Create reward entry
      description: "Create a reward entry on a specific reward program.\nUse this endpoint to manually create a reward entry if an existing reward is being disputed."
      operationId: postRewardProgramEntry
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRewardProgramsEntriesRequest'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardProgramsEntriesResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}/entries/balance':
    get:
      tags:
        - Reward Programs (Beta)
      summary: Retrieve reward entries balance
      description: "Retrieve the balance of reward entries, which is the accrued rewards amount, within a specified date range.\n\nThe reward accrual service calculates values to four-decimal precision, however the `/credit/rewardprograms/{token}/entries/balance` endpoint returns pending and accrued balances to two-decimal precision."
      operationId: retrieveRewardProgramEntriesBalance
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
        - name: start_date
          in: query
          description: 'The starting date (or date-time) of a date range from which to return resources, in UTC.'
          required: true
          style: form
          schema:
            type: string
            format: date-time
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
        - name: end_date
          in: query
          description: 'The ending date (or date-time) of a date range from which to return resources, in UTC.'
          required: true
          style: form
          schema:
            type: string
            format: date-time
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardProgramsEntriesBalanceResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}/entries/{entry_token}':
    get:
      tags:
        - Reward Programs (Beta)
      summary: Retrieve reward entry
      description: "Retrieve a specific reward entry on a reward program.\n\nThe reward accrual service calculates values to four-decimal precision, however the `/credit/rewardprograms/{token}/entries/balance` endpoint returns pending and accrued balances to two-decimal precision."
      operationId: retrieveRewardProgramEntry
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
        - name: entry_token
          in: path
          description: Unique identifier of the reward entry to retrieve.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward entry token
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardProgramsEntriesResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}/journalentries':
    get:
      tags:
        - Reward Programs (Beta)
      summary: Retrieve reward entries by list of journal entry tokens
      description: Retrieve an array of reward entries on a specific reward program by multiple journal entries.
      operationId: getRewardEntriesByJournalEntryTokens
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            default: 5
            x-allowableValues: 1–100
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int64
            default: 0
            x-allowableValues: 0 min
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE*:\nYou must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`."
          style: form
          schema:
            enum:
              - createdTime
              - '-createdTime'
            type: string
            default: '-createdTime'
        - name: journal_entry_tokens
          in: query
          description: List of journal entry unique identifiers.
          required: true
          style: form
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardEntriesJournalEntriesPageResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}/redemptions':
    get:
      tags:
        - Reward Redemptions (Beta)
      summary: List reward redemptions
      description: Retrieve an array of reward redemptions for a specific reward program.
      operationId: retrieveRedemptions
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
        - name: start_date
          in: query
          description: 'The starting date (or date-time) of a date range from which to return resources, in UTC.'
          style: form
          schema:
            type: string
            format: date-time
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
        - name: end_date
          in: query
          description: 'The ending date (or date-time) of a date range from which to return resources, in UTC.'
          style: form
          schema:
            type: string
            format: date-time
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            default: 5
            x-allowableValues: 1–100
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int64
            default: 0
            x-allowableValues: 0 min
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE*:\nYou must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`."
          style: form
          schema:
            enum:
              - createdTime
              - '-createdTime'
            type: string
            default: '-createdTime'
        - name: type
          in: query
          description: Type of reward redemptions in the returned array.
          style: form
          schema:
            $ref: '#/components/schemas/RedemptionType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedemptionsPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
    post:
      tags:
        - Reward Redemptions (Beta)
      summary: Create reward redemption
      description: Create a redemption to redeem rewards on a specific reward program.
      operationId: postRewardProgramRedemption
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRedemptionsRequest'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedemptionsResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}/redemptions/balance':
    get:
      tags:
        - Reward Redemptions (Beta)
      summary: Retrieve reward redemption balance
      description: Retrieve the balance for reward redemptions within a specified date range.
      operationId: retrieveRedemptionsBalance
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
        - name: start_date
          in: query
          description: 'The starting date (or date-time) of a date range from which to return resources, in UTC.'
          style: form
          schema:
            type: string
            format: date-time
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
        - name: end_date
          in: query
          description: 'The ending date (or date-time) of a date range from which to return resources, in UTC.'
          style: form
          schema:
            type: string
            format: date-time
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
        - name: type
          in: query
          description: Type of reward redemptions in the returned array.
          style: form
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RedemptionType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedemptionsBalanceResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}/redemptions/{redemption_token}':
    get:
      tags:
        - Reward Redemptions (Beta)
      summary: Retrieve reward redemption
      description: Retrieve a specific redemption for a specific reward program.
      operationId: getRedemption
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
        - name: redemption_token
          in: path
          description: Unique identifier of the reward redemption.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing redemption token
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedemptionsResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}/redemptions/{redemption_token}/transitions':
    post:
      tags:
        - Reward Redemptions (Beta)
      summary: Transition reward redemption status
      description: Transition the current status of a reward redemption to a new status.
      operationId: postRedemptionTransition
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
        - name: redemption_token
          in: path
          description: Unique identifier of the reward redemption.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing redemption token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRedemptionTransitionsRequest'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedemptionTransitionsResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}/rulesconfigs':
    get:
      tags:
        - Reward Programs (Beta)
      summary: List rules configurations
      description: Retrieve an array of rules configs for a specific reward program.
      operationId: retrieveRewardProgramsRulesConfig
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
        - name: is_active
          in: query
          description: A value of `true` returns active resources; `false` returns inactive resources.
          style: form
          schema:
            type: boolean
            x-allowableValues: '`true`, `false`'
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            default: 5
            x-allowableValues: 1–100
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int64
            default: 0
            x-allowableValues: 0 min
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE*:\nYou must sort using system field names such as `updatedTime`, and not by the field names appearing in response bodies such as `updated_time`."
          style: form
          schema:
            enum:
              - updatedTime
              - '-updatedTime'
            type: string
            default: '-updatedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardProgramsRulesConfigsPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  '/rewardprograms/{token}/rulesconfigs/applied':
    get:
      tags:
        - Reward Programs (Beta)
      summary: Retrieve last rules configuration applied
      description: Retrieve the most recently applied rules config on a specific reward program.
      operationId: retrieveRewardProgramsRulesConfigApplied
      parameters:
        - name: token
          in: path
          description: Unique identifier of the reward program.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing reward program token
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardProgramsRulesConfigsResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - nileToken: [ ]
        - zionToken: [ ]
  /simulate/authorization:
    post:
      tags:
        - simulate
      summary: Simulates an authorization
      operationId: postSimulateAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_request_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/authorization/advice:
    post:
      tags:
        - simulate
      summary: Simulates an authorization advice transaction
      operationId: postSimulateAuthorizationAdvice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorization_advice_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/clearing:
    post:
      tags:
        - simulate
      summary: Simulates a clearing/settlement transaction
      operationId: postSimulateClearing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearingModel'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/directdeposits:
    post:
      tags:
        - simulate
      summary: Simulates the creation of direct deposit
      operationId: postSimulateDirectdeposits
      requestBody:
        description: Direct deposit simulate request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectDepositRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDepositResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/financial:
    post:
      tags:
        - simulate
      summary: Simulates a financial request (PIN debit) transaction with optional cash back
      operationId: postSimulateFinancial
      requestBody:
        description: Financial request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/financial_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/financial/advice:
    post:
      tags:
        - simulate
      summary: Simulates a financial advice transaction
      operationId: postSimulateFinancialAdvice
      requestBody:
        description: Financial advice request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorization_advice_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/financial/balanceinquiry:
    post:
      tags:
        - simulate
      summary: Simulates a balance inquiry
      operationId: postSimulateFinancialBalanceinquiry
      requestBody:
        description: Balance inquiry request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/balance_inquiry_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/financial/originalcredit:
    post:
      tags:
        - simulate
      summary: Simulates an orignal credit transaction
      operationId: postSimulateFinancialOriginalcredit
      requestBody:
        description: Orignal Credit request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orignalcredit_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/financial/withdrawal:
    post:
      tags:
        - simulate
      summary: Simulates an ATM withdrawal transaction
      operationId: postSimulateFinancialWithdrawal
      requestBody:
        description: ATM withdrawal request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/withdrawal_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/reversal:
    post:
      tags:
        - simulate
      summary: Simulates a reversal transaction
      operationId: postSimulateReversal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReversalModel'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /substatuses:
    get:
      tags:
        - Substatus
      summary: List substatuses
      description: Get list of substatuses
      operationId: listSubStatuses
      parameters:
        - name: account_token
          in: query
          description: The account token to filter by.
          style: form
          schema:
            type: string
        - name: user_token
          in: query
          description: The user token to filter by.
          style: form
          schema:
            type: string
        - name: is_active
          in: query
          style: form
          schema:
            type: boolean
        - name: count
          in: query
          description: The number of resources to retrieve.
          style: form
          schema:
            maximum: 100
            minimum: 1
            type: integer
            default: 5
        - name: start_index
          in: query
          description: Show n-th paginated page
          style: form
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            enum:
              - effectiveDate
              - '-effectiveDate'
            type: string
            default: '-effectiveDate'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubstatusPage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    post:
      tags:
        - Substatus
      summary: Create substatus
      description: Create a sub status for an existing user or account.
      operationId: createSubStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubstatusCreateReq'
        required: true
      responses:
        '201':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubstatusResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/substatuses/{substatus_token}':
    get:
      tags:
        - Substatus
      summary: Retrieve Substatus
      description: Retrieve a user or account substatus.
      operationId: retrieveSubStatus
      parameters:
        - name: substatus_token
          in: path
          description: "The unique identifier of the substatus to retrieve.\n\nSend a `GET` request to `/credit/substatuses` to retrieve existing substatus tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing substatus token
      responses:
        '200':
          description: A JSON object containing substatus information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubstatusResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
    put:
      tags:
        - Substatus
      summary: Update substatus
      description: Update substatus for an user or account.
      operationId: updateSubStatus
      parameters:
        - name: substatus_token
          in: path
          description: The unique identifier of the substatus to update.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing substatus token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubstatusUpdateReq'
        required: true
      responses:
        '200':
          description: Updated substatus response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubstatusResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /transactions:
    get:
      tags:
        - Transactions
      summary: List transactions
      description: "List all transactions.\n\nBy default, this endpoint returns transactions conducted within the last 30 days.\nTo return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.\n\nBy default, `GET /transactions` returns transactions having either `PENDING` or `COMPLETION` states.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getTransactions
      parameters:
        - name: count
          in: query
          description: The number of transactions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            enum:
              - '-created_time'
              - created_time
              - '-user_transaction_time'
              - user_transaction_time
            type: string
            default: '-user_transaction_time'
        - name: start_date
          in: query
          description: "The starting date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields."
          style: form
          schema:
            type: string
        - name: end_date
          in: query
          description: "The ending date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields."
          style: form
          schema:
            type: string
        - name: type
          in: query
          description: Comma-delimited list of transaction types to include.
          style: form
          schema:
            type: string
        - name: user_token
          in: query
          description: The unique identifier of the user account holder.
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: The unique identifier of the business account holder.
          style: form
          schema:
            type: string
        - name: acting_user_token
          in: query
          description: The unique identifier of the acting user.
          style: form
          schema:
            type: string
        - name: card_token
          in: query
          description: The unique identifier of the card.
          style: form
          schema:
            type: string
        - name: state
          in: query
          description: Comma-delimited list of transaction states to display.
          style: form
          schema:
            type: string
            default: 'PENDING,COMPLETION'
        - name: version
          in: query
          description: Specifies the API version for the request.
          style: form
          schema:
            type: string
        - name: verbose
          in: query
          description: 'If `true`, the query returns additional information for diagnostic purposes.'
          style: form
          schema:
            type: boolean
        - name: start_identifier
          in: query
          description: Start identifier
          style: form
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModelListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/transactions/fundingsource/{funding_source_token}':
    get:
      tags:
        - Transactions
      summary: List transactions for a funding account
      description: "List transactions for a specific funding source.\n\nBy default, this endpoint returns transactions conducted within the last 30 days.\nTo return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.\n\nBy default, `GET /transactions/fundingsource/{funding_source_token}` returns transactions having either `PENDING` or `COMPLETION` states.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getTransactionsFundingsourceFundingsourcetoken
      parameters:
        - name: funding_source_token
          in: path
          description: The unique identifier of the funding account.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: The number of transactions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            enum:
              - '-created_time'
              - created_time
              - '-user_transaction_time'
              - user_transaction_time
            type: string
            default: '-user_transaction_time'
        - name: start_date
          in: query
          description: "The starting date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields."
          style: form
          schema:
            type: string
        - name: end_date
          in: query
          description: "The ending date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields."
          style: form
          schema:
            type: string
        - name: type
          in: query
          description: Comma-delimited list of transaction types to include.
          style: form
          schema:
            type: string
        - name: polarity
          in: query
          description: Specifies whether to return credit or debit transactions.
          style: form
          schema:
            enum:
              - CREDIT
              - DEBIT
              - PENDING_CREDIT
              - PENDING_DEBIT
            type: string
        - name: version
          in: query
          description: Specifies the API version for the request.
          style: form
          schema:
            type: string
        - name: verbose
          in: query
          description: 'If `true`, the query returns additional information for diagnostic purposes.'
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModelListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/transactions/{token}':
    get:
      tags:
        - Transactions
      summary: Retrieve transaction
      description: "Retrieve a specific transaction.\nInclude the `token` path parameter to identify the transaction.\n\n[NOTE]\nTransactions are not available in real time via this endpoint, and typically appear after 30 seconds.\nOn occasion, a transaction may require up to four hours to appear."
      operationId: getTransactionsToken
      parameters:
        - name: token
          in: path
          description: The unique identifier of the transaction.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: version
          in: query
          description: Specifies the API version for the request.
          style: form
          schema:
            type: string
        - name: verbose
          in: query
          description: 'If `true`, the query returns additional information for diagnostic purposes.'
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/transactions/{token}/related':
    get:
      tags:
        - Transactions
      summary: List related transactions
      description: "List all transactions related to the specified transaction.\n\nBy default, this endpoint returns transactions conducted within the last 30 days.\nTo return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.\n\nBy default, this endpoint returns transactions of any state.\nTo return transactions in specific states, you must include the `state` query parameter in your request.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getTransactionsTokenRelated
      parameters:
        - name: token
          in: path
          description: The unique identifier of the transaction.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: The number of transactions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            enum:
              - '-created_time'
              - created_time
              - '-user_transaction_time'
              - user_transaction_time
            type: string
            default: '-user_transaction_time'
        - name: start_date
          in: query
          description: "The starting date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields."
          style: form
          schema:
            type: string
        - name: end_date
          in: query
          description: "The ending date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields."
          style: form
          schema:
            type: string
        - name: type
          in: query
          description: Comma-delimited list of transaction types to include.
          style: form
          schema:
            type: string
        - name: state
          in: query
          description: Comma-delimited list of transaction states to display.
          style: form
          schema:
            type: string
            default: ALL
        - name: version
          in: query
          description: Specifies the API version for the request.
          style: form
          schema:
            type: string
        - name: verbose
          in: query
          description: 'If `true`, the query returns additional information for diagnostic purposes.'
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModelListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users:
    get:
      tags:
        - Users
      summary: List users
      description: "To return an array of all of a program's users, send a `GET` request to the `/users` endpoint.\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.\nTo narrow your result set to users that match certain criteria, see the <<search_users,Search users>> endpoint.\n\nThe `business_token` field is conditionally returned in the response (it cannot be set through the API).\nYou can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:\n\n[cols=\"1,1,1\"]\n|===\n| parent_token | business_token | Description\n\n| Not populated\n| Not populated\n| User does not have a parent.\n\n| Populated\n| Not populated\n| User's parent is a user.\n\n| Populated; matches `business_token`\n| Populated; matches `parent_token`\n| User's parent is a business.\n\n| Populated; does not match `business_token`\n| Populated; does not match `parent_token`\n| User's parent is a user and their grandparent is a business.\n|==="
      operationId: getUsers
      parameters:
        - name: count
          in: query
          description: Number of user resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: search_type
          in: query
          description: Search type.
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCardHolderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Users
      summary: Create user
      description: "This endpoint enables you to create a user.\nA new user's initial status depends on the <</core-api/kyc-verification, Know Your Customer (KYC) requirements>> of the program or associated <</core-api/account-holder-groups, account holder group>>.\n\n[cols=\"1,1,1,1\"]\n|===\n| KYC Required | Initial User Status | User Active on Creation | User Limitations\n\n| Always\n| `UNVERIFIED`\n| Optional\n| Cannot load funds; cannot activate cards.\n\n| Conditionally\n| `LIMITED`\n| Optional\n| Restricted by rules in `accountholdergroups.pre_kyc_controls`.\n\n| Never\n| `ACTIVE`\n| Required\n| None.\n|===\n\n[NOTE]\nUse the `/usertransitions` endpoints to transition user resources between statuses and to view the history of a user's status.\nDo not set the value of the `user.active` field directly.\nFor more information on status changes, see <</core-api/user-transitions#postUsertransitions, Create User Transition>>.\n\nTo perform KYC verification on users, the user object must have the following fields configured:\n\n* `first_name` (legal first name only, no prefixes)\n* `last_name` (legal last name only, no suffixes)\n* `address1` (cannot be a PO Box)\n* `city`\n* `state`\n* `postal_code`\n* `country`\n* `birth_date`\n* `identifications`\n* `phone` (required in some cases)\n* `email` (required in some cases)\n\n[NOTE]\nThe `identifications` requirement depends on your program's configuration.\nTo determine if you should provide a full or abbreviated identification number, contact your Marqeta representative.\nKYC verification requires the full Social Security Number (SSN) of the user.\n\nTo create a child user, you must identify the parent user or business and determine whether the child user shares an account with the parent.\n\nThe parent must be an existing user or business.\nOn the child user, set the `parent_token` field to the value of the parent's `token` field.\nIf either the parent or the grandparent is a business, a `business_token` field is added to the user.\nThis field's value is set to the token of either the parent or grandparent (whichever is the business).\n\nThe `uses_parent_account` field determines whether the child shares balances with the parent (`true`) or whether the child balances are independent of the parent (`false`).\nIf you do not specify a value for `uses_parent_account`, it is set to `false` by default (the user does not share the parent's balance) and returned in the response body.\nThis field cannot be updated, so you must decide upon creation whether the child user shares the parent balance.\n\nSharing an account with a parent user affects how the child user interacts with cards as follows:\n\n* A child user cannot spend funds if its parent is not active.\n* An active child user can activate cards, whether the parent is active or not."
      operationId: postUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_holder_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_card_holder_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/changepassword:
    post:
      tags:
        - Users
      summary: Update user password
      description: "To change a user password, send a `POST` request to the `/users/auth/changepassword` endpoint and include the `current_password` and `new_password` in link:http://www.json.org/[JSON, window=\"_blank\"] format in the body of the request.\nThis endpoint operates in the context of a currently logged-in user.\n\nA successful password change returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthChangepassword
      requestBody:
        description: Password update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/password_update_model'
        required: true
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/clientaccesstoken:
    post:
      tags:
        - Users
      summary: Create client access token
      description: "Each time you want to display a virtual card's sensitive data (for example, when using `marqeta.js`), you must first request a new, single-use client access token from the Marqeta platform by sending a `POST` request to the `/users/auth/clientaccesstoken` endpoint.\nUnredeemed client access tokens expire after five minutes."
      operationId: postUsersAuthClientaccesstoken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client_access_token_request'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_access_token_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/auth/clientaccesstoken/{token}':
    get:
      tags:
        - Users
      summary: Retrieve client access token
      description: 'To retrieve application and card information using a client access token, send a `GET` request to the `/users/auth/clientaccesstoken/{token}` endpoint.'
      operationId: getUsersAuthClientaccesstokenToken
      parameters:
        - name: token
          in: path
          description: Client access token.
          required: true
          style: simple
          schema:
            type: string
        - name: application_token
          in: query
          description: Unique identifier of the `application` object.
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_access_token_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/login:
    post:
      tags:
        - Users
      summary: Log in user
      description: "To log in a user and return a user access token, send a `POST` request to the `/users/auth/login` endpoint and include the user details in link:http://www.json.org/[JSON, window=\"_blank\"] format in the body of the request.\n\n[TIP]\nTo check a user's credentials without logging out the user, call the `/users/auth/onetime` endpoint."
      operationId: postUsersAuthLogin
      requestBody:
        description: User login object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_request_model'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/logout:
    post:
      tags:
        - Users
      summary: Log out user
      description: "To log out a user, send a `POST` request to the `/users/auth/logout` endpoint.\n\nA successful logout returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthLogout
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/onetime:
    post:
      tags:
        - Users
      summary: Create single-use token
      description: "This endpoint returns a single-use access token.\nThis type of token authorizes a single request to access API endpoints and data associated with a particular user.\nA single-use access token differs from a user access token (as returned by `POST` `/users/auth/login`) only in the number of times it can be used.\n\nTo return a single-use access token, send a `POST` request to the `/users/auth/onetime` endpoint.\nProvide one of these sets of input data:\n\n* *Case #1* – Application token and user access token\n* *Case #2* – Application token, admin access token, and user token\n* *Case #3* – Application token, user's Marqeta password, and user's email address\n\nIn each case, provide the application token as the HTTP Basic Authentication username in the request header's Authorization field.\nWhen applicable, provide the user access token or admin access token as the HTTP Basic Authentication password.\nWhen applicable, provide the user token or user's Marqeta password and email address in link:http://www.json.org/[JSON, window=\"_blank\"] format in the request body.\n\nBefore instantiating an embedded Marqeta widget, call this endpoint to obtain the single-use access token required as input (cases #1 and #2).\n\nThis endpoint is also useful when you want to check a user's credentials before performing a sensitive operation without having to log out the user (case #3).\n\n[NOTE]\nCalling this endpoint and returning a single-use access token does not invalidate the user's current user access token."
      operationId: postUsersAuthOnetime
      requestBody:
        description: One-time object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/one_time_request_model'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_token_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/resetpassword:
    post:
      tags:
        - Users
      summary: Request user password reset token
      description: "Use this endpoint to generate a password reset token for a user.\nSend a `POST` request to the `/users/auth/resetpassword` endpoint and include the user's email address in link:http://www.json.org/[JSON, window=\"_blank\"] format in the body of the request.\nThis request generates and sends an email message containing the `user_token` and `password_reset_token` to the user's email address.\nYou must customize the email message with a link that passes the `user_token` and `password_reset_token` to a web page where a subsequent request updates the password.\n\nA successful request returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthResetpassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reset_user_password_email_model'
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/auth/resetpassword/{token}':
    post:
      tags:
        - Users
      summary: Reset user password
      description: "To reset the user's password, send a `POST` request to the `/users/auth/resetpassword/{token}` endpoint that includes a password reset token generated using the `POST /users/auth/resetpassword` operation.\nInclude the `user_token` and `new_password` in link:http://www.json.org/[JSON, window=\"_blank\"] format in the body of the request.\nInclude the `password_reset_token` as a path parameter.\n\nA successful password reset returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthResetpasswordToken
      parameters:
        - name: token
          in: path
          description: Password reset token generated using the `POST /users/auth/resetpassword` operation.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reset_user_password_model'
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/verifyemail:
    post:
      tags:
        - Users
      summary: Request email verification token
      description: "Send a `POST` request to the `/users/auth/verifyemail` endpoint to request an email verification token.\nNo input parameters are required because this operation is performed in the context of an authenticated user.\n\nThis initial request generates and sends an email message containing the email verification token to the cardholder's email address.\nThis email message must include a link that passes the email verification token to a web page where a subsequent request verifies the email address.\n\nA successful request returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthVerifyemail
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/auth/verifyemail/{token}':
    post:
      tags:
        - Users
      summary: Verify email address
      description: "To verify a user's email address, send a `POST` request to the `/users/auth/verifyemail/{email_verification_token}` endpoint that includes an `email_verification_token` generated using the `POST /users/auth/verifyemail` operation.\nInclude the `email_verification_token` as a path parameter.\n\nA successful email verification returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthVerifyemailToken
      parameters:
        - name: token
          in: path
          description: Email verification token generated using the `POST /users/auth/verifyemail` operation.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/lookup:
    post:
      tags:
        - Users
      summary: Search users
      description: "To search for one or more users, send a `POST` request to the `/users/lookup` endpoint.\nInclude in the message body any parameters by which you want to query.\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: postUsersLookup
      parameters:
        - name: count
          in: query
          description: Number of user resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: search_type
          in: query
          description: Search type.
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_card_holder_search_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCardHolderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/{parent_token}/children':
    get:
      tags:
        - Users
      summary: List user child accounts
      description: "To retrieve users who are children of a parent user or business, send a `GET` request to the `/users/{parent_token}/children` endpoint.\nInclude the parent's user or business token as a URL path parameter.\n\nThe `business_token` field is conditionally returned in the response (it cannot be set through the API).\nYou can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:\n\n[cols=\"1,1,1\"]\n|===\n| parent_token | business_token | Description\n\n| Not populated\n| Not populated\n| User does not have a parent.\n\n| Populated\n| Not populated\n| User's parent is a user.\n\n| Populated; matches `business_token`\n| Populated; matches `parent_token`\n| User's parent is a business.\n\n| Populated; does not match `business_token`\n| Populated; does not match `parent_token`\n| User's parent is a user and their grandparent is a business.\n|===\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getUsersParenttokenChildren
      parameters:
        - name: count
          in: query
          description: Number of user resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: parent_token
          in: path
          description: Unique identifier of the parent account holder.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCardHolderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/{token}':
    get:
      tags:
        - Users
      summary: Retrieve user
      description: "To retrieve a specific user, send a `GET` request to the `/users/{token}` endpoint.\nInclude the user `token` path parameter to specify the user to return.\n\nThe `business_token` field is conditionally returned in the response (it cannot be set through the API).\nYou can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:\n\n[cols=\"1,1,1\"]\n|===\n| parent_token | business_token | Description\n\n| Not populated\n| Not populated\n| User does not have a parent.\n\n| Populated\n| Not populated\n| User's parent is a user.\n\n| Populated; matches `business_token`\n| Populated; matches `parent_token`\n| User's parent is a business.\n\n| Populated; does not match `business_token`\n| Populated; does not match `parent_token`\n| User's parent is a user and their grandparent is a business.\n|===\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getUsersToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the user resource.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_card_holder_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Users
      summary: Update user
      description: "To update a specific user resource, send a `PUT` request to the `/users/{token}` endpoint.\nInclude the user `token` path parameter to specify the user to update.\n\nTo unlink a child user account from a parent account, pass a null value to the `parent_token` field of the child user resource."
      operationId: putUsersToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the user resource you want to update.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCardHolderUpdateModel'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_holder_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/{token}/ssn':
    get:
      tags:
        - Users
      summary: Retrieve user identification number
      description: "To retrieve the government-issued identification number for a user, send a `GET` request to the `/users/{token}/ssn` endpoint.\nInclude the `token` path parameter to specify the user whose identification number (SSN, TIN, NIN, SIN) you wish to return.\nYou can indicate whether to return the full number or the last four digits only."
      operationId: getUsersTokenSsn
      parameters:
        - name: token
          in: path
          description: Unique identifier of the user resource.
          required: true
          style: simple
          schema:
            type: string
        - name: full_ssn
          in: query
          description: "To return the full identification number, set to `true`.\nTo return only the last four digits, set to `false`.\n\nIf the identifications array contains only the last four digits of the identification number, the `/users/{token}/ssn` endpoint will return only the last four digits, regardless of the `full_ssn` parameter."
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ssn_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /usertransitions:
    post:
      tags:
        - User Transitions
      summary: Create user transition
      description: "This endpoint enables you to change a user's status, depending on your role and the previous status change.\nBy changing a user's status, you can control the user's capabilities and the setting of the `user.active` field.\nDo not set the value of the `user.active` field directly.\n\n[cols=\"2,4a,4a\"]\n|===\n| user.status Field | Description | User Limitations\n\n| `UNVERIFIED`\n| Initial status of a new user belonging to an account holder group where KYC is always required.\n\n*Allowable transitions:*  +\n`ACTIVE`, `CLOSED`\n| Cannot load funds or activate cards.\n\n*user.active Field:*  +\n`false`\n\n| `LIMITED`\n| Initial status of a new user belonging to an account holder group where KYC is conditionally required.\n\n*Allowable transitions:*  +\n`ACTIVE`, `SUSPENDED`, `CLOSED`\n| Restricted by rules in `accountholdergroups.pre_kyc_controls`.\n\n*user.active Field:*  +\n`true`\n\n| `ACTIVE`\n| Status of a user who has passed KYC, or initial status of a new user belonging to an account holder group where KYC is never required.\n\n*Allowable transitions:*  +\n`SUSPENDED`, `CLOSED`, `UNVERIFIED`\n| None.\n\n*user.active Field:*  +\n`true`\n\n| `SUSPENDED`\n| The user is temporarily inactive.\n\nTransitioning a suspended user to the `ACTIVE` status is restricted, based on your role and the details of the previous status change.\n\n*Allowable transitions:*  +\n`ACTIVE`, `LIMITED`, `UNVERIFIED`, `CLOSED`\n| Cannot load funds or activate cards.\n\n*user.active Field:*  +\n`false`\n\n| `CLOSED`\n| The user is permanently inactive.\n\nIn general, the `CLOSED` status should be terminal.\nFor exceptional cases, you can transition a user to other statuses, depending on your role and the details of the previous status change.\nContact your Marqeta representative for more information.\n\n*Allowable transitions:*  +\n`ACTIVE`, `LIMITED`, `UNVERIFIED`, `SUSPENDED`\n| Cannot load funds or activate cards.\n\n*user.active Field:*  +\n`false`\n\n|===\n\n[NOTE]\nThe Marqeta platform transitions a user's status in response to certain events.\nFor example, a user in the `UNVERIFIED` status is transitioned to `ACTIVE` when the user passes KYC verification."
      operationId: postUsertransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTransitionRequest'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/usertransitions/user/{user_token}':
    get:
      tags:
        - User Transitions
      summary: List transitions for user
      description: List all transitions for a given user.
      operationId: getUsertransitionsUserUsertoken
      parameters:
        - name: user_token
          in: path
          description: Unique identifier of the user resource.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of user transitions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-id'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/usertransitions/{token}':
    get:
      tags:
        - User Transitions
      summary: Retrieve user transition
      description: Retrieve a user transition.
      operationId: getUsertransitionsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the user transition you want to retrieve.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /velocitycontrols:
    get:
      tags:
        - Velocity Controls
      summary: List velocity controls
      description: "Retrieves a list of all the velocity controls associated with a specific user or card product, or lists all the velocity controls defined for your program.\n\nInclude either a `user` or a `card_product` query parameter to indicate the user or card product whose associated velocity controls you want to retrieve (do not include both).\n\nTo list all velocity controls for your program, omit the `user` and `card_product` query parameters from your request.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getVelocitycontrols
      parameters:
        - name: card_product
          in: query
          description: "Unique identifier of the card product.\nEnter the string `null` to retrieve velocity controls that are not associated with any card product."
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: "Unique identifier of the user.\nEnter the string `null` to retrieve velocity controls that are not associated with any user."
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: Number of velocity control resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VelocityControlListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Velocity Controls
      summary: Create velocity control
      description: "Limits how much and how frequently a user can spend funds.\nIf multiple velocity controls apply to the same user, the user cannot exceed any of the defined spending limits.\n\n[TIP]\nYou can create program-level controls in the sandbox environment.\nHowever, you must work with your Marqeta representative to create program-level controls in a production environment."
      operationId: postVelocitycontrols
      requestBody:
        description: Velocity control object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/velocity_control_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/velocity_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/velocitycontrols/cardgroup/{card_group_token}/available':
    get:
      tags:
        - Velocity Controls Card Group Balance
      summary: List Velocity Controls Card Group Balances
      description: Get a list of all Velocity Controls Card Group Balances in the program
      operationId: listVelocityControlsCardGroupBalances
      parameters:
        - name: card_group_token
          in: path
          description: Unique identifier of the card group for which to retrieve balances.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VelocityControlBalancePage'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/velocitycontrols/user/{user_token}/available':
    get:
      tags:
        - Velocity Controls
      summary: List user velocity control balances
      description: "Retrieves a list of the available balances of the velocity controls associated with a user.\nThis operation is unavailable for velocity controls with a window of `TRANSACTION`, because available balances do not apply to single-transaction velocity windows.\n\nDepending on the control, the balance can include an available monetary amount, the number of transactions remaining, and the number of days remaining in the time window.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getVelocitycontrolsUserUsertokenAvailable
      parameters:
        - name: user_token
          in: path
          description: Unique identifier of the cardholder.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of available balance resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VelocityControlBalanceListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/velocitycontrols/{token}':
    get:
      tags:
        - Velocity Controls
      summary: Returns a specific velocity control
      description: Retrieves a specific velocity control.
      operationId: getVelocitycontrolsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the velocity control resource.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/velocity_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Velocity Controls
      summary: Update velocity control
      description: Updates a specific velocity control.
      operationId: putVelocitycontrolsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the velocity control resource.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Velocity control object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/velocity_control_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/velocity_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /webhooks:
    get:
      tags:
        - Webhooks
      summary: List webhooks
      description: "Returns an array of all webhooks.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, sorting>>, and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getWebhooks
      parameters:
        - name: active
          in: query
          description: Set to `true` to return only active webhook configurations.
          style: form
          schema:
            type: boolean
            default: false
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponseModelListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Webhooks
      summary: Create webhook
      description: Creates a webhook.
      operationId: postWebhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_request_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/webhooks/customheaders/{token}':
    put:
      tags:
        - Webhooks
      summary: Update webhook custom headers
      description: Adds or updates a webhook's custom HTTP headers.
      operationId: putWebhooksCustomHeadersToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the webhook.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateCustomHeaderRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/webhooks/{event_type}/{resource_token}':
    post:
      tags:
        - Account Transitions
        - Journal Entries
        - Ledger Entries
        - Payments
        - Statements
        - Delinquency
      summary: Resend credit event notification
      description: "Resends a credit event notification to your webhook endpoint.\n\nAlthough you send this request as a `POST`, all parameters are passed in the URL and the body is empty.\nThe event notification is resent to your webhook endpoint and also returned in the response to this request.\n\nFor details on how to configure your webhook endpoint, see the About Webhooks <</developer-guides/about-webhooks#_tutorial, tutorial>>.\nFor the complete `/webhooks` endpoint reference, see <</core-api/webhooks, Webhooks>>."
      operationId: resendWebhookEvent
      parameters:
        - name: event_type
          in: path
          description: Specifies the type of event you want to resend.
          required: true
          style: simple
          schema:
            enum:
              - ledgerentry
              - journalentry
              - accounttransition
              - accountstatement
              - paymenttransition
              - delinquencytransition
              - paymentreminders
            type: string
        - name: resource_token
          in: path
          description: "Unique identifier of the resource for which you want to resend a notification.\n\nSend a `GET` request to `/credit/accounts/{account_token}/journalentries` to retrieve existing journal entry tokens.\n\nSend a `GET` request to `/credit/accounts/{account_token}/ledgerentries` to retrieve existing ledger entry tokens.\n\nSend a `GET` request to `/accounts/{account_token}/accounttransitions` to retrieve existing account transition tokens.\n\nSend a `GET` request to `/credit/accounts/{account_token}/payments/{payment_token}` to retrieve existing payment transition tokens.\n\nSend a `GET` request to `/accounts/{account_token}/statements` to retrieve existing statement summary tokens.\n\nSend a `GET` request to `/accounts/{account_token}/delinquencystate/transitions` to retrieve existing delinquency state transition tokens.\n\nSend a `GET` request to `/accounts/{account_token}/statements/{statement_summary_token}/paymentreminders/{token}` to retrieve existing payment reminder tokens."
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: 'Existing journal entry token, ledger entry token, account transition token, payment transition token, statement summary token, or delinquency transition token'
      responses:
        '200':
          description: Event response for which the webhook event was resent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEventResendContainerResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  '/webhooks/{token}':
    get:
      tags:
        - Webhooks
      summary: Retrieve webhook
      description: Retrieves a webhook.
      operationId: getWebhooksToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the webhook.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Webhooks
      summary: Update webhook
      description: Updates a webhook.
      operationId: putWebhooksToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the webhook.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_base_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/webhooks/{token}/ping':
    post:
      tags:
        - Webhooks
      summary: Ping webhook
      description: "Pings your webhook endpoint.\n\nSend a ping request to your webhook endpoint to validate credentials and connectivity.\nYour webhook endpoint must be configured to respond.\n\n=== Configuring your webhook endpoint\n\nWhen the Marqeta platform receives the ping request, it sends a `POST` request containing the following body to the URL of your webhook endpoint:\n\n[#ping-webhook-sample]\n[source,json]\n----\n{\n  \"pings\": [\n    {\n      \"token\": \"marqeta\",\n      \"payload\": \"healthcheck\"\n    }\n  ]\n}\n----\n\nTo indicate that it is functioning properly, your webhook endpoint must respond with a status code of `200` (see <</developer-guides/signature-verification, Signature Verification>> for a code example that identifies a ping request).\nThe response can optionally include a link:http://www.json.org/[JSON, window=\"_blank\"]-formatted body, for example:\n\n[#ping-webhook-sample-2]\n[source,json]\n----\n{\"my_endpoint_status\": \"alive\"}\n----\n\nThe Marqeta platform then responds to its requestor by echoing, as-is, the response code and body received from your webhook endpoint.\n\n=== Using the ping facility\n\nTo ping a webhook endpoint, send a `POST` request to `/webhooks/{token}/ping` and use the `token` path parameter to specify which webhook you want to reach.\nInclude an empty, link:http://www.json.org/[JSON, window=\"_blank\"]-formatted body in the request, that is:\n\n[#ping-webhook-sample-3]\n[source,json]\n----\n{}\n----\n\nThe following chain of actions occurs during the successful execution of a ping operation:\n\n. The Marqeta platform receives the ping request (`POST` to `/webhooks/{token}/ping`).\n. The Marqeta platform sends a request to your webhook endpoint.\n. Your webhook endpoint responds with a status code of \"200\" and an optional body.\n. The Marqeta platform responds to its requestor by echoing, as-is, the response code and body it received from your webhook endpoint.\n\n[NOTE]\nIf the customer-hosted endpoint fails to respond within five seconds, the Marqeta platform times out the request and responds with the following message body (where `<optional message>` represents additional details you can choose to include in the response):\n\n[#ping-webhook-sample-4]\n[source,json]\n----\n{\n  \"error_message\": \"Webhook operation failed \" + <optional message>,\n  \"error_code\": \"422600\"\n}\n----\n\nFailed pings are not automatically retried."
      operationId: postWebhooksTokenPing
      parameters:
        - name: token
          in: path
          description: Unique identifier of the webhook.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_ping_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/webhooks/{token}/{event_type}/{event_token}':
    post:
      tags:
        - Webhooks
      summary: Resend event notification
      description: "Resends an event notification to your webhook endpoint.\n\nAlthough you send this request as a `POST`, all parameters are passed in the URL and the body is empty.\nThe event notification is resent to your webhook endpoint and is also returned in the response to this request."
      operationId: postWebhooksTokenEventtypeEventtoken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the webhook.
          required: true
          style: simple
          schema:
            type: string
        - name: event_type
          in: path
          description: Specifies the type of event you want to resend.
          required: true
          style: simple
          schema:
            enum:
              - chargebacktransition
              - digitalwallettokentransition
              - cardtransition
              - usertransition
              - businesstransition
              - transaction
              - threedstransition
            type: string
        - name: event_token
          in: path
          description: Unique identifier of the event for which you want to resend a notification.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
components:
  schemas:
    ACHListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/base_ach_response_model'
          description: "Array of ACH funding source objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    AbstractPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
          format: int64
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
          format: int64
      description: Return paginated entities.
    AcceptedCountriesListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of `acceptedcountries` objects retrieved.\n\nThis field is returned if there are objects in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/accepted_countries_model'
          description: "Array of `acceptedcountries` objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    AccountAdjustmentPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/AccountAdjustmentResponse'
          description: Contains one or more account adjustments.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Returns paginated account adjustments.
    AccountAdjustmentReq:
      required:
        - amount
        - currency_code
        - description
      type: object
      properties:
        amount:
          maximum: 1000000
          type: number
          description: "Amount of the adjustment.\n\nValue must be negative if `original_ledger_entry_token` is not passed."
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          maxLength: 255
          minLength: 1
          type: string
          description: Description of the adjustment.
        external_adjustment_id:
          type: string
          description: Unique identifier you provide of an associated external adjustment that exists outside Marqeta's credit platform.
          format: uuid
        note:
          maxLength: 255
          type: string
          description: Additional information on the adjustment.
        original_ledger_entry_token:
          type: string
          description: "Unique identifier of the original journal entry needing the adjustment.\n\nRequired when adjusting an existing journal entry."
          format: uuid
        reason:
          enum:
            - DISPUTE
            - DISPUTE_RESOLUTION
            - RETURNED_OR_CANCELED_PAYMENT
            - OTHER
          type: string
          description: "Reason for the adjustment.\n\n* `DISPUTE` - The adjustment occurred because a dispute was initiated.\n* `DISPUTE_RESOLUTION` - The adjustment occurred because of the result of a dispute resolution.\n* `RETURNED_OR_CANCELED_PAYMENT` - The adjustment occurred because a payment was returned or canceled.\n* `OTHER` - Any other reason the adjustment occurred. For example, a waived fee or account write-off."
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the adjustment.
      description: Contains information relevant to creating an account adjustment.
    AccountAdjustmentResponse:
      required:
        - account_token
        - amount
        - currency_code
        - description
        - reason
        - token
        - type
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit account on which the adjustment was made.
        adjustment_detail_object:
          type: object
          description: "Contains the adjustment's full details.\n\nThe fields returned in this object depend on the adjustment type.\n\nInterest returns interest details.\nFor the specific fields returned, see the `detail_object` fields marked \"Returned for interest journal entries\" in the <</core-api/credit-account-journal-entries#getAccountJournalEntry, account journal entry response fields>>.\n\nDisputes return dispute details.\nFor the specific fields returned, see the <</core-api/credit-disputes#retrieveDispute, dispute response fields>>."
          nullable: true
        amount:
          type: number
          description: Amount of the adjustment.
        created_time:
          type: string
          description: 'Date and time when the account adjustment was applied, in UTC.'
          format: date-time
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          minLength: 1
          type: string
          description: Description of the adjustment.
        detail_token:
          maxLength: 36
          type: string
          description: "Unique identifier of the adjustment detail.\nFor example, the token of the dispute, the interest charge, or the returned payment that prompted the adjustment.\n\nReturned when the system automatically applies an adjustment."
          nullable: true
        external_adjustment_id:
          type: string
          description: Unique identifier you provide of an associated external adjustment that exists outside Marqeta's credit platform.
          format: uuid
          nullable: true
        note:
          type: string
          description: Additional information on the adjustment.
          nullable: true
        original_ledger_entry_token:
          type: string
          description: Unique identifier of the original journal entry needing the adjustment.
          format: uuid
        reason:
          enum:
            - DISPUTE
            - DISPUTE_RESOLUTION
            - RETURNED_OR_CANCELED_PAYMENT
            - OTHER
          type: string
          description: "Reason for the adjustment.\n\n* `DISPUTE` - The adjustment occurred because a dispute was initiated.\n* `DISPUTE_RESOLUTION` - The adjustment occurred because of the result of a dispute resolution.\n* `RETURNED_OR_CANCELED_PAYMENT` - The adjustment occurred because a payment was returned or canceled.\n* `OTHER` - Any other reason the adjustment occurred. For example, a waived fee."
        related_detail_object:
          type: object
          description: "Contains full details of the related dispute or returned payment.\n\nThe fields returned in this object depend on whether a dispute or returned payment led to the interest adjustment.\nA dispute returns dispute details; a returned payment returns payment details.\n\nFor more on the dispute details returned, see the <</core-api/credit-disputes#retrieveDispute, dispute response fields>>.\n\nFor more on the returned payment details returned, see the <</core-api/credit-account-payments#retrievePayment, payment response fields>>.\n\nThis field is returned for interest adjustments only."
          nullable: true
        related_detail_token:
          maxLength: 36
          type: string
          description: "Unique identifier of the dispute or returned payment that prompted the interest adjustment.\n\nThis field is returned for interest adjustments only."
          nullable: true
        token:
          type: string
          description: "Unique identifier of the adjustment.\n\nIf in the `detail_object`, unique identifier of the detail object."
        type:
          enum:
            - PURCHASE
            - FEE
            - REWARD
            - INTEREST
            - GENERAL
          type: string
          description: "Type of adjustment.\n\nThe adjustment is made on its correlating amount (for example, purchase adjustments are made on purchase amounts).\nYou can use general adjustments for standalone adjustments made on the credit account balance itself, which includes account write-offs, credits, and more."
      description: Contains information returned for account adjustment.
    AccountAndDocumentAssetType:
      enum:
        - TERMS_SCHEDULE
        - ACCOUNT_STATEMENT
        - SUMMARY_OF_CREDIT_TERMS
        - REWARDS_DISCLOSURE
        - PRIVACY_POLICY
        - E_DISCLOSURE
        - BENEFITS_DISCLOSURE
        - CARD_MEMBER_AGREEMENT
      type: string
      description: Type of document.
    AccountAprType:
      enum:
        - GO_TO
        - PROMOTIONAL
      type: string
      description: "Type of APR.\n\n* `GO_TO` - Default APR rate that is applicable when any promotional periods expire.\n* `PROMOTIONAL` - A temporary rate that is applicable for a specified period of time."
    AccountBillingCycleResponse:
      type: object
      properties:
        account_token:
          type: string
          description: Token of the associated account.
        created_time:
          type: string
          description: Date and time when the Billing Cycle was created on Marqeta's credit platform
          format: date-time
        current_end_time:
          type: string
          description: End time of the current billing cycle.
          format: date-time
        current_payment_due_date:
          type: string
          description: Payment due date for the current billing cycle.
          format: date-time
        current_start_time:
          type: string
          description: Start time of the current billing cycle.
          format: date-time
        next_end_time:
          type: string
          description: End time of the next billing cycle.
          format: date-time
        next_payment_due_date:
          type: string
          description: Payment due date for the next billing cycle.
          format: date-time
        next_start_time:
          type: string
          description: Start time of the next billing cycle.
          format: date-time
        short_code:
          type: string
          description: Unique identifier of the billing cycle's short code.
        updated_time:
          type: string
          description: Date and time when the BillingCycle was last updated on Marqeta's credit platform
          format: date-time
      description: Details of a billing cycle.
    AccountCardsPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/CardResponse'
          description: Contains one or more credit cards.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Returns paginated account cards.
    AccountConfigMinPayment:
      type: object
      properties:
        active:
          type: boolean
          description: Whether the minimum payment override is currently active.
        min_payment_flat_amount:
          minimum: 0
          type: number
          description: Flat amount of the minimum payment override.
        min_payment_percentage:
          minimum: 0
          type: number
          description: Percentage of the total statement balance used to calculate the minimum payment override amount.
        override_end_time:
          type: string
          description: 'Date and time when the minimum payment override ends, in UTC.'
          format: date-time
        override_start_time:
          type: string
          description: 'Date and time when the minimum payment override starts, in UTC.'
          format: date-time
      description: 'Contains configurations for a minimum payment override on a credit account, which overrides the minimum payment configurations on the associated credit product.'
    AccountConfigPaymentHolds:
      type: object
      properties:
        ach_hold_days:
          maximum: 7
          minimum: 0
          type: integer
          description: Number of days to hold an ACH payment.
        check_hold_days:
          maximum: 7
          minimum: 0
          type: integer
          description: Number of days to hold a check payment.
      description: Contains configurations for a payment hold.
    AccountConfigReq:
      type: object
      properties:
        billing_cycle_day:
          maximum: 28
          minimum: 1
          type: integer
          description: Day of month the billing cycle starts.
        card_level:
          enum:
            - PREMIUM
            - TRADITIONAL
            - NA
          type: string
          description: Level of the credit card.
          default: NA
        e_disclosure_active:
          type: boolean
          description: A value of `true` indicates that the account holder consents to receiving disclosures and statements electronically.
          default: false
        fees:
          type: array
          items:
            $ref: '#/components/schemas/ConfigFeeScheduleReq'
          description: Contains one or more fees associated with the credit account.
        payment_due_day:
          maximum: 31
          minimum: 31
          type: integer
          description: "Day of month the payment for the previous billing cycle is due.\n\nThis field is deprecated.\nUse the `account.payment_due_interval` field instead.\nTo retrieve `payment_due_interval`, see <</core-api/policies#retrieveProductPolicy, Retrieve credit product policy, payments.payment_due_interval>>."
          deprecated: true
        payment_holds:
          $ref: '#/components/schemas/AccountConfigPaymentHolds'
        rewards:
          type: array
          items:
            $ref: '#/components/schemas/AccountReward'
          description: Contains one or more rewards associated with the credit account.
      description: 'Contains information relevant for configuring an account''s billing cycle day, payment due day, fees, and more.'
    AccountConfigResponse:
      required:
        - billing_cycle_day
        - card_level
        - e_disclosure_active
        - payment_holds
      type: object
      properties:
        billing_cycle_day:
          maximum: 28
          minimum: 1
          type: integer
          description: Day of month the billing cycle starts.
        card_level:
          enum:
            - PREMIUM
            - TRADITIONAL
            - NA
          type: string
          description: Level of the credit card.
          default: NA
        e_disclosure_active:
          type: boolean
          description: A value of `true` indicates that the account holder consents to receiving disclosures and statements electronically.
          default: false
        fees:
          type: array
          items:
            $ref: '#/components/schemas/ConfigFeeScheduleResponse'
          description: Contains one or more fees associated with the credit account.
        min_payment:
          $ref: '#/components/schemas/AccountConfigMinPayment'
        payment_due_day:
          maximum: 31
          minimum: 31
          type: integer
          description: Day of month the payment for the previous billing cycle is due.
          deprecated: true
        payment_holds:
          $ref: '#/components/schemas/AccountConfigPaymentHolds'
        rewards:
          type: array
          items:
            $ref: '#/components/schemas/AccountReward'
          description: Contains one or more rewards associated with the credit account.
      description: 'Contains information returned when configuring an account''s billing cycle day, payment due day, fees, and more.'
    AccountConfigUpdateReq:
      type: object
      properties:
        e_disclosure_active:
          type: boolean
          description: A value of `true` indicates that the account holder consents to receiving disclosures and statements electronically.
          default: false
        fees:
          type: array
          items:
            $ref: '#/components/schemas/ConfigFeeScheduleReq'
          description: Contains one or more fees associated with the credit account.
        min_payment:
          $ref: '#/components/schemas/AccountConfigMinPayment'
        payment_holds:
          $ref: '#/components/schemas/AccountConfigPaymentHolds'
      description: 'Contains information relevant for updating configurations for electronic disclosures, fees, payment holds, and minimum payment.'
    AccountCreateReq:
      required:
        - credit_limit
        - usages
      type: object
      properties:
        application_token:
          maxLength: 36
          type: string
          description: Unique identifier of the associated credit account application.
        bundle_token:
          type: string
          description: "Unique identifier of the associated bundle.\n\nYou must pass either `bundle_token` or both `credit_product_token` and `external_offer_id`."
        business_token:
          type: string
          description: "Unique identifier of the parent business program.\n\nPass either a `user_token` or `business_token`."
        config:
          $ref: '#/components/schemas/AccountConfigReq'
        credit_limit:
          maximum: 1000000
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: Maximum balance the credit account can carry.
        credit_product_token:
          type: string
          description: "Unique identifier of the associated credit product.\n\nThis field is required if passing `external_offer_id`.\n\nYou must pass either both `credit_product_token` and `external_offer_id` or `bundle_token`."
        description:
          maxLength: 255
          type: string
          description: Description for the credit account.
        external_offer_id:
          type: string
          description: "Unique identifier you provide of the associated external credit offer.\n\nThis field is required if passing `credit_product_token`.\n\nYou must pass either both `external_offer_id` and `credit_product_token` or `bundle_token`."
        name:
          maxLength: 255
          type: string
          description: Name of the credit account.
        token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the credit account.
        usages:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccountUsageCreateReq'
          description: "Contains one or more `usages` objects that contain information on how a credit account is used and what types of balances are permitted on the account.\n\nYou can pass only one `usages` object per `usages.type`."
        user_token:
          type: string
          description: "Unique identifier of the primary account holder.\n\nPass either a `user_token` or `business_token`."
      description: Contains information relevant to creating a credit account.
    AccountCreditBalanceRefundReq:
      required:
        - amount
        - currency_code
        - description
        - method
      type: object
      properties:
        amount:
          minimum: 0.01
          type: number
          description: "Amount of the credit balance refund.\n\nThe maximum refund amount is the amount that brings the account balance to $0.\nFor example, $4000 is the maximum refund amount for a -$4000 account balance."
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          type: string
          description: Description for the credit balance refund.
        method:
          $ref: '#/components/schemas/RefundMethod'
        token:
          type: string
          description: Unique identifier of the credit balance refund.
      description: Contains details on a credit balance refund.
    AccountCreditBalanceRefundResponse:
      required:
        - account_token
        - amount
        - created_time
        - description
        - method
        - status
        - token
        - updated_time
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit account that needs the credit balance refund.
        amount:
          type: number
          description: "Amount of the credit balance refund.\n\nThe maximum refund amount is the amount that brings the account balance to $0.\nFor example, $4000 is the maximum refund amount for a -$4000 account balance."
        created_time:
          type: string
          description: Date and time when the credit balance refund was created.
          format: date-time
        description:
          type: string
          description: Description for the credit credit balance refund.
        method:
          $ref: '#/components/schemas/RefundMethod'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        token:
          type: string
          description: "Unique identifier of the credit balance refund.\n\nIf in the `detail_object`, unique identifier of the detail object."
        updated_time:
          type: string
          description: Date and time when the credit balance refund was last updated.
          format: date-time
      description: Contains details on a credit balance refund.
    AccountDocumentResponse:
      type: object
      properties:
        accepted_at:
          type: string
          description: 'Date and time when the user accepted the document on Marqeta''s credit platform, in UTC.'
          format: date-time
        asset_token:
          type: string
          description: Unique identifier of the document on a credit account.
        asset_urls:
          $ref: '#/components/schemas/PolicyDocumentAssetURLs'
        effective_from:
          type: string
          description: 'Date and time when the document goes into effect on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: Account document response.
    AccountDocumentsPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/AccountDocumentResponse'
          description: Array of documents on the credit account.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Account document response.
    AccountDocumentsResponse:
      type: object
      properties:
        account_statement:
          $ref: '#/components/schemas/AccountDocumentResponse'
        benefits_disclosure:
          $ref: '#/components/schemas/AccountDocumentResponse'
        card_member_agreement:
          $ref: '#/components/schemas/AccountDocumentResponse'
        e_disclosure:
          $ref: '#/components/schemas/AccountDocumentResponse'
        privacy_policy:
          $ref: '#/components/schemas/AccountDocumentResponse'
        rewards_disclosure:
          $ref: '#/components/schemas/AccountDocumentResponse'
        summary_of_credit_terms:
          $ref: '#/components/schemas/AccountDocumentResponse'
        terms_schedule:
          $ref: '#/components/schemas/AccountDocumentResponse'
      description: Account documents response.
    AccountFee:
      required:
        - method
        - type
      type: object
      properties:
        method:
          $ref: '#/components/schemas/Method'
        type:
          $ref: '#/components/schemas/FeeType'
        value:
          maximum: 9999.99
          minimum: 0
          type: number
          description: 'Value of the fee, either a flat fee amount or percentage value.'
      description: Contains fee configurations on a credit account.
    AccountHolderGroupListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/account_holder_group_response'
          description: "Array of account holder group objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    AccountProductFeeType:
      enum:
        - LATE_PAYMENT_FEE
        - RETURNED_PAYMENT_FEE
        - MONTHLY_FEE
        - ANNUAL_FEE
        - FOREIGN_TRANSACTION_FEE
      type: string
      description: Type of fee.
    AccountResponse:
      required:
        - available_credit
        - config
        - created_time
        - credit_limit
        - currency_code
        - current_balance
        - remaining_min_payment_due
        - remaining_statement_balance
        - status
        - token
        - updated_time
        - usages
      type: object
      properties:
        activation_time:
          type: string
          description: 'Date and time when the credit account was activated on Marqeta''s credit platform, in UTC.'
          format: date-time
        available_credit:
          type: number
          description: Amount of credit available for use on the credit account.
        bundle_token:
          type: string
          description: Unique identifier of the associated bundle product.
        business_token:
          type: string
          description: "Unique identifier of the parent business program.\n\nEither a `user_token` or `business_token` is present, not both."
        config:
          $ref: '#/components/schemas/AccountConfigResponse'
        created_time:
          type: string
          description: 'Date and time when the credit account was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        credit_limit:
          maximum: 1000000
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: Maximum balance the credit account can carry.
        credit_product_token:
          type: string
          description: Unique identifier of the associated credit product.
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        current_balance:
          type: number
          description: Current purchase balance on the credit account.
        description:
          type: string
          description: Description for the credit account.
        external_offer_id:
          type: string
          description: Unique identifier you provide of the associated external credit offer.
        latest_statement_cycle_type:
          $ref: '#/components/schemas/CycleType'
        name:
          type: string
          description: Name of the credit account.
        remaining_min_payment_due:
          type: number
          description: 'Amount remaining on the latest statement''s minimum payment, after it''s adjusted for payments, returned payments, and applicable credits that occurred after the latest statement''s closing date.'
        remaining_statement_balance:
          type: number
          description: 'Amount remaining on the latest statement''s balance, after it''s adjusted for payments, returned payments, and applicable credits that occurred after the latest statement''s closing date.'
        status:
          $ref: '#/components/schemas/AccountStatusEnum'
        substatuses:
          type: array
          items:
            type: string
            description: Substatus of the credit account.
          description: substatuses of the credit account.
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit account.
        type:
          $ref: '#/components/schemas/AccountType'
        updated_time:
          type: string
          description: 'Date and time when the credit account was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
        usages:
          type: array
          items:
            $ref: '#/components/schemas/AccountUsageResponse'
          description: Contains one or more `usages` objects that contain information on how a credit account is used and what types of balances are permitted on the account.
        user_substatuses:
          type: array
          items:
            type: string
            description: Substatus of the user under the credit account.
          description: substatuses of the users under the credit account.
        user_token:
          type: string
          description: "Unique identifier of the primary account holder.\n\nEither a `user_token` or `business_token` is present, not both."
      description: Contains information on a credit account.
    AccountReward:
      required:
        - method
        - type
      type: object
      properties:
        method:
          $ref: '#/components/schemas/Method'
        type:
          $ref: '#/components/schemas/RewardType'
        value:
          maximum: 100
          minimum: 0
          type: number
          description: 'Value of the reward, either a flat reward amount or percentage value.'
      description: TODO Add description here
    AccountStatusEnum:
      enum:
        - UNACTIVATED
        - ACTIVE
        - SUSPENDED
        - TERMINATED
        - CHARGE_OFF
      type: string
      description: "Status of the credit account.\n\n*NOTE* `CHARGE_OFF` is not an allowable value for `original_status`."
    AccountTransitionReq:
      required:
        - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/AccountStatusEnum'
        token:
          type: string
          description: Unique identifier of the credit account transition.
      description: Information on the credit account transition.
    AccountTransitionResponse:
      required:
        - account_token
        - created_time
        - original_status
        - status
        - token
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit account for which to transition a status.
        created_time:
          type: string
          description: 'Date and time when the transition record was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        original_status:
          $ref: '#/components/schemas/AccountStatusEnum'
        status:
          $ref: '#/components/schemas/AccountStatusEnum'
        token:
          type: string
          description: Unique identifier of the credit account transition.
      description: Information on the credit account transition.
    AccountTransitionsPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/AccountTransitionResponse'
          description: Contains one or more account transitions.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Return paginated account transitions.
    AccountType:
      enum:
        - CONSUMER
        - BUSINESS
      type: string
      description: Type of credit account.
    AccountUpdateReq:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/AccountConfigUpdateReq'
        credit_limit:
          required:
            - value
          type: object
          properties:
            value:
              maximum: 999999999999.99
              minimum: 0
              exclusiveMinimum: true
              type: number
              description: Maximum balance the credit account can carry.
          description: Contains information on the credit limit.
        latest_statement_cycle_type:
          $ref: '#/components/schemas/CycleType'
        usages:
          type: array
          items:
            $ref: '#/components/schemas/AccountUsageUpdateReq'
          description: "Contains one or more `usages` objects that contain information on how a credit account is used and what types of balances are permitted on the account.\n\nYou can pass only one `usages` object per `usages.type`."
    AccountUsageCreateReq:
      required:
        - aprs
        - type
      type: object
      properties:
        aprs:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AprScheduleCreateReq'
          description: Contains one or more annual percentage rates (APRs) associated with the type of balance on the credit account.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/AccountFee'
          description: Contains one or more fees associated with the usage type.
        type:
          $ref: '#/components/schemas/BalanceType'
      description: Contains information on how a credit account is used and what types of balances are permitted on the account.
    AccountUsageResponse:
      required:
        - aprs
        - type
      type: object
      properties:
        aprs:
          type: array
          items:
            $ref: '#/components/schemas/AprScheduleResponse'
          description: Contains one or more APRs associated with the type of balance on the credit account.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/AccountFee'
          description: Contains one or more fees associated with the usage type.
        type:
          $ref: '#/components/schemas/BalanceType'
      description: Contains information on how a credit account is used and what types of balances are permitted on the account.
    AccountUsageUpdateReq:
      required:
        - apr_type
        - apr_value
        - type
      type: object
      properties:
        aprs:
          type: array
          items:
            $ref: '#/components/schemas/AprScheduleUpdateReq'
          description: Contains one or more annual percentage rates (APRs) associated with the credit account.
        type:
          $ref: '#/components/schemas/BalanceType'
      description: Contains information on how a credit account is used and what types of balances are permitted on the account.
    AccountsPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/AccountResponse'
          description: Contains one or more credit accounts.
        end_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Return paginated accounts.
    AccrualType:
      enum:
        - CASHBACK
      type: string
      description: Type of reward accrued.
    ActivationActions:
      type: object
      properties:
        swap_digital_wallet_tokens_from_card_token:
          type: string
          description: "Token of the card from which to move digital wallet tokens.\nAll digital wallet tokens are move from the card specified in this field to the new card.\n\nNot relevant when `reissue_pan_from_card_token` is set.\n\nSend a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user."
        terminate_reissued_source_card:
          type: boolean
          description: "If you are reissuing a card, the source card is terminated by default.\nTo prevent the source card from being terminated, set this field to `false`.\n\nOnly relevant when `reissue_pan_from_card_token` is set."
          default: true
      description: Contains information on actions that can be performed when a card is activated.
    AddressRequestModel:
      type: object
      properties:
        address1:
          maxLength: 35
          minLength: 0
          type: string
          description: "Street name and number of the address.\n\nThis field is required for KYC verification (US-based accounts only).\nCannot perform KYC if set to a PO Box."
        address2:
          maxLength: 35
          minLength: 0
          type: string
          description: Additional address information.
        city:
          maxLength: 35
          minLength: 0
          type: string
          description: "City of the address.\n\nThis field is required for KYC verification (US-based accounts only)."
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: Country of the address.
        postal_code:
          maxLength: 20
          minLength: 0
          type: string
          description: "Postal code of the address.\n\nThis field is required for KYC verification (US-based accounts only)."
        state:
          maxLength: 35
          minLength: 0
          type: string
          description: "State of the address.\n\nThis field is required for KYC verification (US-based accounts only)."
        zip:
          maxLength: 20
          minLength: 0
          type: string
          description: United States ZIP code of the address.
      description: Address associated with the business.
    AddressResponseModel:
      type: object
      properties:
        address1:
          maxLength: 35
          minLength: 0
          type: string
          description: "Street name and number of the address.\n\nThis field is returned if it exists in the resource."
        address2:
          maxLength: 35
          minLength: 0
          type: string
          description: "Additional address information.\n\nThis field is returned if it exists in the resource."
        city:
          maxLength: 35
          minLength: 0
          type: string
          description: "City of the address.\n\nThis field is returned if it exists in the resource."
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: "Country of the address.\n\nThis field is returned if it exists in the resource."
        postal_code:
          maxLength: 20
          minLength: 0
          type: string
          description: "Postal code of the address.\n\nThis field is returned if it exists in the resource."
        state:
          maxLength: 35
          minLength: 0
          type: string
          description: "State, province, or territory of the address.\n\nThis field is returned if it exists in the resource."
        zip:
          maxLength: 20
          minLength: 0
          type: string
          description: "United States ZIP code of the address.\n\nThis field is returned if it exists in the resource."
      description: Address associated with the business.
    AmountFilter:
      type: object
      properties:
        greater_than:
          minimum: 0
          type: number
          description: Minimum amount that a balance for a billing cycle can be to earn the reward.
        less_than:
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: Maximum amount that a balance for a billing cycle can be to earn the reward.
      description: Contains information on the minimum and maximum amounts that the balance for a billing cycle can be to earn the reward.
    AndroidPushTokenRequestAddress:
      type: object
      properties:
        address1:
          type: string
          description: Street address of the cardholder.
        address2:
          type: string
          description: "Additional address information for the cardholder, such as a suite or apartment number.\n\n`Suite 600`, for example."
        city:
          type: string
          description: City of the cardholder.
        country:
          type: string
          description: "Two-character link:https://www.iso.org/iso-3166-country-codes.html[ISO alpha-2 country code, window=\"_blank\"].\n`US`, for example."
        name:
          type: string
          description: Name of the cardholder.
        phone:
          type: string
          description: Telephone number of the cardholder.
        postal_code:
          type: string
          description: "Postal code of the cardholder, such as a United States ZIP code.\n`94612`, for example."
        state:
          type: string
          description: "Two-character <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, state or province code>>.\n`CA`, for example."
        zip:
          type: string
      description: Specifies the cardholder address.
    Application:
      type: object
      properties:
        access_code:
          type: string
          description: Access code of the client application.
        assets_url:
          type: string
          description: URL of the client application assets.
        client_api_base_url:
          type: string
          description: Base URL of the client API.
        environment:
          type: string
          description: Client application's environment.
        program:
          type: string
          description: Name of the program on the Marqeta platform.
        program_short_code:
          type: string
          description: Short code of the program on the Marqeta platform.
        token:
          type: string
          description: Unique identifier of the `application` object.
      description: Contains client application information.
    ApplicationOfCredits:
      required:
        - cycle_type
        - day
      type: object
      properties:
        cycle_type:
          $ref: '#/components/schemas/CycleType'
        day:
          maximum: 31
          minimum: 1
          type: integer
          description: Day of the billing cycle when credits are applied.
      description: Contains information on the cycle type and billing cycle day when credits are applied in the daily balance calculation.
    ApplicationResourceState:
      enum:
        - CREATED
        - DECISIONING
        - MANUAL_REVIEW
        - EXPIRED
        - APPROVED
        - REJECTED
        - ACCEPTED
        - DECLINED
        - ERROR
      type: string
      description: "State of the application.\n\nIf manually <</core-api/credit-applications#transitionApplication, transitioning an application state>>:\n\n* `application_state` is the state to which you want to transition the application status; must be `ACCEPTED` or `REJECTED`.\n* `original_status` returns the state of the application before it was manually transitioned.\n* `status` returns the state to which the application was transitioned."
    ApplicationTransitionRequest:
      required:
        - application_state
      type: object
      properties:
        application_state:
          $ref: '#/components/schemas/ApplicationResourceState'
        benefits_disclosure_tracking_token:
          type: string
          description: "The tracking token of the Benefits Disclosure.\n\nThis is the `tracking_token` returned in the `BENEFITS_DISCLOSURE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.\n\nRequired if transitioning application state to `ACCEPTED`"
        card_member_agreement_tracking_token:
          type: string
          description: "The tracking token of the Card Member Agreement.\n\nThis is the `tracking_token` returned in the `CARD_MEMBER_AGREEMENT` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.\n\nRequired if transitioning application state to `ACCEPTED`"
        rewards_disclosure_post_terms_tracking_token:
          type: string
          description: "The tracking token of the Rewards Disclosure Post-terms.\n\nThis is the `tracking_token` returned in the `REWARDS_DISCLOSURE_POST_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.\n\nRequired if transitioning application state to `ACCEPTED`"
        terms_schedule_tracking_token:
          type: string
          description: "The tracking token of the Terms Schedule.\n\nThis is the `tracking_token` returned in the `TERMS_SCHEDULE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.\n\nRequired if transitioning application state to `ACCEPTED`"
        token:
          maxLength: 36
          type: string
          description: 'Main identifier of the resource, also used as the idempotency key on the request.'
    ApplicationTransitionResponse:
      type: object
      properties:
        application_token:
          maxLength: 36
          type: string
          description: Unique identifier of the application whose state you transitioned.
        created_time:
          type: string
          description: 'Date and time when the application changed states on the Marqeta platform, in UTC.'
          format: date-time
        original_status:
          $ref: '#/components/schemas/ApplicationResourceState'
        status:
          $ref: '#/components/schemas/ApplicationResourceState'
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the transition of an application's state.
      description: Contains information on the transition of an application's state.
    ApplicationType:
      enum:
        - CREDIT_DECISION
        - PREQUALIFICATION
      type: string
      description: Type of application.
    ApplicationsResponse:
      required:
        - bundle_token
        - created_date
        - e_disclosure_accepted_at
        - privacy_policy_accepted_at
        - rewards_disclosure_pre_terms_accepted_at
        - soct_accepted_at
        - state
        - token
        - type
        - updated_date
        - user_token
      type: object
      properties:
        account_token:
          type: string
          description: "Unique identifier of the credit account for which the user is applying.\n\nReturned when retrieving an application in the `APPROVED` state."
        any_non_taxable_income:
          type: boolean
          description: A value of `true` indicates that the user has a non-taxable income source.
        application_accepted_at:
          type: string
          description: "Date and time when the application was accepted on the Marqeta platform, in UTC.\n\nReturned if the user accepted their approved application."
          format: date-time
        application_canceled_at:
          type: string
          description: 'Date and time when the application was canceled on the Marqeta platform, in UTC.'
          format: date-time
        benefits_disclosure_accepted_at:
          type: string
          description: "Date and time when Marqeta accepted the Benefits Disclosure, in UTC.\n\nReturned if the user accepted their approved application."
          format: date-time
        bundle_token:
          type: string
          description: Unique identifier of the bundle associated with the application.
        card_membership_agreement_accepted_at:
          type: string
          description: "Date and time when Marqeta accepted the Card Membership Agreement, in UTC.\n\nReturned if the user accepted their approved application."
          format: date-time
        created_date:
          type: string
          description: 'Date and time when the application was created on the Marqeta platform, in UTC.'
          format: date-time
        decision_model:
          $ref: '#/components/schemas/DecisionsResponse'
        decision_token:
          type: string
          description: Unique identifier of the decision made on the application.
        device_data:
          $ref: '#/components/schemas/DeviceData'
        e_disclosure_accepted_at:
          type: string
          description: "Date and time when Marqeta accepted the e-Disclosure, in UTC.\n\nReturned if the user accepted their approved application."
          format: date-time
        error_details:
          $ref: '#/components/schemas/ErrorDetailsResponse'
        meta_data:
          type: object
          description: Customer-defined additional information about the application.
        monthly_mortgage_or_rent:
          type: number
          description: Monthly amount of the mortgage or rent that the user currently pays.
        offer_id:
          type: string
          description: Unique identifier of the offer for a pre-screened applicant.
        prequalified_offer_pre_terms_accepted_at:
          type: string
          description: "Date and time when Marqeta accepted the Pre-qualified Offer Pre-terms, in UTC.\n\nReturned if the user accepted their approved application."
          format: date-time
        primary_income_source:
          enum:
            - EMPLOYED
            - UNEMPLOYED
            - SELF_EMPLOYED
            - OTHER
          type: string
          description: 'Whether the primary income source comes from the user being employed, unemployed, self-employment, or another situation.'
        privacy_policy_accepted_at:
          type: string
          description: "Date and time when Marqeta accepted the Privacy Policy, in UTC.\n\nReturned if the user accepted their approved application."
          format: date-time
        residence_type:
          enum:
            - OWN
            - RENT
            - OTHER
          type: string
          description: 'Whether the user owns or rents their residence, or has another situation.'
        rewards_disclosure_post_terms_accepted_at:
          type: string
          description: "Date and time when Marqeta accepted the Rewards Disclosure, in UTC.\n\nReturned if the user accepted their approved application."
          format: date-time
        rewards_disclosure_pre_terms_accepted_at:
          type: string
          description: "Date and time when Marqeta accepted the Rewards Disclosure, in UTC.\n\nReturned if the user accepted their approved application."
          format: date-time
        soct_accepted_at:
          type: string
          description: "Date and time when Marqeta accepted the Summary of Credit Terms (SOCT), in UTC.\n\nReturned if the user accepted their approved application."
          format: date-time
        state:
          $ref: '#/components/schemas/ApplicationResourceState'
        term_schedule_information_accepted_at:
          type: string
          description: "Date and time when Marqeta accepted the Terms Schedule, in UTC.\n\nReturned if the user accepted their approved application."
          format: date-time
        token:
          type: string
          description: Unique identifier of the application.
        total_annual_income:
          type: number
          description: The total amount of the user's annual income.
        type:
          $ref: '#/components/schemas/ApplicationType'
        updated_date:
          type: string
          description: 'Date and time when the application was last updated on the Marqeta platform, in UTC.'
          format: date-time
        user_token:
          type: string
          description: 'Unique identifier of the applicant, the user applying for a credit account.'
    ApplicationsTransitionPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources to retrieve.
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationTransitionResponse'
          description: An array of application transition objects.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Contains information on application transitions.
    AprScheduleCreateReq:
      required:
        - schedule
        - type
      type: object
      properties:
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/AprScheduleEntryCreateReq'
          description: 'Contains one or more `schedule` objects, which contain information on the annual percentage rates (APRs) associated with the type of balance on the credit account and when they are effective.'
        type:
          $ref: '#/components/schemas/AccountAprType'
    AprScheduleEntryCreateReq:
      required:
        - value
      type: object
      properties:
        margin:
          type: number
          description: "Number of percentage points added to the prime rate, used to calculate a variable value.\n\nUsed for variable values only."
          format: float
        type:
          enum:
            - FIXED
            - VARIABLE
          type: string
          description: Indicates whether the APR value is fixed or variable.
          default: FIXED
        value:
          maximum: 100
          minimum: 0
          type: number
          description: "Percentage value of the APR.\n\nIf the APR type is `FIXED`, this is the value of the fixed rate.\nIf the APR type is `VARIABLE`, the value is calculated by adding the margin to the prime rate that was stored on Marqeta's credit platform when your credit program was created.\n\nWhen backdating an APR, this value cannot be greater than the value of the effective APR on the backdated date."
    AprScheduleEntryResponse:
      required:
        - value
      type: object
      properties:
        apply_next_cycle:
          type: boolean
          description: Whether the APR is ignored for the current billing cycle and applied on the next.
          default: false
        effective_date:
          type: string
          description: 'Date and time when the APR goes into effect, in UTC.'
          format: date-time
        margin:
          type: number
          description: "Number of percentage points added to the prime rate, used to calculate a variable value.\n\nUsed for variable values only."
          format: float
        type:
          enum:
            - FIXED
            - VARIABLE
          type: string
          description: Indicates whether the APR value is fixed or variable.
          default: FIXED
        value:
          maximum: 100
          minimum: 0
          type: number
          description: "Percentage value of the APR.\n\nIf the APR type is `FIXED`, this is the value of the fixed rate.\nIf the APR type is `VARIABLE`, the value is calculated by adding the margin to the prime rate that was stored on Marqeta's credit platform when your credit program was created.\n\nWhen backdating an APR, this value cannot be greater than the value of the effective APR on the backdated date."
    AprScheduleEntryUpdateReq:
      required:
        - value
      type: object
      properties:
        apply_next_cycle:
          type: boolean
          description: Whether the APR can be ignored for the current billing cycle and applied on the next.
          default: false
        effective_date:
          type: string
          description: "Date and time when the APR goes into effect, in UTC.\n\nIf you do not include a date-time value, the system uses the date and time when the API request was received.\n\n*NOTE:*\nWhen passing multiple `schedule` objects, this field is required in all objects but the first.\nIf you do not include `effective_date` in the first `schedule`, the system uses the date and time when the API request was received."
          format: date-time
        margin:
          type: number
          description: "Number of percentage points added to the prime rate, used to calculate a variable value.\n\nUsed for variable values only."
          format: float
        type:
          enum:
            - FIXED
            - VARIABLE
          type: string
          description: Indicates whether the APR value is fixed or variable.
          default: FIXED
        value:
          maximum: 100
          minimum: 0
          type: number
          description: "Percentage value of the APR.\n\nIf the APR type is `FIXED`, this is the value of the fixed rate.\nIf the APR type is `VARIABLE`, the value is calculated by adding the margin to the prime rate that was stored on Marqeta's credit platform when your credit program was created.\n\nWhen backdating an APR, this value cannot be greater than the value of the effective APR on the backdated date."
    AprScheduleResponse:
      required:
        - schedule
        - type
      type: object
      properties:
        active:
          type: boolean
          description: Whether the APR is active.
        created_date:
          type: string
          description: 'Date and time when the APR was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        schedule:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AprScheduleEntryResponse'
          description: 'Contains one or more `schedule` objects, which contain information about the annual percentage rates (APRs) associated with the type of balance on the credit account and when they are effective.'
        type:
          $ref: '#/components/schemas/AccountAprType'
        updated_date:
          type: string
          description: 'Date and time when the APR was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
    AprScheduleUpdateReq:
      required:
        - schedule
        - type
      type: object
      properties:
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/AprScheduleEntryUpdateReq'
          description: 'Contains one or more `schedule` objects, which contain information about the annual percentage rates (APRs) associated with the type of balance on the credit account and when they are effective.'
        type:
          $ref: '#/components/schemas/AccountAprType'
    Association:
      type: object
      properties:
        card_group_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card group.
      description: Defines to which the velocity control applies.
    AuthControlExemptMidsListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/auth_control_exempt_mids_response'
          description: "Array of objects in a returned resource.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
          format: int32
    AuthControlListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/auth_control_response'
          description: "Array of objects in a returned resource.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    Authentication:
      type: object
      properties:
        email_verified:
          type: boolean
          description: Specifies whether the email address has been verified.
          default: false
        email_verified_time:
          type: string
          description: Date and time when the email address was verified.
          format: date-time
        last_password_update_channel:
          enum:
            - USER_CHANGE
            - USER_RESET
          type: string
          description: Specifies the channel through which the password was last changed.
        last_password_update_time:
          type: string
          description: Date and time when the password was last changed.
          format: date-time
      description: Contains the cardholder's email address and password information.
    AutoReloadListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are objects in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/auto_reload_response_model'
          description: "Array of auto reload objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are objects in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are objects in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are objects in your returned array."
          format: int32
    BalanceType:
      enum:
        - PURCHASE
      type: string
      description: "Type of balance.\n\n* `PURCHASE` - The balance on purchases."
    BankTransferListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/bank_transfer_response_model'
          description: "Array of ACH transfer objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    BankTransferTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/bank_transfer_transition_response_model'
          description: "Array of ACH transfer transition objects.\n\nThis field is returned if there are resources in your returned array."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    BillPayResponse:
      type: object
      properties:
        amount:
          type: string
        biller_token:
          type: string
        created_time:
          type: string
        delivery_date:
          type: string
        last_modified_time:
          type: string
        payment_token:
          type: string
        payment_type:
          type: string
        processing_date:
          type: string
        status:
          type: string
        user_token:
          type: string
    BillingAddress:
      type: object
      properties:
        address:
          type: string
        compressed_zip:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        zip:
          type: string
    BulkCardOrderListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/bulk_issuance_response'
          description: "Array of bulk issuance objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    BundleCreateReq:
      required:
        - apr_policy_token
        - credit_product_policy_token
        - description
        - document_policy_token
        - fee_policy_token
        - name
        - status
      type: object
      properties:
        apr_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the APR policy.
        credit_product_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the credit product policy.
        description:
          maxLength: 255
          type: string
          description: Description of the bundle.
        document_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the document policy.
        fee_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the fee policy.
        name:
          maxLength: 255
          type: string
          description: Name of the bundle.
        offer_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the offer policy.
        reward_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the reward policy.
        status:
          $ref: '#/components/schemas/BundleResourceStatus'
        token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle.
      description: Contains information on a bundle.
    BundleResourceStatus:
      enum:
        - DRAFT
        - PENDING_APPROVAL
        - SENT_FOR_REVISION
        - ACTIVE
        - REJECTED
        - ARCHIVED
        - APPROVED
      type: string
      description: "Status of the bundle.\n\n* `DRAFT` - The bundle is in the process of being created.\n* `PENDING_APPROVAL` - The bundle has been created and is awaiting approval.\n* `SENT_FOR_REVISION` - The bundle has been returned for revision.\n* `ACTIVE` - The bundle is active.\n* `REJECTED` - The bundle has been rejected; this status cannot be changed.\n* `ARCHIVED` - The previously active bundle has been archived.\n* `APPROVED` - The bundle has been approved (after having been sent for approval)."
    BundleResponse:
      type: object
      properties:
        apr_policy_detail:
          $ref: '#/components/schemas/PolicyAprResponse'
        apr_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's APR policy.
        created_time:
          type: string
          description: 'Date and time when the bundle was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        credit_product_policy_detail:
          $ref: '#/components/schemas/PolicyProductResponse'
        credit_product_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's credit product policy.
        description:
          type: string
          description: Description of the bundle.
        document_policy_detail:
          $ref: '#/components/schemas/PolicyDocumentResponse'
        document_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's document policy.
        fee_policy_detail:
          $ref: '#/components/schemas/PolicyFeeResponse'
        fee_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's fee policy.
        name:
          type: string
          description: Name of the bundle.
        offer_policy_detail:
          $ref: '#/components/schemas/PolicyOfferResponse'
        offer_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's offer policy.
        reward_policy_detail:
          $ref: '#/components/schemas/PolicyRewardResponse'
        reward_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's reward policy.
        status:
          $ref: '#/components/schemas/BundleResourceStatus'
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the bundle.
        updated_time:
          type: string
          description: 'Date and time when the bundle was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: Contains information on a bundle.
    BundleResponsePage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/BundleResponse'
          description: Contains one or more bundles.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Returns paginated bundles.
    BundleTransitionReq:
      required:
        - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/BundleResourceStatus'
      description: Contains information on a bundle transition.
    BundleTransitionResponse:
      type: object
      properties:
        bundle_token:
          maxLength: 36
          type: string
          description: Unique identifier of the bundle.
        created_time:
          type: string
          description: 'Date and time when the bundle was changed the status on Marqeta''s credit platform, in UTC.'
          format: date-time
        original_status:
          $ref: '#/components/schemas/BundleResourceStatus'
        status:
          $ref: '#/components/schemas/BundleResourceStatus'
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the bundle transition.
      description: Contains information on a bundle transition.
    BundleUpdateReq:
      required:
        - apr_policy_token
        - credit_product_policy_token
        - description
        - document_policy_token
        - fee_policy_token
        - name
      type: object
      properties:
        apr_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's APR policy.
        credit_product_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's credit product policy.
        description:
          maxLength: 255
          type: string
          description: Description of the bundle.
        document_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's document policy.
        fee_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's fee policy.
        name:
          maxLength: 255
          type: string
          description: Name of the bundle.
        offer_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's offer policy.
        reward_policy_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the bundle's reward policy.
      description: Specifies bundles for a credit program.
    BusinessCardHolderListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/business_cardholder'
          description: "Array of business objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    BusinessTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "The number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/BusinessTransitionResponse'
          description: "Array of business transition objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    BusinessTransitionRequest:
      required:
        - business_token
        - channel
        - reason_code
        - status
      type: object
      properties:
        business_token:
          type: string
          description: Unique identifier of the business whose status you want to transition.
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
          description: Mechanism by which the transaction was initiated.
        idempotentHash:
          type: string
          description: Unique hashed value that identifies subsequent submissions of the business transition request.
        reason:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional information about the status change.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "Identifies the standardized reason for the transition:\n\n*00:* Object activated for the first time.\n\n*01:* Requested by you.\n\n*02:* Inactivity over time.\n\n*03:* This address cannot accept mail or the addressee is unknown.\n\n*04:* Negative account balance.\n\n*05:* Account under review.\n\n*06:* Suspicious activity was identified.\n\n*07:* Activity outside the program parameters was identified.\n\n*08:* Confirmed fraud was identified.\n\n*09:* Matched with an Office of Foreign Assets Control list.\n\n*10:* Card was reported lost.\n\n*11:* Card information was cloned.\n\n*12:* Account or card information was compromised.\n\n*13:* Temporary status change while on hold/leave.\n\n*14:* Initiated by Marqeta.\n\n*15:* Initiated by issuer.\n\n*16:* Card expired.\n\n*17:* Failed KYC.\n\n*18:* Changed to `ACTIVE` because information was properly validated.\n\n*19:* Changed to `ACTIVE` because account activity was properly validated.\n\n*20:* Change occurred prior to the normalization of reason codes.\n\n*21:* Initiated by a third party, often a digital wallet provider.\n\n*22:* PIN retry limit reached.\n\n*23:* Card was reported stolen.\n\n*24:* Address issue.\n\n*25:* Name issue.\n\n*26:* SSN issue.\n\n*27:* DOB issue.\n\n*28:* Email issue.\n\n*29:* Phone issue.\n\n*30:* Account/fulfillment mismatch.\n\n*31:* Other reason."
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
          description: Specifies the new status of the business.
        token:
          type: string
          description: "Unique identifier of the business transition.\n\nIf you do not include a token, the system generates one automatically.\nThis token is referenced in other API calls, so we recommend that you define a simple string that is easy to remember.\nThis value cannot be updated."
    BusinessTransitionResponse:
      required:
        - channel
        - reason_code
        - status
        - token
      type: object
      properties:
        business_token:
          type: string
          description: Unique identifier of the business whose status you want to transition.
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
          description: Mechanism by which the transaction was initiated.
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last updated, in UTC.'
          format: date-time
        reason:
          type: string
          description: Additional information about the status change.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "Identifies the standardized reason for the transition:\n\n*00:* Object activated for the first time.\n\n*01:* Requested by you.\n\n*02:* Inactivity over time.\n\n*03:* This address cannot accept mail or the addressee is unknown.\n\n*04:* Negative account balance.\n\n*05:* Account under review.\n\n*06:* Suspicious activity was identified.\n\n*07:* Activity outside the program parameters was identified.\n\n*08:* Confirmed fraud was identified.\n\n*09:* Matched with an Office of Foreign Assets Control list.\n\n*10:* Card was reported lost.\n\n*11:* Card information was cloned.\n\n*12:* Account or card information was compromised.\n\n*13:* Temporary status change while on hold/leave.\n\n*14:* Initiated by Marqeta.\n\n*15:* Initiated by issuer.\n\n*16:* Card expired.\n\n*17:* Failed KYC.\n\n*18:* Changed to `ACTIVE` because information was properly validated.\n\n*19:* Changed to `ACTIVE` because account activity was properly validated.\n\n*20:* Change occurred prior to the normalization of reason codes.\n\n*21:* Initiated by a third party, often a digital wallet provider.\n\n*22:* PIN retry limit reached.\n\n*23:* Card was reported stolen.\n\n*24:* Address issue.\n\n*25:* Name issue.\n\n*26:* SSN issue.\n\n*27:* DOB issue.\n\n*28:* Email issue.\n\n*29:* Phone issue.\n\n*30:* Account/fulfillment mismatch.\n\n*31:* Other reason."
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
          description: Specifies the status of the business.
        token:
          type: string
          description: Unique identifier of the business transition.
    BusinessUserCardHolderListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of user resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/user_card_holder_response'
          description: "Array of user objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    CalculationType:
      enum:
        - NET_BALANCE
      type: string
      description: "Type of calculation for the reward.\n\n* `NET_BALANCE` - The reward is calculated based on the net balance for a billing cycle, which is the total amount spent during a billing cycle, minus any refunds or disputes."
    CardCreateReq:
      required:
        - card_product_token
        - user_token
      type: object
      properties:
        activation_actions:
          $ref: '#/components/schemas/ActivationActions'
        card_product_token:
          type: string
          description: Unique identifier of the associated card product.
        expiration_offset:
          $ref: '#/components/schemas/ExpirationOffset'
        new_pan_from_card_token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: "Reissues the specified card (known as the \"source\" card) with a new primary account number (PAN).\n\nThis field reissues a card with a new PAN from the specified source card.\nThe source card is automatically terminated when the card is reissued with the new PAN.\nUse this field when reissuing a lost or stolen card."
        reissue_pan_from_card_token:
          maxLength: 36
          type: string
          description: "Reissues the specified card (known as the \"source\" card).\n\nThis field reissues a card by copying the PAN and PIN from the specified source card to the newly created card.\nThe reissued card has the same PAN and PIN as the source card but a new expiration date and CVV2 number.\n\n*NOTE:* By default, the source card is automatically terminated when the reissued card is activated.\nHowever, if your program is configured for multiple active cards, you can prevent the source card from being automatically terminated by setting the `activation_actions.terminate_reissued_source_card` field to `false`."
        token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the credit card.
        translate_pin_from_card_token:
          maxLength: 36
          type: string
          description: "Copies the PIN from the specified card to the newly created card.\n\nBoth cards must belong to the same user. This field is not allowed if `reissue_pan_from_card_token` is set.\n\nSend a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user."
        user_token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit cardholder.
      description: Information to create a credit card.
    CardFulfillmentRequest:
      required:
        - card_personalization
      type: object
      properties:
        card_fulfillment_reason:
          enum:
            - NEW
            - LOST_STOLEN
            - EXPIRED
          type: string
          description: Reason for card fulfillment.
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/shipping'
      description: 'Specifies certain physical characteristics of a card, as well as shipment information.'
    CardFulfillmentResponse:
      required:
        - card_personalization
      type: object
      properties:
        card_fulfillment_reason:
          enum:
            - NEW
            - LOST_STOLEN
            - EXPIRED
          type: string
          description: Descriptive reason for the card fulfillment.
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/ShippingInformationResponse'
      description: Determines physical characteristics of a card and shipment information.
    CardGroup:
      required:
        - source_card_token
        - token
      type: object
      properties:
        card_tokens:
          type: array
          items:
            type: string
          description: Array of card tokens associated with group. There will be at least one card token in the array.
        created_time:
          type: string
          description: "Date and time the card group was created in the system.\nThe date and time is provided in ISO 8601 format."
          format: date-time
        last_issued_card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the last reissued card token associated with group. It may be empty if there is no reissued card.
        source_card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the card token associated with group. This is the card that will be used to create the card group.\nThe Card Group Service will send a request to JCard to verify that this card is not a reissue or replacement."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the card group.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        updated_time:
          type: string
          description: "Date and time the card group was last updated in the system.\nThe date and time is provided in ISO 8601 format."
          format: date-time
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the user this card group belongs to.
      description: Request body for a Card Group object
    CardGroupPage:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/CardGroup'
          description: "Array of Card Group objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    CardGroupReq:
      required:
        - card_token
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier token of the card token to be associated with the group.
      description: Request body for creating a new Card Group object
    CardListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "The number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/card_response'
          description: "Array of card objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    CardProductListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/card_product_response'
          description: "Array of card product objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    CardResponse:
      required:
        - account_token
        - created_time
        - token
        - updated_time
        - user_token
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the associated credit account.
        created_time:
          type: string
          description: 'Date and time when the card was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        token:
          type: string
          description: Unique identifier of the credit card.
        updated_time:
          type: string
          description: 'Date and time when the card was last modified on Marqeta''s credit platform, in UTC.'
          format: date-time
        user_token:
          type: string
          description: Unique identifier of the credit cardholder.
      description: Information about a credit card.
    CardTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/card_transition_response'
          description: "Array of card transition objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    CardholderAddressListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/CardholderAddressResponse'
          description: "Array of address objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    CardholderAddressResponse:
      required:
        - address_1
        - city
        - country
        - created_time
        - first_name
        - last_modified_time
        - last_name
        - postal_code
        - state
        - token
        - zip
      type: object
      properties:
        active:
          type: boolean
          description: Whether the address is active.
          default: false
        address_1:
          maxLength: 255
          minLength: 0
          type: string
          description: Street address of the funding source.
        address_2:
          maxLength: 255
          minLength: 0
          type: string
          description: "Additional address information for the funding source.\n\nThis field is returned if it exists in the resource."
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business account holder associated with the address.\n\nThis field is returned if it exists in the resource."
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: City of the funding source.
        country:
          maxLength: 40
          minLength: 1
          type: string
          description: Country of the funding source.
        created_time:
          type: string
          description: 'Date and time when the address was created, in UTC.'
          format: date-time
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: First name of the account holder associated with the funding source.
        is_default_address:
          type: boolean
          description: Whether this address is the default address used by the funding source.
          default: false
        last_modified_time:
          type: string
          description: "Date and time when the address was last modified, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Last name of the account holder associated with the funding source.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: "Phone number of the funding source.\n\nThis field is returned if it exists in the resource."
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal code of the funding source.
        state:
          maxLength: 2
          minLength: 0
          type: string
          description: "Two-character state, province, or territorial abbreviation.\n\nFor the complete list, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the `funding_source_address` object.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user account holder associated with the address.\n\nThis field is returned if it exists in the resource."
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: United States ZIP code of the funding source.
      description: Contains information about the billing address of the funding source.
    ClearingModel:
      required:
        - amount
        - original_transaction_token
      type: object
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        force_post:
          type: boolean
          default: false
        is_refund:
          type: boolean
          default: false
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
    CommandoModeListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of Commando Mode control sets to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/commando_mode_response'
          description: "Array of Commando Mode control set objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    CommandoModeTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          description: Number of Commando Mode control set transition objects to retrieve.
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/commando_mode_transition_response'
          description: Array of Commando Mode control set transition objects.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
          format: int32
        is_more:
          type: boolean
          description: Value of `true` indicates that more unreturned resources exist.
          default: false
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
          format: int32
    ConfigFeeScheduleEntry:
      required:
        - method
        - value
      type: object
      properties:
        effective_date:
          type: string
          description: 'Date and time when the fee goes into effect, in UTC.'
          format: date-time
        method:
          $ref: '#/components/schemas/FeeMethod'
        value:
          maximum: 9999.99
          minimum: 0
          type: number
          description: Amount of the fee.
      description: Contains information on a fee schedule.
    ConfigFeeScheduleReq:
      required:
        - schedule
        - type
      type: object
      properties:
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/ConfigFeeScheduleEntry'
          description: Contains one or more fee schedules.
        type:
          $ref: '#/components/schemas/AccountProductFeeType'
      description: Contains information relevant to configuring fees.
    ConfigFeeScheduleResponse:
      type: object
      properties:
        active:
          type: boolean
          description: Whether the fee is active.
        created_date:
          type: string
          description: 'Date and time when the fee was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/ConfigFeeScheduleEntry'
          description: Contains one or more fee schedules.
        type:
          $ref: '#/components/schemas/AccountProductFeeType'
        updated_date:
          type: string
          description: 'Date and time when the fee was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: Contains information returned when configuring fees.
    CreateApplicationsRequest:
      required:
        - any_non_taxable_income
        - bundle_token
        - e_disclosure_tracking_token
        - monthly_mortgage_or_rent
        - primary_income_source
        - privacy_policy_tracking_token
        - residence_type
        - soct_tracking_token
        - total_annual_income
        - user_token
      type: object
      properties:
        any_non_taxable_income:
          type: boolean
          description: "A value of `true` indicates that the user has a non-taxable income source.\n\nRequired when retrieving an application."
        bundle_token:
          maxLength: 36
          type: string
          description: Unique identifier of the bundle associated with the application.
        device_data:
          $ref: '#/components/schemas/DeviceData'
        e_disclosure_tracking_token:
          type: string
          description: "The tracking token of the eDisclosure.\n\nThis is the `tracking_token` returned in the `E_DISCLOSURE` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made."
        meta_data:
          type: object
          description: Customer-defined additional information about the application.
        monthly_mortgage_or_rent:
          maximum: 99999.99
          minimum: 0
          type: number
          description: "Monthly amount of the mortgage or rent that the user currently pays.\n\nRequired when retrieving an application."
        offer_id:
          type: string
          description: Unique identifier of the offer for a pre-screened applicant.
        prequalified_offer_pre_terms_tracking_token:
          type: string
          description: "The tracking token of the Pre-qualified Offer Pre-Terms.\n\nThis is the `tracking_token` returned in the `PREQUALIFICATION_PRE_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made."
        primary_income_source:
          enum:
            - EMPLOYED
            - UNEMPLOYED
            - SELF_EMPLOYED
            - OTHER
          type: string
          description: "Whether the primary income source comes from the user being employed, unemployed, self-employment, or another situation.\n\nRequired when retrieving an application."
        privacy_policy_tracking_token:
          type: string
          description: "The tracking token of the Privacy Policy.\n\nThis is the `tracking_token` returned in the `PRIVACY_POLICY` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made."
        residence_type:
          enum:
            - OWN
            - RENT
            - OTHER
          type: string
          description: "Whether the user owns or rents their residence, or has another situation.\n\nRequired when retrieving an application."
        rewards_disclosure_pre_terms_tracking_token:
          type: string
          description: "The tracking token of the Rewards Disclosure Pre-terms.\n\nThis is the `tracking_token` returned in the `REWARDS_DISCLOSURE_PRE_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made."
        soct_tracking_token:
          type: string
          description: "The tracking token of the Summary of Credit Terms (SOCT).\n\nThis is the `tracking_token` returned in the `SOCT` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made."
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the application.
        total_annual_income:
          maximum: 99999999.99
          minimum: 0
          type: number
          description: "The total amount of the user's annual income.\n\nRequired when retrieving an application."
        type:
          $ref: '#/components/schemas/ApplicationType'
        user_token:
          maxLength: 36
          type: string
          description: 'Unique identifier of the applicant, the user applying for a credit account.'
    CreateRedemptionTransitionsRequest:
      required:
        - new_state
      type: object
      properties:
        external_settlement_date_time:
          type: string
          description: "Date and time when the reward redemption was settled on your external platform.\n\nPass this field if you handle the reward redemption outside of Marqeta's credit platform."
          format: date-time
        new_state:
          $ref: '#/components/schemas/RedemptionStatus'
    CreateRedemptionsRequest:
      required:
        - amount
        - type
      type: object
      properties:
        amount:
          minimum: 0.0
          exclusiveMinimum: true
          type: number
          description: Amount of the reward redemption.
          format: decimal
        destination:
          $ref: '#/components/schemas/DestinationType'
        note:
          type: string
          description: A note explaining why the reward is being redeemed.
        receiving_account_token:
          maxLength: 36
          type: string
          description: "Unique identifier of the external account receiving the reward redemption.\nThis token is equivalent to the <</core-api/payment-sources, payment source>> token."
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward redemption.
        type:
          $ref: '#/components/schemas/RedemptionType'
    CreateRewardProgramsEntriesRequest:
      required:
        - note
        - value
      type: object
      properties:
        created_time:
          type: string
          description: 'Date and time when the reward entry was created on the Marqeta platform, in UTC.'
          format: date-time
        note:
          type: string
          description: A note explaining why the reward entry is being created manually.
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward entry.
        value:
          minimum: 0.01
          type: number
          description: Value of the reward granted to the account.
          format: decimal
    CreditBureau:
      required:
        - address
        - name
        - phone_number
        - website
      type: object
      properties:
        address:
          $ref: '#/components/schemas/CreditBureauAddress'
        name:
          type: string
          description: Name of the credit bureau used to obtain the user's credit data.
        phone_number:
          type: string
          description: Phone number of the credit bureau.
          example: '5555555555'
        website:
          type: string
          description: Website of the credit bureau.
      description: Contains information on the credit bureau.
    CreditBureauAddress:
      required:
        - address1
        - city
        - state
        - zip
      type: object
      properties:
        address1:
          type: string
          description: Street address.
        address2:
          type: string
          description: Additional address information.
        city:
          type: string
          description: Address city.
        state:
          type: string
          description: Address state.
        zip:
          type: string
          description: Address ZIP code.
      description: Contains information on the address of the credit bureau.
    CurrencyCode:
      enum:
        - USD
      type: string
      description: 'Valid three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO 4217 currency code, window="_blank"]'
      default: USD
    CycleType:
      enum:
        - BEGINNING_REVOLVING
        - REVOLVING
        - END_REVOLVING
        - TRANSACTING
      type: string
      description: "Type of cycle.\n\n* `BEGINNING_REVOLVING` - Account is beginning to revolve and just started carrying a balance\nfrom the previous month.\n* `REVOLVING` - Account is revolving and has been carrying a balance from month to month for more than one month.\n* `END_REVOLVING` - Account is no longer revolving and the previous month's balance is paid off.\n* `TRANSACTING` - Account is not revolving and the balance is paid off each month."
    DDARequest:
      required:
        - dda
      type: object
      properties:
        dda:
          type: string
    DecisionsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/PostDecisionsResponse'
      properties:
        adverse_action_template_code:
          type: string
          description: "Indicates the version of the Notice of Adverse Action (NOAA) template used.\nCan have these possible values:\n\n* `AA0` - score denial with score disclosure\n* `AA1` - individual reason with score disclosure\n* `AA2` - individual reason without score disclosure\n* `AA3` - locked and frozen\n* `AA4` - fraud related"
        card_product_level:
          enum:
            - PREMIUM
            - TRADITIONAL
          type: string
          description: The tier of the card product.
        created_date:
          type: string
          description: 'Date and time when the decision model was created on the Marqeta platform, in UTC.'
          format: date-time
        credit_bureau:
          $ref: '#/components/schemas/CreditBureau'
        credit_limit:
          type: integer
          description: 'The maximum line of credit extended to the user, also the maximum balance the credit account can carry.'
          format: int32
        credit_score:
          type: integer
          description: The user's credit score.
          format: int32
        credit_score_date:
          type: string
          description: Date and time when the credit score went into effect.
          format: date
        decision_date:
          type: string
          description: 'Date and time when the decision on the application was rendered, in UTC.'
          format: date-time
        denial_reasons:
          type: array
          items:
            type: string
          description: An array of reasons that explain why the application was declined.
          example:
            - CREDIT SCORE BELOW MINIMUM
            - PRIOR BANKRUPTCY
        expire_date:
          type: string
          description: Date when the decision model expires.
          format: date
        margin:
          type: number
          description: 'Number of percentage points added to the prime rate, used to calculate the purchase APR.'
          format: decimal
        prime_rate:
          type: number
          description: The current prime rate set by the Fed.
          format: decimal
        purchase_apr:
          type: number
          description: The purchase APR approved for the user.
          format: decimal
        received_best_rate:
          type: boolean
          description: "A value of `true` indicates that the user received the credit product's best APR.\n\nIf `false`, you must display to the user the following: `score_factors`, `credit_score`, `credit_score_date`, `credit_bureau`, `score_range`."
        score_factors:
          type: array
          items:
            type: string
          description: Factors that the bureau used to determine the user's credit score.
          example:
            - TOO FEW ACCOUNTS CURRENTLY PAID AS AGREED
            - LACK OF RECENT INSTALLMENT LOAN INFORMATION
            - TOO MANY ACCOUNTS WITH BALANCES
            - LENGTH OF TIME REVOLVING ACCOUNTS HAVE BEEN ESTABLISHED
        score_range:
          type: string
          description: The range in which the user's credit score falls.
      description: "Contains information on the decision model returned by the issuing bank if a decision has been rendered.\n\nReturned when retrieving an application after a decision has been rendered."
    DelinquencyBucketResponse:
      required:
        - bucket_number
        - current_due
        - days_past_due
        - past_due_carried_forward
        - payment_due_date
        - total_due
      type: object
      properties:
        bucket_number:
          type: integer
          description: "Delinquency bucket number in the returned array.\nDelinquency buckets are returned from most recent to least; the most recent delinquency bucket is `1`."
        current_due:
          type: number
          description: Current amount that is due for this delinquency bucket.
        days_past_due:
          type: integer
          description: Total number of days that the payment is past due for this delinquency bucket.
        past_due_carried_forward:
          type: number
          description: Amount that is past due and carried forward from previous delinquency buckets.
        payment_due_date:
          type: string
          description: Date that the payment was due for this delinquency bucket.
          format: date-time
        total_due:
          type: number
          description: Total amount that is due for this delinquency bucket; the sum of `past_due_carried_forward` and `current_due`.
      description: "One or more delinquency buckets for an account.\nEach delinquency bucket represents a billing cycle during which the account was delinquent."
    DelinquencyStateResponse:
      required:
        - account_token
        - current_due
        - is_delinquent
        - total_days_past_due
        - total_due
        - total_past_due
      type: object
      properties:
        account_token:
          type: string
          description: Unique identifier of the credit account.
          format: string
        buckets:
          type: array
          items:
            $ref: '#/components/schemas/DelinquencyBucketResponse'
          description: "One or more delinquency buckets for an account.\nEach delinquency bucket represents a billing cycle during which the account was delinquent."
        current_due:
          type: number
          description: Amount that is due for the current billing cycle.
        date_account_current:
          type: string
          description: "Date and time when the account was last made current on the Marqeta platform, in UTC.\n\nIf the account was never delinquent, this field returns the date and time the account was created on the Marqeta platform, in UTC.\n\nIf `is_delinquent` is `true`, a null value is returned."
          format: date-time
          nullable: true
        date_account_delinquent:
          type: string
          description: "Date and time when the account last fell delinquent on the Marqeta platform, in UTC.\n\nIf `is_delinquent` is `false`, a null value is returned."
          format: date-time
          nullable: true
        is_delinquent:
          type: boolean
          description: A value of `true` indicates that the account is currently delinquent.
        total_days_past_due:
          type: integer
          description: Total number of days that the account is past due.
        total_due:
          type: number
          description: Total amount that is due for the current billing cycle; the sum of `total_past_due_amount` and `current_due_amount`.
        total_past_due:
          type: number
          description: Total amount that is past due.
      description: Contains details of the delinquency state of an account.
    DelinquencyStatus:
      enum:
        - CURRENT
        - DELINQUENT
      type: string
      description: Delinquency status of an account.
    DelinquencyTransitionResponse:
      required:
        - account_token
        - created_time
        - impact_time
        - is_rolled_back
        - original_status
        - status
        - token
        - transition_trigger_reason
        - transition_trigger_time
      type: object
      properties:
        account_token:
          type: string
          description: Unique identifier of the credit account.
          format: string
        bucket_count:
          type: number
          description: Number of buckets for the account after the triggering event occurred.
        created_time:
          type: string
          description: 'Date and time when the delinquency state transition was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        current_due:
          type: number
          description: "Current amount that is due after the triggering event occurred.\n\nEquivalent to `current_due` for the account's most recent delinquency bucket.\nTo retrieve delinquency buckets for an account, send a `GET` request to `/credit/accounts/{account_token}/delinquencystate`."
        impact_time:
          type: string
          description: 'Date and time when the triggering event impacted the account, in UTC.'
          format: date-time
        is_rolled_back:
          type: boolean
          description: "A value of `true` indicates that the system invalidated and rolled back the delinquency transition.\n\nThis is a temporary field that allows Marqeta to handle occasional cases of out-of-order processing.\nThis can occur when two delinquency state transition webhooks are sent near-simultaneously.\n\nFor example, if a credit and a payment that bring an account current are made around the same time, two delinquency state transitions are sent very close together.\nIn these cases, one of the transitions is rolled back and invalidated.\nFor the transition that is rolled back, `is_rolled_back` is `true` and the transition should be ignored.\n\nThis field is temporary and to be deprecated when out-of-order processing is addressed in a future release."
        oldest_payment_due_date:
          type: string
          description: "Payment due date of the account's oldest delinquency bucket, in UTC.\n\nUseful when used with the delinquency state transition's `created_time` to determine the total number of days a payment is past due."
          format: date-time
        original_status:
          $ref: '#/components/schemas/DelinquencyStatus'
        status:
          $ref: '#/components/schemas/DelinquencyStatus'
        token:
          type: string
          description: Unique identifier of the delinquency state transition.
          format: string
        total_due:
          type: number
          description: "Total amount that is due after the triggering event occurred; the sum of `total_past_due` and `current_due`.\n\nEquivalent to `total_due` for the account's most recent delinquency bucket.\nTo retrieve delinquency buckets for an account, send a `GET` request to `/credit/accounts/{account_token}/delinquencystate`."
        total_past_due:
          type: number
          description: "Total amount that is past due after the triggering event occurred.\n\nEquivalent to `past_due_carried_forward` for the account's most recent delinquency bucket.\nTo retrieve delinquency buckets for an account, send a `GET` request to `/credit/accounts/{account_token}/delinquencystate`."
        transition_trigger_reason:
          $ref: '#/components/schemas/DelinquencyTransitionTriggerReason'
        transition_trigger_time:
          type: string
          description: "Date and time when the triggering event caused the account's delinquency state to transition, in UTC.\n\nFor <</core-api/credit-account-journal-entries, journal entries>>, equivalent to `request_time`.\nFor <</core-api/credit-account-statements#listStatementJournalEntries, statement journal entries>>, equivalent to `impact_time`,"
          format: date-time
        updated_time:
          type: string
          description: 'Date and time when the delinquency state transition was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: Contains details of the account's delinquency state transition.
    DelinquencyTransitionTriggerReason:
      enum:
        - PAYMENT
        - PAYMENT_VOID
        - CREDIT
        - MINIMUM_PAYMENT_OVERRIDE
        - STATEMENT_GENERATION
        - REAGE
      type: string
      description: Event that triggered an update to the account's delinquency state.
    DelinquencyTransitionsResponsePage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/DelinquencyTransitionResponse'
          description: List of delinquency state transitions.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Returns paginated information for multiple delinquency state transitions.
    DepositAccountUpdateRequest:
      type: object
      properties:
        allow_immediate_credit:
          type: boolean
          default: false
    DepositDepositResponse:
      type: object
      properties:
        amount:
          type: number
          description: Amount being debited or credited.
        business_token:
          type: string
          description: The unique identifier of the business account holder.
        company_discretionary_data:
          type: string
          description: Company-specific data provided by the direct deposit originator.
        company_entry_description:
          type: string
          description: Company-specific data provided by the direct deposit originator.
        company_identification:
          type: string
          description: Alphanumeric code that identifies the direct deposit originator.
        company_name:
          type: string
          description: Name of the direct deposit originator.
        created_time:
          type: string
          description: Date and time when the direct deposit account was created.
          format: date-time
        direct_deposit_account_token:
          type: string
          description: The unique identifier of the direct deposit account.
        individual_identification_number:
          type: string
          description: Accounting number by which the recipient is known to the direct deposit originator.
        individual_name:
          type: string
          description: Name of the direct deposit recipient.
        last_modified_time:
          type: string
          description: Date and time when the direct deposit account was last modified.
          format: date-time
        settlement_date:
          type: string
          description: Date and time when the credit or debit is applied.
          format: date-time
        standard_entry_class_code:
          type: string
          description: Three-letter code identifying the type of entry.
        state:
          enum:
            - PENDING
            - APPLIED
            - REVERSED
            - REJECTED
          type: string
          description: Current status of the direct deposit record.
        state_reason:
          type: string
          description: Explanation for why the direct deposit record is in the current state.
        state_reason_code:
          type: string
          description: Standard code describing the reason for the current state.
        token:
          type: string
          description: The unique identifier of the direct deposit record.
        type:
          enum:
            - CREDIT
            - DEBIT
          type: string
          description: Determines whether funds are being debited from or credited to the account.
        user_token:
          type: string
          description: The unique identifier of the user account holder.
      description: Contains information about a direct deposit.
    DestinationType:
      enum:
        - INVESTMENT
        - WALLET
        - ACH
      type: string
      description: "Destination of the reward redemption.\n\n* `INVESTMENT` - The redemption is paid into an investment account.\n* `WALLET` - The redemption is paid into a digital wallet.\n* `ACH` - The redemption is paid into an ACH account.\nRequired for external redemptions."
    DeviceData:
      type: object
      properties:
        data:
          type: string
          description: The data generated by the embedded component.
        provider:
          type: string
          description: The provider of the embedded component.
      description: "Contains information on user's device fingerprint.\nUsually obtained through a component embedded in the application.\n\nRequired if application `type` is `PREQUALIFICATION`."
    DigitalWalletTokenListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources returned.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/digital_wallet_token'
          description: "Array of digital wallet token resources.\n\nResources are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    DigitalWalletTokenTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources returned.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/digital_wallet_token_transition_response'
          description: "Array of digital wallet token transition resources.\n\nResources are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    DirectDepositAccountListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/direct_deposit_account_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    DirectDepositListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/DirectDepositResponse'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    DirectDepositRequest:
      required:
        - account_number
        - amount
        - settlement_date
        - type
      type: object
      properties:
        account_number:
          type: string
        amount:
          type: number
        company_discretionary_data:
          maxLength: 20
          minLength: 0
          type: string
        company_entry_description:
          maxLength: 10
          minLength: 0
          type: string
        company_identification:
          maxLength: 10
          minLength: 0
          type: string
        company_name:
          maxLength: 16
          minLength: 0
          type: string
        earlyPayEligible:
          type: boolean
          default: false
        individual_identification_number:
          maxLength: 22
          minLength: 0
          type: string
        individual_name:
          maxLength: 35
          minLength: 0
          type: string
        settlement_date:
          type: string
          format: date-time
        standard_entry_class_code:
          maxLength: 3
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 0
          type: string
        type:
          enum:
            - CREDIT
            - DEBIT
          type: string
    DirectDepositResponse:
      type: object
      properties:
        amount:
          type: number
        business_token:
          type: string
        company_discretionary_data:
          type: string
        company_entry_description:
          type: string
        company_identification:
          type: string
        company_name:
          type: string
        created_time:
          type: string
          format: date-time
        direct_deposit_account_token:
          type: string
        early_direct_deposit:
          type: boolean
          default: false
        individual_identification_number:
          type: string
        individual_name:
          type: string
        last_modified_time:
          type: string
          format: date-time
        originator_status_code:
          type: string
        settlement_date:
          type: string
          format: date-time
        standard_entry_class_code:
          type: string
        state:
          enum:
            - PENDING
            - APPLIED
            - REVERSED
            - REJECTED
          type: string
        state_reason:
          type: string
        state_reason_code:
          type: string
        token:
          type: string
        trace_number:
          type: string
        type:
          enum:
            - CREDIT
            - DEBIT
          type: string
        user_token:
          type: string
    DirectDepositTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/DirectDepositTransitionResponse'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    DirectDepositTransitionRequest:
      required:
        - channel
        - direct_deposit_token
        - reason
        - state
      type: object
      properties:
        channel:
          enum:
            - API
            - SYSTEM
            - PROD_SUPPORT
          type: string
        direct_deposit_token:
          type: string
        idempotentHash:
          type: string
        reason:
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          enum:
            - R01
            - R02
            - R03
            - R04
            - R06
            - R08
            - R09
            - R10
            - R11
            - R14
            - R15
            - R16
            - R17
            - R18
            - R20
            - R23
            - R24
            - R29
          type: string
        state:
          enum:
            - PENDING
            - APPLIED
            - REVERSED
            - REJECTED
          type: string
        token:
          type: string
    DirectDepositTransitionResponse:
      type: object
      properties:
        amount:
          type: number
        business_token:
          type: string
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
            - NETWORK
            - PROD_SUPPORT
            - UNSUPPORTED
          type: string
        company_discretionary_data:
          type: string
        company_entry_description:
          type: string
        company_identification:
          type: string
        company_name:
          type: string
        created_time:
          type: string
          format: date-time
        direct_deposit_account_token:
          type: string
        direct_deposit_token:
          type: string
        early_direct_deposit:
          type: boolean
          default: false
        individual_identification_number:
          type: string
        individual_name:
          type: string
        last_modified_time:
          type: string
          format: date-time
        originator_status_code:
          type: string
        reason:
          type: string
        reason_code:
          type: string
        settlement_date:
          type: string
          format: date-time
        standard_entry_class_code:
          type: string
        state:
          enum:
            - PENDING
            - APPLIED
            - REVERSED
            - REJECTED
          type: string
        token:
          type: string
        trace_number:
          type: string
        transaction_token:
          type: string
        type:
          type: string
        user_token:
          type: string
    DisputeCategory:
      enum:
        - FRAUD
        - AUTH
        - PROCESSING_ERROR
        - CONSUMER_DISPUTE
      type: string
      description: Category to which the dispute belongs.
    DisputeCreateReq:
      required:
        - amount
        - category
        - ledger_entry_token
      type: object
      properties:
        amount:
          minimum: 0.01
          type: number
          description: "Amount of the dispute.\nMax value is equal to the value of the original transaction."
        category:
          $ref: '#/components/schemas/DisputeCategory'
        ledger_entry_token:
          maxLength: 36
          type: string
          description: Unique identifier of the journal entry (`authorization.clearing` type only) in dispute.
          format: string
        notes:
          maxLength: 750
          type: string
          description: 'Additional information on the dispute (for example, a reason for the dispute).'
          format: string
        token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the dispute.
          format: string
      description: Information about a transaction dispute creation request.
    DisputeModel:
      type: object
      properties:
        case_management_identifier:
          type: string
          description: The unique identifier of the dispute case.
        reason:
          type: string
          description: The reason for the dispute.
      description: Contains information about a disputed transaction.
    DisputeResponse:
      required:
        - account_token
        - amount
        - category
        - created_time
        - ledger_entry_token
        - status
        - token
        - updated_time
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit account on which the dispute was created.
          format: string
        amount:
          type: number
          description: Amount of the dispute.
        category:
          $ref: '#/components/schemas/DisputeCategory'
        created_time:
          type: string
          description: 'Date and time when the dispute was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        ledger_entry_token:
          type: string
          description: Unique identifier of the journal entry (`authorization.clearing` type only) in dispute.
          format: string
        notes:
          type: string
          description: 'Additional information on the dispute (for example, a reason for the dispute).'
          format: string
        resolved_at:
          type: string
          description: Date and time when the dispute was resolved and no longer in `ACTIVE` status.
          format: date-time
        status:
          $ref: '#/components/schemas/DisputeStatus'
        token:
          type: string
          description: Unique identifier of the dispute.
          format: string
        updated_time:
          type: string
          description: 'Date and time when the dispute was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: Information about a transaction dispute response.
    DisputeResponsePage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/DisputeResponse'
          description: Contains one or more disputes on a credit account.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Return paginated disputes.
    DisputeStatus:
      enum:
        - ACTIVE
        - REVERSED
        - AH_WON
        - AH_LOST
        - REFUNDED
      type: string
      description: "Status of the dispute.\n\n* `ACTIVE` - The dispute is active and awaiting resolution.\n* `REVERSED` - The dispute has been reversed and is no longer active.\n* `AH_WON` - The account holder won the dispute.\n* `AH_LOST` - The account holder lost the dispute."
    DisputeTransitionReq:
      required:
        - amount
        - status
      type: object
      properties:
        amount:
          type: number
          description: 'Updated amount of the dispute, based on the resolution.'
        notes:
          maxLength: 750
          type: string
          description: 'Additional information on the dispute update (for example, a reason for the dispute update).'
          format: string
        status:
          $ref: '#/components/schemas/DisputeStatus'
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the dispute update.
      description: Information about a transaction dispute update request.
    DisputeTransitionResponse:
      required:
        - account_token
        - amount
        - created_time
        - status
        - token
      type: object
      properties:
        account_token:
          type: string
          description: Unique identifier of the credit account on which the dispute was updated.
        amount:
          type: number
          description: 'Amount of the updated dispute, based on the resolution.'
        created_time:
          type: string
          description: 'Date and time when the dispute update was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        notes:
          maxLength: 750
          type: string
          description: 'Additional information on the dispute update (for example, a reason for the dispute update).'
          format: string
        status:
          $ref: '#/components/schemas/DisputeStatus'
        token:
          type: string
          description: Unique identifier of the dispute update.
      description: Information about a transaction dispute update request.
    DynamicMccType:
      enum:
        - HIGHEST_SPEND
      type: string
      description: Type of dynamic MCC.
    ErrorDetailsResponse:
      required:
        - application_token
        - message
        - token
        - type
      type: object
      properties:
        application_token:
          maxLength: 36
          type: string
          description: Unique identifier of the application that resulted in an error.
        message:
          type: string
          description: Message describing the error.
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the error details.
        type:
          enum:
            - VALIDATION
            - TIMEOUT
            - UPSTREAM
            - DOWNSTREAM
            - UNKNOWN
          type: string
          description: Type of error.
      description: Contains details on an application error.
    ExpandObjects:
      enum:
        - DEVICE_DATA
        - INCLUDE_DECISION
        - INCLUDE_ERROR
      type: string
    ExpirationOffset:
      type: object
      properties:
        unit:
          type: string
          description: Units for the `value` field.
        value:
          type: integer
          description: "Specifies the number of time units (as defined by the `unit` field in this object) that this card is valid.\nIn other words, cards expire `value` x `unit` after the date of issue.\n\nThis number is rounded as follows:\n\n* *YEARS* - Rounds up to the last second of the last day of the month of expiration.\nFor example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.\n\n* *MONTHS* - Rounds up to the last second of the last day of the month of expiration.\nFor example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.\n\n* *DAYS* - Rounds up to the last second of the day of expiration.\n\n* *HOURS*, *MINUTES*, *SECONDS* - No rounding."
      description: "Contains information on how long after the date of issue for when the cards are valid.\n\nIf this field is not specified, the card uses the `config.card_life_cycle.expiration_offset` of the bulk card order or card product as appropriate."
    FeeListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/fee_response'
          description: "An array of fee objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    FeeMethod:
      enum:
        - FLAT
        - PERCENTAGE
      type: string
      description: Method used to calculate the fee value.
    FeeType:
      enum:
        - FOREIGN_TRANSACTION_FEE
        - OVER_LIMIT_FEE
        - LATE_PAYMENT_FEE
        - RETURNED_PAYMENT_FEE
        - CARD_REPLACEMENT_FEE
        - MINIMUM_INTEREST_FEE
        - MINIMUM_INTEREST_FEE_REVERSAL
        - ANNUAL_FEE
        - MONTHLY_FEE
      type: string
      description: "Type of fee.\n\n*NOTE:*\nOnly `RETURNED_PAYMENT_FEE`, `LATE_PAYMENT_FEE`, `ANNUAL_FEE`, and `MONTHLY_FEE` are currently supported.\nDo not pass other fees types."
    FileLinks:
      type: object
      properties:
        html:
          type: string
          description: Link to the HTML version of the file.
        json:
          type: string
          description: Link to the JSON version of the file.
        pdf:
          type: string
          description: Link to the PDF version of the file.
      description: Contains links to the file in different formats.
    FileResponse:
      required:
        - file_type
        - links
      type: object
      properties:
        file_type:
          $ref: '#/components/schemas/FileType'
        links:
          $ref: '#/components/schemas/FileLinks'
        tracking_token:
          type: string
          description: "Unique identifier used to acknowledge that the file has been disclosed to the applicant.\n\nIf the file was already disclosed, a null value is returned.\n\n*NOTE*: The tracking token is only valid for 14 calendar days."
    FileType:
      enum:
        - SOCT
        - REWARDS_DISCLOSURE_PRE_TERMS
        - REWARDS_DISCLOSURE_POST_TERMS
        - BENEFITS_DISCLOSURE
        - CARD_MEMBER_AGREEMENT
        - PRIVACY_POLICY
        - E_DISCLOSURE
        - TERMS_SCHEDULE
        - NOAA
      type: string
      description: "Type of file.\n\n* `SOCT` - The Summary of Credit Terms (SOCT), which outlines the interest rates, interest charges, and fees associated with the credit account being offered to the user.\n* `REWARDS_DISCLOSURE_PRE_TERMS` - The Rewards Disclosure Pre-terms, which discloses detailed information about the rewards program on the credit account being offered to the user before a decision is rendered on their application.\n* `REWARDS_DISCLOSURE_POST_TERMS` - The Rewards Disclosure Post-terms, which discloses detailed information about the rewards program on the user's credit account if their application is approved.\n* `BENEFITS_DISCLOSURE` - The Benefits Disclosure, which which is given to a user if their application is approved and discloses detailed information about the benefits on the user's credit account.\n* `CARD_MEMBER_AGREEMENT` - The Card Member Agreement, which specifies the terms and conditions of the user's credit account, including the interest rates, interest charges, fees, minimum payment calculations, and more.\n* `PRIVACY_POLICY` - The Privacy Policy, which explains how the information on the user's application is collected, handled, and processed.\n* `E_DISCLOSURE` - The eDisclosure, which states that the user has agreed to receive disclosures electronically.\n* `TERMS_SCHEDULE` - The Terms Schedule, which is given to a user if their application is approved and specifies the interest rate details on the user's credit account.\n* `NOAA` - The Notice of Adverse Action (NOAA), which is given to a user if their application is declined and informs them of the specific reasons why they were denied a credit account."
    FraudFeedbackRequest:
      required:
        - actor
        - amount
        - is_fraud
        - status
        - transaction_token
      type: object
      properties:
        actor:
          enum:
            - UNKNOWN
            - THIRD_PARTY_FRAUD
            - CARD_USER_FRAUD
          type: string
          description: This is the party making a call.
        amount:
          type: string
        is_fraud:
          type: boolean
        status:
          enum:
            - CONFIRMED
            - DISPUTED
          type: string
          description: This is the value of the status of the fraud.
        transaction_token:
          maxLength: 64
          minLength: 3
          type: string
      description: of the fraud object
    FraudFeedbackResponse:
      required:
        - message
      type: object
      properties:
        message:
          maxLength: 256
          type: string
      description: of the fraudfeedback response object
    FulfillmentAddressResponse:
      type: object
      properties:
        address1:
          maxLength: 255
          minLength: 0
          type: string
          description: "Number and street of the address.\n\nThis field is returned if it exists in the resource."
        address2:
          maxLength: 255
          minLength: 0
          type: string
          description: "Additional address information.\n\nThis field is returned if it exists in the resource."
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: "City of the address.\n\nThis field is returned if it exists in the resource."
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: "Country of the address.\n\nThis field is returned if it exists in the resource."
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "First name of the addressee.\n\nThis field is returned if it exists in the resource."
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Last name of the addressee.\n\nThis field is returned if it exists in the resource."
        middle_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Middle name of the addressee.\n\nThis field is returned if it exists in the resource."
        phone:
          maxLength: 20
          minLength: 0
          type: string
          description: "Telephone number of the addressee.\n\nThis field is returned if it exists in the resource."
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: "Postal code of the address.\n\nThis field is returned if it exists in the resource."
        state:
          maxLength: 32
          minLength: 0
          type: string
          description: "State or province of the address.\n\nThis field is returned if it exists in the resource."
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: "United States ZIP code of the address.\n\nThis field is returned if it exists in the resource."
      description: Specifies a fulfillment shipping or return address.
    FulfillmentRequest:
      required:
        - card_personalization
      type: object
      properties:
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/shipping'
      description: 'Specifies certain physical characteristics of a card, as well as bulk shipment information.'
    FulfillmentResponse:
      required:
        - card_personalization
      type: object
      properties:
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/ShippingInformationResponse'
      description: "Specifies certain physical characteristics of a card, as well as bulk shipment information.\n\nThis object is returned if it exists in the resource."
    FundingAccountListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/funding_account_response_model'
          description: "Array of funding account objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    GPAUnloadListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/gpa_returns'
          description: "Array of GPA unload order objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    IdentificationRequestModel:
      required:
        - type
      type: object
      properties:
        expiration_date:
          type: string
          description: 'Expiration date of the identification, if applicable.'
        type:
          enum:
            - SSN
            - TIN
            - SIN
            - NIN
            - PASSPORT_NUMBER
            - DRIVERS_LICENSE
            - BUSINESS_NUMBER
            - BUSINESS_TAX_ID
            - TAXPAYER_REFERENCE
          type: string
          description: "Type of identification.\n\n*NOTE:* Full Social Security Number (SSN) is required for US-based cardholder KYC verification.\nNine digits only, no delimiters.\n`123456789`, for example."
        value:
          type: string
          description: Number associated with the identification.
      description: Contains identifications associated with the cardholder.
    IdentificationResponseModel:
      type: object
      properties:
        expiration_date:
          type: string
          description: 'Expiration date for the identification, if applicable.'
        type:
          enum:
            - SSN
            - TIN
            - SIN
            - NIN
            - PASSPORT_NUMBER
            - DRIVERS_LICENSE
            - BUSINESS_NUMBER
            - BUSINESS_TAX_ID
            - TAXPAYER_REFERENCE
          type: string
          description: Type of identification.
        value:
          type: string
          description: Number associated with the identification.
      description: Contains identifications associated with the cardholder.
    ImagesCarrier:
      type: object
      properties:
        message_1:
          type: string
          description: Specifies a custom message that appears on the card carrier.
        name:
          type: string
          description: Specifies a PNG image to display on the card carrier.
      description: Specifies personalized images that appear on the card carrier.
    InterestCalculation:
      required:
        - application_of_credits
        - day_count
        - grace_days_application
        - interest_application
        - interest_on_grace_reactivation
        - method
        - minimum_interest
      type: object
      properties:
        application_of_credits:
          $ref: '#/components/schemas/ApplicationOfCredits'
        day_count:
          enum:
            - ACTUAL
          type: string
          description: Day-count convention.
        exclude_tran_types:
          type: array
          items:
            enum:
              - LATE_PAYMENT_FEE
              - ANNUAL_FEE
              - MONTHLY_FEE
              - CASH_BACK_STATEMENT_CREDIT
              - RETURNED_PAYMENT_FEE
              - FOREIGN_TRANSACTION_FEE
            type: string
          description: 'One or more transactions that are excluded from current billing period''s interest charge, but included in next.'
          default:
            - ANNUAL_FEE
            - MONTHLY_FEE
            - LATE_PAYMENT_FEE
            - CASH_BACK_STATEMENT_CREDIT
            - FOREIGN_TRANSACTION_FEE
        grace_days_application:
          enum:
            - NEXT_CYCLE_DATE
          type: string
          description: Determines the last day of grace period based on which interest charges are calculated.
        interest_application:
          minItems: 1
          type: array
          items:
            enum:
              - PRINCIPAL
              - FEES
              - INTEREST
            type: string
          description: One or more balance types on which interest is applied.
          default:
            - PRINCIPAL
            - FEES
        interest_on_grace_reactivation:
          $ref: '#/components/schemas/InterestOnGraceReactivationEnum'
        method:
          enum:
            - AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
          type: string
          description: Method of interest calculation.
        minimum_interest:
          maximum: 999999999999.99
          minimum: 0
          type: number
          description: 'When interest is applied, this value determines the minimum amount of interest that can be charged.'
      description: Contains the configurations for interest calculation.
    InterestOnGraceReactivationEnum:
      enum:
        - ACCRUE_FULL_CYCLE
        - ACCRUE_PAYMENT_DATE
        - WAIVE
      type: string
      description: Determines whether to charge or waive interest for the billing period when the balance is paid off.
    JournalEntriesPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          maximum: 100
          minimum: 0
          type: integer
          description: Number of resources returned.
        data:
          maxItems: 100
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/JournalEntry'
          description: Contains one or more journal entries on a credit account.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Return filtered transactions.
    JournalEntry:
      required:
        - account_token
        - amount
        - created_time
        - currency_code
        - detail_token
        - group
        - id
        - impact_time
        - request_time
        - status
        - token
        - type
        - user_token
      type: object
      properties:
        account_token:
          type: string
          description: Unique identifier of the credit account associated with the credit card used to make the journal entry.
          format: string
        amount:
          type: number
          description: Amount of the journal entry.
        card_token:
          maxLength: 36
          minLength: 8
          type: string
          description: Unique identifier of the credit card used to make the journal entry.
          format: string
        created_time:
          type: string
          description: 'Date and time when the journal entry was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        detail_object:
          type: object
        detail_token:
          type: string
          description: Unique identifier of the journal entry's full details.
        dispute_token:
          type: string
          description: 'Unique identifier of the dispute, if the journal entry is disputed.'
        group:
          enum:
            - PURCHASE
            - REFUND
            - DISPUTE
            - ORIGINAL_CREDIT
            - FEE
            - REWARD
            - INTEREST
            - PAYMENT
            - ADJUSTMENT
            - BALANCE_TRANSFER
            - CASH_ADVANCE
            - BALANCE_REFUND
          type: string
          description: Group to which the journal entry belongs.
        id:
          maxLength: 8
          minLength: 8
          type: string
          description: 'Eight-digit numeric identifier of the journal entry, an alternate identifier to the UUID that is useful for remembering and referencing.'
        impact_time:
          type: string
          description: "Date and time when the journal entry impacts the account balance.\n\nFor purchases, this is the time of the authorization.\n\nFor purchase authorization clearings, this is the time when the transaction is settled."
          format: date-time
        memo:
          type: string
          description: Merchant name or description for the journal entry.
          example: Whole Foods Market
        original_currency:
          $ref: '#/components/schemas/OriginalCurrency'
        related_token:
          type: string
          description: "Unique identifier of the original journal entry.\nIf the current journal entry is the original, this field is returned empty."
        request_time:
          type: string
          description: "For purchases, the date and time of the authorization, which is when the user initiates the journal entry.\n\nFor other journal entry groups, equivalent to `impact_time`."
          format: date-time
        root_token:
          type: string
          description: "Unique identifier of the root journal entry.\nIf the current journal entry is the root, this field is returned empty."
        status:
          enum:
            - PENDING
            - POSTED
            - DECLINED
            - ERROR
            - CLEARED
          type: string
          description: "Status of the journal entry when it was initially recorded and had an impact on the balance, either `PENDING` or `POSTED`.\nThis field is immutable and may not represent the current status.\n\nTo view the current status of purchases, refunds, OCTs, and payments, see the `detail_object.state` field.\nThese journal entries start in `PENDING` and can transition to `CLEARED`, `DECLINED`, or `ERROR`.\nThis transition of status is only sent through webhook event notifications.\n\nJournal entries that are final transactions, such as clearings, start and remain in a `POSTED` state.\n\n*NOTE*:\n`CLEARED`, `DECLINED`, and `ERROR` are special statuses that do not have an impact on the account balance, and are not recorded in the journal.\nFor these special statuses, `impact_time`, `request_time`, `created_time`, `token`, and `id` are returned blank."
        token:
          type: string
          description: Unique identifier of the journal entry.
        type:
          type: string
          description: Journal entry event type.
          example: '`authorization.clearing`'
        user_token:
          type: string
          description: Unique identifier of the credit user.
      description: Contains information about a journal entry.
    KYCListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/kyc_response'
          description: "Array of KYC verification response objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    LedgerEntriesPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/LedgerEntry'
          description: Contains one or more ledger entries on a credit account.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Return filtered transactions.
    LedgerEntry:
      required:
        - account_token
        - amount
        - card_token
        - created_time
        - currency_code
        - detail_token
        - group
        - id
        - impact_time
        - memo
        - request_time
        - status
        - token
        - type
      type: object
      properties:
        account_token:
          type: string
          description: Unique identifier of the credit account associated with the credit card used to make the ledger entry.
          format: string
        amount:
          type: number
          description: Amount of the ledger entry.
        card_token:
          maxLength: 36
          minLength: 8
          type: string
          description: Unique identifier of the credit card used to make the ledger entry.
          format: string
        created_time:
          type: string
          description: 'Date and time when the ledger entry was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        detail_object:
          type: object
          description: "Contains the ledger entry's full details.\nThe fields returned in this object vary based on the ledger entry group.\n\nThe following lists each ledger entry group and the specific fields returned for each group.\n\n* Purchases and refunds: see the <</core-api/transactions#getTransactions, transactions>> response fields.\n\n* Disputes: see the <</core-api/credit-disputes#retrieveDispute, account disputes response fields.>>\n\n* Original credit transaction (OCT): see the <</core-api/push-to-card-payments#_create_push_to_card_disbursement, Push-to-Card disbursement>> fields.\n\n* Rewards: see the <</core-api/credit-account-rewards#createReward, account reward>> response fields.\n\n* Payments: see the <</core-api/credit-account-payments#retrievePayment, account payment>> response fields.\n\n* Balance refunds: see the <</core-api/credit-balance-refunds#createBalanceRefund, balance refund>> response fields.\n\n* Adjustments: see the <</core-api/credit-account-adjustments#retrieveAdjustment, account adjustment>> response fields.\n\n* Interest and fees: see fields below."
        detail_token:
          type: string
          description: Unique identifier of the ledger entry's full details.
        dispute_token:
          type: string
          description: 'Unique identifier of the dispute, if the ledger entry is disputed.'
        group:
          enum:
            - PURCHASE
            - INTERNAL
            - FEE
            - REWARD
            - INTEREST
            - PAYMENT
            - ADJUSTMENT
            - BALANCE_TRANSFER
            - CASH_ADVANCE
            - BALANCE_REFUND
            - ORIGINAL_CREDIT
          type: string
          description: Group to which the ledger entry belongs.
        id:
          maxLength: 8
          minLength: 8
          type: string
          description: 'Eight-digit numeric identifier of the ledger entry, an alternate identifier to the UUID that is useful for remembering and referencing.'
        impact_time:
          type: string
          description: "Date and time when the ledger entry impacts the account balance.\n\nFor purchases, this is the time of the authorization.\n\nFor purchase authorization clearings, this is the time when the transaction is settled."
          format: date-time
        memo:
          type: string
          description: Merchant name or description for the ledger entry.
          example: Whole Foods Market
        original_currency:
          $ref: '#/components/schemas/OriginalCurrency'
        related_token:
          type: string
          description: "Unique identifier of the original ledger entry.\nIf the current ledger entry is the original, this field is returned empty."
        request_time:
          type: string
          description: "For purchases, the date and time of the authorization, which is when the user initiates the ledger entry.\n\nFor other ledger entry groups, equivalent to `impact_time`."
          format: date-time
        root_token:
          type: string
          description: "Unique identifier of the root ledger entry.\nIf the current ledger entry is the root, this field is returned empty."
        status:
          enum:
            - PENDING
            - POSTED
            - DECLINED
            - ERROR
            - CLEARED
          type: string
          description: "Status of the ledger entry when it was initially recorded and had an impact on the balance, either `PENDING` or `POSTED`.\nThis field is immutable and may not represent the current status.\n\nTo view the current status of purchases, refunds, OCTs, and payments, see the `detail_object.state` field.\nThese journal entries start in `PENDING` and can transition to `CLEARED`, `DECLINED`, or `ERROR`.\nThis transition of status is only sent through webhook event notifications.\n\nLedger entries that are final transactions, such as clearings, start and remain in a `POSTED` state.\n\n*NOTE*:\n`CLEARED`, `DECLINED`, and `ERROR` are special statuses that do not have an impact on the account balance, and are not recorded in the ledger.\nFor these special statuses, `impact_time`, `request_time`, `created_time`, `token`, and `id` are returned blank."
        token:
          type: string
          description: Unique identifier of the ledger entry.
        type:
          type: string
          description: Ledger entry event type.
          example: '`authorization.clearing`'
      description: Contains information about a ledger entry.
    MCCGroupListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "The number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/mcc_group_model'
          description: "An array of MCC group objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "The sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "The sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    MccDynamicFilter:
      required:
        - includes
      type: object
      properties:
        includes:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/DynamicMccType'
          description: One or more dynamic MCCs.
      description: Contains information on the dynamic merchant category code (MCC) for a reward.
    MerchantGroupListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/merchant_group_response'
          description: "Array of merchant group resources.\n\nResources are returned as appropriate to your query."
        end_index:
          type: integer
          description: "The sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    MerchantScope:
      type: object
      properties:
        attribute:
          type: string
          description: "Attribute value corresponding to the chosen scope.\nIf 'mcc' is chosen, provide the Merchant Category Code (MCC).\nIf 'mcc_group' is chosen, provide the token identifying a group of MCCs."
        scope:
          enum:
            - mcc
            - mcc_group
          type: string
          description: "Scope of the merchant category.\nCan be either 'mcc' or 'mcc_group'."
      description: "Defines the group of merchants to which the velocity control applies.\n\nIf no fields are populated, the velocity control applies to all merchants."
    Method:
      enum:
        - PERCENTAGE
        - FLAT
      type: string
      description: "Method, either a flat amount or a percentage.\n\n*NOTE:*\nOnly `FLAT` is currently supported."
    OriginalCurrency:
      type: object
      properties:
        amount:
          type: number
          description: original amount
          example: 2
        code:
          type: string
          description: 'Currency code, such as EUR or USD.'
      description: Original Currency
    PTCAddress:
      required:
        - city
        - county
        - line1
        - postal_code
        - state
      type: object
      properties:
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          maxLength: 3
          minLength: 3
          type: string
        county:
          maxLength: 3
          minLength: 3
          type: string
        line1:
          maxLength: 255
          minLength: 1
          type: string
        line2:
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          type: string
        state:
          type: string
    PTCPhone:
      required:
        - number
      type: object
      properties:
        country_code:
          type: string
        number:
          maxLength: 14
          minLength: 4
          type: string
    PTCSoftDescriptor:
      required:
        - address
        - name
      type: object
      properties:
        address:
          $ref: '#/components/schemas/PTCAddress'
        email:
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
        phone:
          $ref: '#/components/schemas/PTCPhone'
    PaymentAllocationOrderEnum:
      enum:
        - INTEREST
        - FEES
        - PRINCIPAL
      type: string
      description: 'Ordered list of balance types to which payments are allocated, from first to last.'
    PaymentAllocationResponse:
      required:
        - amount
        - bucket
      type: object
      properties:
        amount:
          minimum: 0
          type: number
          description: Total amount of the payment allocation.
        bucket:
          enum:
            - PRINCIPAL
            - INTEREST
            - FEES
          type: string
          description: category a portion of the payment is allocated to.
      description: Object containing payment allocation information.
    PaymentCreateReq:
      required:
        - amount
        - currency_code
        - description
        - method
      type: object
      properties:
        amount:
          minimum: 0
          type: number
          description: Amount of the payment.
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          maxLength: 255
          type: string
          description: Description of the payment.
        impact_time:
          type: string
          description: Date and time when the payment impacts the account balance and fee calculations.
          format: date-time
        metadata:
          maxLength: 255
          type: string
          description: 'Customer-defined additional information about the payment (for example, a check number).'
        method:
          enum:
            - ACH
            - CHECK
            - DEBIT
            - CASH
          type: string
          description: Method of payment.
        payment_source_token:
          maxLength: 36
          type: string
          description: Unique identifier of the payment source. Required for ACH payments.
        token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the payment.
      description: 'Created when a user pays a portion or all of their statement balance. This is for immediate payments only; Once set to `ACTIVE`, cannot be edited or deleted.'
    PaymentDetailResponse:
      required:
        - account_token
        - amount
        - created_time
        - currency_code
        - description
        - hold_days
        - method
        - status
        - token
        - transitions
        - updated_time
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit account on which the payment is made.
        allocations:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAllocationResponse'
          description: List of objects which contain information on how payment is allocated.
        amount:
          minimum: 0
          type: number
          description: Total amount of the payment.
        created_time:
          type: string
          description: 'Date and time when the payment was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          type: string
          description: Description of the payment.
        hold_days:
          type: integer
          description: 'After a payment completes, the number of days to hold the available credit on the account before increasing it.'
          default: 0
        hold_end_time:
          type: string
          description: Date and time when the available credit hold is released.
          format: date-time
        is_manually_released:
          type: boolean
          description: Whether the available credit hold was manually released for this payment.
          default: false
        metadata:
          type: string
          description: 'Customer-defined additional information about the payment (for example, a check number).'
        method:
          enum:
            - ACH
            - CHECK
            - DEBIT
            - CASH
          type: string
          description: Method of payment.
        on_hold:
          type: boolean
          description: Whether the available credit is on hold for this payment.
          default: false
        payment_schedule_token:
          type: string
          description: Unique identifier of the payment schedule.
        payment_source_token:
          type: string
          description: Unique identifier of the payment source. Required for ACH payments.
        refund_details:
          $ref: '#/components/schemas/RefundDetailsResponse'
        returned_details:
          $ref: '#/components/schemas/ReturnedDetails'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        token:
          type: string
          description: "Unique identifier of the payment.\n\nIf in the `detail_object`, unique identifier of the detail object."
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransitionResponse'
          description: 'Contains one or more `transitions` objects, which contain information on a payment status transition.'
        updated_time:
          type: string
          description: 'Date and time when the payment was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: Response containing payment details with transition history
    PaymentReminderPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PaymentReminderResponse'
          description: Contains payment reminders on a credit account statement. Can be zero if none exist for the given statement.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Return payment reminders.
    PaymentReminderResponse:
      type: object
      properties:
        account_token:
          type: string
          description: Token of the associated account.
        created_time:
          type: string
          description: Date and time when the Billing Cycle was created on Marqeta's credit platform
          format: date-time
        days_until_due:
          type: integer
          description: Days until payment cutoff date
        payment_cutoff_date:
          type: string
          description: Last day a payment can be made before interest and fees are charged to the account.
          format: date-time
        payment_due_date:
          type: string
          description: 'Payment due date, based on the credit account settings.'
          format: date-time
        remaining_minimum_payment_due:
          type: number
          description: 'Amount remaining on the latest statement''s minimum payment, after it''s adjusted for payments, returned payments, and applicable credits that occurred after the latest statement''s closing date.'
        statement_summary_token:
          type: string
          description: Token of the associated statement summary
          format: uuid
        token:
          type: string
          description: Token of the payment reminder
      description: Details of a payment reminder.
    PaymentScheduleAmountCategory:
      enum:
        - FIXED
        - MINIMUM_PAYMENT
        - REMAINING_STATEMENT_BALANCE
        - CURRENT_BALANCE
      type: string
      description: A category used to determine the actual payment amount.
    PaymentScheduleCreateReq:
      required:
        - amount_category
        - currency_code
        - frequency
        - payment_source_token
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the payment.\n\nRequired if `amount_category` is `FIXED`."
        amount_category:
          $ref: '#/components/schemas/PaymentScheduleAmountCategory'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          maxLength: 255
          type: string
          description: Description of the payment schedule.
        frequency:
          $ref: '#/components/schemas/PaymentScheduleFrequency'
        next_payment_impact_date:
          type: string
          description: "Date to make a one-time payment.\n\nRequired if frequency is `ONCE`."
          format: date
        payment_day:
          enum:
            - PAYMENT_DUE_DAY
          type: string
          description: "Day on which monthly payments are made.\n\nRequired if `frequency` is `MONTHLY`."
        payment_source_token:
          maxLength: 36
          type: string
          description: Unique identifier of the payment source.
        token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the payment schedule.
      description: Information to create a payment schedule.
    PaymentScheduleFrequency:
      enum:
        - ONCE
        - MONTHLY
      type: string
      description: Defines how often to make a scheduled payment.
    PaymentSchedulePage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentScheduleResponse'
          description: List of payment schedules.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Returns paginated information for multiple payment schedules.
    PaymentScheduleResponse:
      required:
        - account_token
        - amount_category
        - currency_code
        - frequency
        - payment_source_token
        - status
        - token
      type: object
      properties:
        account_token:
          type: string
          description: Unique identifier of the credit account on which the payment schedule is made.
        amount:
          type: number
          description: "Amount of the payment.\n\nReturned if the `amount_category` is `FIXED`."
          nullable: true
        amount_category:
          $ref: '#/components/schemas/PaymentScheduleAmountCategory'
        created_time:
          type: string
          description: 'Date and time when the payment schedule was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          type: string
          description: Description of the payment schedule.
        frequency:
          $ref: '#/components/schemas/PaymentScheduleFrequency'
        next_payment_impact_date:
          type: string
          description: "Date to make a one-time payment.\n\nReturned if `frequency` is `ONCE`."
          format: date
        payment_day:
          enum:
            - PAYMENT_DUE_DAY
          type: string
          description: "Day on which monthly payments are made.\n\nReturned if the `frequency` is `MONTHLY`."
        payment_source_token:
          type: string
          description: Unique identifier of a payment source.
        status:
          $ref: '#/components/schemas/PaymentScheduleStatus'
        token:
          type: string
          description: Unique identifier of the payment schedule.
        updated_time:
          type: string
          description: 'Date and time when the payment schedule was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: A future one-time or recurring payment schedule.
    PaymentScheduleStatus:
      enum:
        - ACTIVE
        - COMPLETED
        - TERMINATED
      type: string
      description: Status of the payment schedule.
    PaymentScheduleTransitionCreateReq:
      required:
        - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PaymentScheduleStatus'
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the payment schedule transition.
      description: Details to create a payment schedule transition
    PaymentScheduleTransitionPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentScheduleTransitionResponse'
          description: List of payment schedule transitions.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Returns paginated information for multiple payment schedule transitions.
    PaymentScheduleTransitionResponse:
      type: object
      properties:
        account_token:
          type: string
          description: "Unique identifier of the credit account on which to transition a payment schedule.\n\nSend a `GET` request to `/credit/accounts` to retrieve existing credit account tokens."
        created_time:
          type: string
          description: 'Date and time when the payment schedule transition was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        payment_schedule_token:
          type: string
          description: "Unique identifier of the payment schedule whose status is to transition.\n\nSend a `GET` request to `/credit/accounts/{account_token}/paymentschedules` to retrieve existing payment schedule tokens."
        status:
          $ref: '#/components/schemas/PaymentScheduleStatus'
        token:
          type: string
          description: Unique identifier of the payment schedule transition.
        updated_time:
          type: string
          description: 'Date and time when the payment schedule transition was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: A payment schedule transition on a credit account.
    PaymentSourceCreateReq:
      required:
        - account_number
        - account_token
        - name
        - routing_number
        - source_type
        - verification_override
      type: object
      properties:
        account_number:
          maxLength: 255
          type: string
          description: Account number of the payment source.
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit account receiving the payment.
        bank_name:
          maxLength: 255
          type: string
          description: Name of the bank associated with the routing number
          nullable: true
        business_token:
          maxLength: 36
          type: string
          description: Unique identifier of the business making the payment.
        name:
          maxLength: 255
          type: string
          description: Name of the individual or business who owns the payment source.
        owner:
          enum:
            - INDIVIDUAL
            - BUSINESS
          type: string
          description: Type of payment source owner.
        routing_number:
          maxLength: 255
          type: string
          description: Routing number of the payment source.
        source_type:
          enum:
            - CHECKING
            - SAVINGS
            - OTHER
          type: string
          description: Type of payment source.
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the payment source.
        user_token:
          maxLength: 36
          type: string
          description: Unique identifier of the user making the payment.
        verification_notes:
          maxLength: 255
          type: string
          description: Additional information on the verification.
        verification_override:
          type: boolean
          description: Whether to override the verification process.
      description: Contains information about a payment source.
    PaymentSourcePage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentSourceResponse'
          description: List of payment sources.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Returns paginated information for multiple payment sources.
    PaymentSourceResponse:
      type: object
      properties:
        account_suffix:
          maxLength: 4
          type: string
          description: Last four digits of the payment source account number.
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit account receiving the payment.
        bank_name:
          type: string
          description: Name of the bank associated with the routing number
          nullable: true
        business_token:
          type: string
          description: Unique identifier of the business making the payment.
        created_time:
          type: string
          description: 'Date and time when the payment source was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the payment source was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
        name:
          type: string
          description: Name of the individual or business who owns the payment source.
        owner:
          enum:
            - INDIVIDUAL
            - BUSINESS
          type: string
          description: Type of payment source owner.
        routing_number:
          type: string
          description: Routing number of the payment source.
        source_type:
          enum:
            - CHECKING
            - SAVINGS
            - OTHER
          type: string
          description: Type of payment source.
        status:
          $ref: '#/components/schemas/PaymentSourceStatusEnum'
        token:
          type: string
          description: Unique identifier of the payment source.
        user_token:
          type: string
          description: Unique identifier of the user making the payment.
        verification_notes:
          type: string
          description: 'Additional information on the verification (for example, an external verification identifier that''s outside Marqeta''s credit platform).'
        verification_status:
          enum:
            - ACH_VERIFIED
            - PENDING
          type: string
          description: Status of the verification for the payment source.
      description: Contains information about a payment source.
    PaymentSourceStatusEnum:
      enum:
        - ACTIVE
        - PENDING
        - INACTIVE
      type: string
      description: Current status of the payment source.
    PaymentSourceUpdateReq:
      required:
        - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PaymentSourceStatusEnum'
      description: Request used to update the status of a payment source.
    PaymentStatus:
      enum:
        - INITIATED
        - PENDING
        - PROCESSING
        - SUBMITTED
        - CANCELLED
        - COMPLETED
        - RETURNED
        - REFUNDED
        - SYS_ERROR
        - ACH_ERROR
      type: string
      description: Current status of the payment or refund.
    PaymentTransitionReq:
      required:
        - status
      type: object
      properties:
        refund_details:
          $ref: '#/components/schemas/RefundDetails'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the payment status transition.
      description: Request used to transition the status of a payment.
    PaymentTransitionResponse:
      required:
        - account_token
        - payment_token
        - status
        - token
      type: object
      properties:
        account_token:
          type: string
          description: Unique identifier of the credit account on which you want to transition a payment status.
        created_time:
          type: string
          description: 'Date and time when the payment transition was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        payment_token:
          type: string
          description: Unique identifier of the payment whose status you want to transition.
        status:
          $ref: '#/components/schemas/PaymentStatus'
        token:
          type: string
          description: Unique identifier of the payment status transition.
      description: Response containing payment transition information.
    PaymentsPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentDetailResponse'
          description: Contains one or more payments on a credit account.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Returns paginated payments
    PeriodicFeeSchedule:
      type: object
      properties:
        amount:
          type: number
          description: fee amount
        effective_date:
          type: string
          description: date the fee becomes effective
          format: date
        next_fee_impact_date:
          type: string
          description: date of the next time fee will be charged
          format: date
        type:
          enum:
            - ANNUAL_FEE
            - MONTHLY_FEE
          type: string
          description: type of fee to be charged
      description: periodic fee schedules on account
    PeriodicFeeSchedulePage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/PeriodicFeeSchedule'
          description: List of account periodic fee schedules.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Return paginated periodic fee schedules on a credit account.
    PoliciesDocumentPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/PolicyDocumentResponse'
          description: One or more document policies.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: List response details for paginated document policies.
    PoliciesProductPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/PolicyProductResponse'
          description: One or more credit product policies.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: List response details for product policies.
    PolicyAprCreateReq:
      required:
        - name
        - purchases
      type: object
      properties:
        description:
          type: string
          description: Description of the APR policy.
        name:
          type: string
          description: Name of the APR policy.
        purchases:
          $ref: '#/components/schemas/PolicyAprPurchaseReq'
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the APR policy.
      description: Request details for an APR policy.
    PolicyAprPurchaseReq:
      required:
        - tiers
      type: object
      properties:
        external_token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the external pricing strategy for the credit program.
        name:
          type: string
          description: Name of the pricing strategy.
        tiers:
          type: array
          items:
            $ref: '#/components/schemas/PolicyAprTierReq'
          description: One or more risk tiers for a pricing strategy.
      description: Contains information on the pricing strategy for purchases.
    PolicyAprPurchaseResponse:
      type: object
      properties:
        external_token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the pricing strategy on a credit program.
        name:
          type: string
          description: Name of the pricing strategy.
        tiers:
          type: array
          items:
            $ref: '#/components/schemas/PolicyAprTierResponse'
          description: One or more risk tiers for a pricing strategy.
      description: Contains information on the pricing strategy for purchases.
    PolicyAprResponse:
      type: object
      properties:
        created_time:
          type: string
          description: 'Date and time when the APR policy was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        description:
          type: string
          description: Description of the APR policy.
        effective_date:
          type: string
          description: 'Date the APR goes into effect, in UTC.'
          format: date
        name:
          type: string
          description: Name of the APR policy.
        purchases:
          $ref: '#/components/schemas/PolicyAprPurchaseResponse'
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the APR policy.
        updated_time:
          type: string
          description: 'Date and time when the APR policy was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: Contains information on an APR policy.
    PolicyAprTierReq:
      required:
        - margin_rate
      type: object
      properties:
        margin_rate:
          type: number
          description: 'Number of percentage points added to the prime rate, used to calculate a variable APR value.'
      description: Request details for the APR for a risk tier.
    PolicyAprTierResponse:
      type: object
      properties:
        apr:
          type: number
          description: Value of the APR.
          default: 0
        margin_rate:
          type: number
          description: Margin rate for the risk tier for a pricing strategy.
      description: Response details for the APR for a risk tier.
    PolicyAprUpdateReq:
      required:
        - name
      type: object
      properties:
        description:
          type: string
          description: Description of the APR policy.
        name:
          type: string
          description: Name of the APR policy.
        purchases:
          $ref: '#/components/schemas/PolicyAprPurchaseReq'
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the APR policy.
      description: Request details for an APR policy.
    PolicyAprsPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/PolicyAprResponse'
          description: One or more APR policies.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: List response details for paginated APR policies.
    PolicyDocumentAssetAndTemplateReq:
      required:
        - asset_token
        - template_token
      type: object
      properties:
        asset_token:
          pattern: (?!^ +$)^.+$
          type: string
          description: "Unique identifier of the asset, which is the version of a document that is based on the template and contains finalized values.\nThe values are finalized when the bundle containing the document is created."
        template_token:
          pattern: (?!^ +$)^.+$
          type: string
          description: "Unique identifier of the template, which is the version of a document that serves as an initial disclosure but does not contain finalized values.\nThe values are finalized in the asset version of the document."
      description: Request details for a specific asset and the template on which it was based.
    PolicyDocumentAssetAndTemplateResponse:
      type: object
      properties:
        asset_created_time:
          type: string
          description: Date and time when the asset was created.
          format: date-time
        asset_token:
          type: string
          description: "Unique identifier of the asset, which is the version of a document that is based on the template and contains finalized values.\nThe values are finalized when the bundle containing the document is created."
        asset_urls:
          $ref: '#/components/schemas/PolicyDocumentAssetURLs'
        template_created_time:
          type: string
          description: Date and time when the template was created.
          format: date-time
        template_token:
          type: string
          description: "Unique identifier of the template, which is the version of a document that serves as an initial disclosure but does not contain finalized values.\nValues are finalized in the asset version of the document."
        template_urls:
          $ref: '#/components/schemas/PolicyDocumentTemplateURLs'
      description: Return details for a specific asset and the template on which it was based.
    PolicyDocumentAssetReq:
      required:
        - asset_token
      type: object
      properties:
        asset_token:
          pattern: (?!^ +$)^.+$
          type: string
          description: "Unique identifier of the asset, which is a type of document that contains finalized values.\nThe values are finalized when the bundle containing the document is created."
      description: Request details for a specific asset.
    PolicyDocumentAssetResponse:
      type: object
      properties:
        asset_created_time:
          type: string
          description: Date and time when the asset was created.
          format: date-time
        asset_token:
          pattern: (?!^ +$)^.+$
          type: string
          description: "Unique identifier of the asset, which is a type of document that contains finalized values.\nThe values are finalized when the bundle containing the document is created."
        asset_urls:
          $ref: '#/components/schemas/PolicyDocumentAssetURLs'
      description: Return details for a specific asset.
    PolicyDocumentAssetURLs:
      required:
        - html
        - pdf
        - png
      type: object
      properties:
        html:
          type: string
          description: URL to the HTML version of the asset.
        pdf:
          type: string
          description: URL to the PDF version of the asset.
        png:
          type: string
          description: URL to the PNG version of the asset.
      description: Contains one or more URLs for an asset.
    PolicyDocumentCreateReq:
      required:
        - account_statement
        - benefits_disclosure_premium
        - benefits_disclosure_traditional
        - card_member_agreement
        - e_disclosure
        - name
        - noaa_multiple_reason_with_dodd_frank
        - noaa_single_reason
        - noaa_single_reason_with_dodd_frank
        - privacy_policy
        - summary_of_credit_terms
        - terms_schedule
      type: object
      properties:
        account_statement:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        benefits_disclosure_premium:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        benefits_disclosure_traditional:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        card_member_agreement:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        e_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        name:
          pattern: (?!^ +$)^.+$
          type: string
          description: Name of the document policy.
        noaa_multiple_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        noaa_single_reason:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        noaa_single_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        pre_qualification_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateReq'
        privacy_policy:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        rewards_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateReq'
        summary_of_credit_terms:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateReq'
        terms_schedule:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the document policy.
      description: Contains information on a document policy.
    PolicyDocumentResponse:
      type: object
      properties:
        account_statement:
          $ref: '#/components/schemas/PolicyDocumentTemplateResponse'
        benefits_disclosure_premium:
          $ref: '#/components/schemas/PolicyDocumentAssetResponse'
        benefits_disclosure_traditional:
          $ref: '#/components/schemas/PolicyDocumentAssetResponse'
        card_member_agreement:
          $ref: '#/components/schemas/PolicyDocumentAssetResponse'
        created_time:
          type: string
          description: 'Date and time when the document policy was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        e_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetResponse'
        name:
          pattern: (?!^ +$)^.+$
          type: string
          description: Name of the document policy.
        noaa_multiple_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateResponse'
        noaa_single_reason:
          $ref: '#/components/schemas/PolicyDocumentTemplateResponse'
        noaa_single_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateResponse'
        pre_qualification_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateResponse'
        privacy_policy:
          $ref: '#/components/schemas/PolicyDocumentAssetResponse'
        rewards_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateResponse'
        summary_of_credit_terms:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateResponse'
        terms_schedule:
          $ref: '#/components/schemas/PolicyDocumentTemplateResponse'
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the document policy.
        updated_time:
          type: string
          description: 'Date and time when the document policy was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: Contains information on a document policy.
    PolicyDocumentTemplateReq:
      required:
        - template_token
      type: object
      properties:
        template_token:
          pattern: (?!^ +$)^.+$
          type: string
          description: 'Unique identifier of a template, which is a document that serves as an initial disclosure but does not contain finalized values.'
      description: Request details for a template.
    PolicyDocumentTemplateResponse:
      type: object
      properties:
        template_created_time:
          type: string
          description: Date and time when the template was created.
          format: date-time
        template_token:
          type: string
          description: 'Unique identifier of a template, which is a document that serves as an initial disclosure but does not contain finalized values.'
        template_urls:
          $ref: '#/components/schemas/PolicyDocumentTemplateURLs'
      description: Response details for a template.
    PolicyDocumentTemplateURLs:
      required:
        - html
      type: object
      properties:
        html:
          type: string
          description: URL to the HTML version of the document template.
      description: Contains one or more URLs for a template.
    PolicyDocumentUpdateReq:
      required:
        - account_statement
        - benefits_disclosure_premium
        - benefits_disclosure_traditional
        - card_member_agreement
        - e_disclosure
        - name
        - noaa_multiple_reason_with_dodd_frank
        - noaa_single_reason
        - noaa_single_reason_with_dodd_frank
        - privacy_policy
        - summary_of_credit_terms
        - terms_schedule
      type: object
      properties:
        account_statement:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        benefits_disclosure_premium:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        benefits_disclosure_traditional:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        card_member_agreement:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        e_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        name:
          pattern: (?!^ +$)^.+$
          type: string
          description: Name of the document policy.
        noaa_multiple_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        noaa_single_reason:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        noaa_single_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        pre_qualification_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateReq'
        privacy_policy:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        rewards_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateReq'
        summary_of_credit_terms:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateReq'
        terms_schedule:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
      description: Request details to update a document policy.
    PolicyFeeAccount:
      type: object
      properties:
        annual_fee:
          $ref: '#/components/schemas/PolicyFeePeriodic'
        foreign_transaction_fee:
          $ref: '#/components/schemas/PolicyFeeForeignTransaction'
        late_payment:
          $ref: '#/components/schemas/PolicyFeePayment'
        monthly_fee:
          $ref: '#/components/schemas/PolicyFeePeriodic'
        returned_payment:
          $ref: '#/components/schemas/PolicyFeePayment'
      description: Contains information on the fees in an account's fee policy.
    PolicyFeeCreateReq:
      required:
        - account
        - name
      type: object
      properties:
        account:
          $ref: '#/components/schemas/PolicyFeeAccount'
        description:
          type: string
          description: Description of the fee policy.
        name:
          type: string
          description: Name of the fee policy.
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the fee policy.
      description: Request details for a fee policy.
    PolicyFeeForeignTransaction:
      type: object
      properties:
        default_method:
          enum:
            - PERCENTAGE
          type: string
          description: Method used to calculate the fee value.
        default_value:
          minimum: 0
          type: number
          description: Percentage value for the foreign transaction fee.
      description: Contains information on a specific fee in a fee policy.
    PolicyFeePayment:
      type: object
      properties:
        default_method:
          enum:
            - FLAT
          type: string
          description: Method used to calculate the fee value.
        default_value:
          type: number
          description: Amount of the fee.
      description: Contains information on a specific fee in a fee policy.
    PolicyFeePeriodic:
      type: object
      properties:
        exclude_from_interest_calc:
          type: boolean
          description: Whether the periodic fee is excluded from interest calculation.
        fee_amount:
          maximum: 5000
          minimum: 1
          type: number
          description: Amount of the fee.
        number_of_days_post_activation:
          maximum: 1000
          minimum: 1
          type: number
          description: "Number of days after an account is activated that the initial fee is charged.\nFor example, if the value in this field is `30`, then the initial fee is charged 30 days after an account is activated."
      description: Contains information on a specific periodic fee in a fee policy.
    PolicyFeeResponse:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/PolicyFeeAccount'
        created_time:
          type: string
          description: 'Date and time when the fee policy was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        description:
          type: string
          description: Description of the fee policy.
        name:
          type: string
          description: Name of the fee policy.
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the fee policy.
        updated_time:
          type: string
          description: 'Date and time when the fee policy was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: Contains information on a fee policy.
    PolicyFeeUpdateReq:
      required:
        - name
      type: object
      properties:
        account:
          $ref: '#/components/schemas/PolicyFeeAccount'
        description:
          type: string
          description: Description of the fee policy.
        name:
          type: string
          description: Name of the fee policy.
        periodic:
          $ref: '#/components/schemas/PolicyFeePeriodic'
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the fee policy.
      description: Response details to update a fee policy.
    PolicyFeesPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/PolicyFeeResponse'
          description: One or more fee policies.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: List response details for fee policies.
    PolicyOfferResponse:
      type: object
      properties:
        created_time:
          type: string
          description: 'Date and time when the offer policy was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        description:
          type: string
          description: Description of the offer policy.
        name:
          type: string
          description: Name of the offer policy.
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the offer policy.
        updated_time:
          type: string
          description: 'Date and time when the offer policy was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: Contains information on an offer policy.
    PolicyProductCardProductLevel:
      enum:
        - PREMIUM
        - TRADITIONAL
      type: string
      description: Level of the card product.
    PolicyProductCardProductReq:
      required:
        - level
        - token
      type: object
      properties:
        level:
          $ref: '#/components/schemas/PolicyProductCardProductLevel'
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the card product.
      description: Contains information on the card products associated with the credit product policy.
    PolicyProductCardProductResponse:
      type: object
      properties:
        level:
          $ref: '#/components/schemas/PolicyProductCardProductLevel'
        network:
          enum:
            - VISA
            - MASTERCARD
            - SANDBOX
          type: string
          description: Name of the card network.
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the card product.
      description: Contains information on the card products associated with the credit product policy.
    PolicyProductCreateReq:
      required:
        - card_products
        - classification
        - credit_line
        - currency_code
        - interest_calculation
        - name
        - payments
        - product_sub_type
        - product_type
        - usage
      type: object
      properties:
        card_products:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PolicyProductCardProductReq'
          description: One or more card products associated with the credit product policy.
        classification:
          $ref: '#/components/schemas/ProductClassification'
        credit_line:
          $ref: '#/components/schemas/ProductCreditLine'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          type: string
          description: Description of the credit product policy.
        interest_calculation:
          $ref: '#/components/schemas/InterestCalculation'
        name:
          minLength: 1
          type: string
          description: Name of the credit product policy.
        payments:
          $ref: '#/components/schemas/PolicyProductPaymentConfiguration'
        product_sub_type:
          $ref: '#/components/schemas/ProductSubType'
        product_type:
          $ref: '#/components/schemas/ProductType'
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the credit product policy.
        usage:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BalanceType'
          description: One or more usage types for the credit product policy.
      description: Request details for a credit product policy.
    PolicyProductMinPaymentCalculation:
      required:
        - include_overlimit_amount
        - include_past_due_amount
      type: object
      properties:
        include_overlimit_amount:
          type: boolean
          description: Whether to include the overlimit amount when calculating the minimum payment.
        include_past_due_amount:
          type: boolean
          description: Whether to include the past due amount when calculating the minimum payment.
        min_payment_flat_amount:
          type: number
          description: 'Minimum payment, expressed as a flat amount, due on the payment due day.'
        min_payment_percentage:
          $ref: '#/components/schemas/PolicyProductMinPaymentPercentage'
      description: Contains information used to calculate the minimum payment amount on a credit product policy.
    PolicyProductMinPaymentPercentage:
      required:
        - include_interest_charged
        - percentage_of_balance
      type: object
      properties:
        include_fees_charged:
          type: array
          items:
            enum:
              - LATE_PAYMENT_FEE
              - RETURNED_PAYMENT_FEE
              - FOREIGN_TRANSACTION_FEE
            type: string
          description: One or more fee types to include when calculating the minimum payment.
        include_interest_charged:
          type: boolean
          description: Whether to include the amount of interest charged when calculating the minimum payment.
        percentage_of_balance:
          maximum: 100
          minimum: 0.00010
          type: number
          description: 'Minimum payment, expressed as a percentage of the total statement balance, due on the payment due day.'
      description: Contains information used to calculate the minimum payment amount when expressed as a percentage.
    PolicyProductPaymentConfiguration:
      required:
        - allocation_order
        - billing_cycle_day
        - min_payment_calculation
      type: object
      properties:
        allocation_order:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PaymentAllocationOrderEnum'
          description: 'Ordered list of balance types to which payments are allocated, from first to last.'
          default:
            - INTEREST
            - FEES
            - PRINCIPAL
        billing_cycle_day:
          maximum: 28
          minimum: 1
          type: integer
          description: Day of month the billing cycle starts.
        billing_cycle_day_strategy:
          enum:
            - MANUAL
          type: string
          description: Determines if the billing cycle day is manually set or determined dynamically during account creation based on cycling logic
          default: MANUAL
        billing_cycle_frequency:
          enum:
            - MONTHLY
          type: string
          description: Frequency at which your account is billed
          default: MONTHLY
        due_day:
          maximum: 31
          minimum: 31
          type: integer
          description: "Day of month the payment for the previous billing cycle is due.\n\nThis field is being deprecated and replaced by `payment_due_interval` of a product policy.\nTo retrieve `payment_due_interval`, see <</core-api/policies#retrieveProductPolicy, Retrieve credit product policy, payments.payment_due_interval>>."
          deprecated: true
        min_payment_calculation:
          $ref: '#/components/schemas/PolicyProductMinPaymentCalculation'
        payment_due_interval:
          type: integer
          description: "Specifies the payment due interval that is used to determine the payment due date for a billing cycle.\nThe accepted values are either -1 or a value between 1 and 26.\nA value of -1 indicates one day prior to the next billing cycle date."
          default: -1
      description: 'Contains the configurations for billing cycle day, payment due day, and fees.'
    PolicyProductResponse:
      type: object
      properties:
        card_products:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PolicyProductCardProductResponse'
          description: One or more card products associated with the credit product policy.
        classification:
          $ref: '#/components/schemas/ProductClassification'
        created_time:
          type: string
          description: 'Date and time when the credit product policy was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        credit_line:
          $ref: '#/components/schemas/ProductCreditLine'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          type: string
          description: Description of the credit product policy.
        interest_calculation:
          $ref: '#/components/schemas/InterestCalculation'
        name:
          minLength: 1
          type: string
          description: Name of the credit product policy.
        payments:
          $ref: '#/components/schemas/PolicyProductPaymentConfiguration'
        product_sub_type:
          $ref: '#/components/schemas/ProductSubType'
        product_type:
          $ref: '#/components/schemas/ProductType'
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the credit product policy.
        updated_time:
          type: string
          description: 'Date and time when the credit product policy was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
        usage:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BalanceType'
          description: One or more usage types for the credit product policy.
      description: Contains information on the credit product policy.
    PolicyProductUpdateReq:
      required:
        - card_products
        - classification
        - credit_line
        - currency_code
        - interest_calculation
        - name
        - payments
        - product_sub_type
        - product_type
        - usage
      type: object
      properties:
        card_products:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PolicyProductCardProductReq'
          description: One or more card products associated with the credit product policy.
        classification:
          $ref: '#/components/schemas/ProductClassification'
        credit_line:
          $ref: '#/components/schemas/ProductCreditLine'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          type: string
          description: Description of the credit product policy.
        interest_calculation:
          $ref: '#/components/schemas/InterestCalculation'
        name:
          minLength: 1
          pattern: (?!^ +$)^.+$
          type: string
          description: Name of the credit product policy.
        payments:
          $ref: '#/components/schemas/PolicyProductPaymentConfiguration'
        product_sub_type:
          $ref: '#/components/schemas/ProductSubType'
        product_type:
          $ref: '#/components/schemas/ProductType'
        usage:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BalanceType'
          description: One or more usage types for the credit product policy.
      description: Request details to update a credit product policy.
    PolicyRewardPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/PolicyRewardResponse'
          description: One or more reward policies.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: List response details for reward policies.
    PolicyRewardReq:
      required:
        - name
        - rules
      type: object
      properties:
        description:
          type: string
          description: Description of the reward policy.
        name:
          pattern: (?!^ +$)^.+$
          type: string
          description: Name of the reward policy.
        rules:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PolicyRewardRule'
          description: One or more reward rules.
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the reward policy.
      description: Request details for a reward policy.
    PolicyRewardResponse:
      type: object
      properties:
        created_time:
          type: string
          description: 'Date and time when the reward policy was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        description:
          type: string
          description: Description of the reward policy.
        name:
          type: string
          description: Name of the reward policy.
        rules:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PolicyRewardRule'
          description: One or more reward rules
        token:
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the reward policy.
        updated_time:
          type: string
          description: 'Date and time when the reward policy was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
      description: Contains information on a reward policy.
    PolicyRewardRule:
      required:
        - filters
        - outcome
        - type
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/PolicyRewardRuleFilters'
        outcome:
          $ref: '#/components/schemas/PolicyRewardRuleOutcome'
        type:
          $ref: '#/components/schemas/PolicyRewardRuleType'
      description: Contains information on a reward rule.
    PolicyRewardRuleFilters:
      required:
        - amount
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/AmountFilter'
        mcc_dynamic:
          $ref: '#/components/schemas/MccDynamicFilter'
      description: Contains information on the rules defined for a reward program.
    PolicyRewardRuleOutcome:
      required:
        - percentage
      type: object
      properties:
        max_amount:
          minimum: 0
          type: number
          description: Max amount of the reward.
        percentage:
          minimum: 0
          type: number
          description: "Reward percentage applied when the balance for a billing cycle is within the range specified in the `filters.amount.greater_than` and `filters.amount.less_than` fields.\nFor example, if the percentage is `1`, the account holder earns 1% of the account balance if they spend between the `greater_than` and `less_than` amounts during a billing cycle."
      description: Contains information on the outcome of a reward rule.
    PolicyRewardRuleType:
      enum:
        - CASHBACK
      type: string
      description: Type of reward rule.
    PolicyType:
      enum:
        - APR
        - DOCUMENT
        - FEE
        - OFFER
        - PRODUCT
        - REWARD
        - ALL
      type: string
      description: Type of policy.
    PostDecisionsResponse:
      required:
        - application_token
        - decision_id
        - status
        - submitted_date_time
        - token
        - user_token
      type: object
      properties:
        application_token:
          type: string
          description: Unique identifier of the application.
        decision_id:
          type: string
          description: "Unique identifier of the decision made based on the decision model.\n\nSee `decision_model.status` for the current state of the application."
        status:
          enum:
            - SUBMITTED
            - DECISIONING
            - MANUAL_REVIEW
            - APPROVED
            - DECLINED
            - EXPIRED
            - REJECTED
            - ERROR
          type: string
          description: Status of the decision on the application.
        submitted_date_time:
          type: string
          description: 'Date and time when the decision was submitted, in UTC.'
          format: date-time
        token:
          type: string
          description: "Unique identifier of the decision model.\n\nSee `decision_model.status` for the current state of the application."
        user_token:
          type: string
          description: 'Unique identifier of the applicant, the user applying for a credit account.'
    PrimaryContactInfoModel:
      type: object
      properties:
        department:
          maxLength: 255
          minLength: 0
          type: string
          description: Business department of the primary contact.
        email:
          maxLength: 255
          minLength: 0
          type: string
          description: Email address of the primary contact.
        extension:
          maxLength: 255
          minLength: 0
          type: string
          description: Phone extension of the primary contact.
        fax:
          maxLength: 255
          minLength: 0
          type: string
          description: Fax number of the primary contact.
        full_name:
          maxLength: 255
          minLength: 0
          type: string
          description: Full name of the primary contact.
        mobile:
          maxLength: 255
          minLength: 0
          type: string
          description: Mobile phone number of the primary contact.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: Phone number of the primary contact.
        title:
          maxLength: 255
          minLength: 0
          type: string
          description: Title of the primary contact.
      description: Describes the business' primary contact person.
    ProductClassification:
      enum:
        - CONSUMER
        - SMALL_AND_MEDIUM_BUSINESS
      type: string
      description: "Specifies for whom the credit product is intended.\n\n* `CONSUMER` - The credit product is intended for individual consumers.\n* `SMALL_AND_MEDIUM_BUSINESS` - The credit product is intended for small and medium business."
      default: CONSUMER
    ProductConfig:
      required:
        - billing_cycle_day
      type: object
      properties:
        billing_cycle_day:
          maximum: 28
          minimum: 1
          type: integer
          description: Day of month the billing cycle starts.
        billing_cycle_day_strategy:
          enum:
            - MANUAL
          type: string
          description: Determines if the billing cycle day is manually set or determined dynamically during account creation based on cycling logic
          default: MANUAL
        billing_cycle_frequency:
          enum:
            - MONTHLY
          type: string
          description: Frequency at which your account is billed
          default: MONTHLY
        fees:
          type: array
          items:
            $ref: '#/components/schemas/ProductFeeType'
          description: One or more fee types.
        payment_due_day:
          maximum: 31
          minimum: 31
          type: integer
          description: "Day of month the payment for the previous billing cycle is due.\n\nThis field is deprecated.\nUse the `product.payment_due_interval` field instead.\nTo retrieve `payment_due_interval`, see <</core-api/credit-product#retrieveCreditProduct, Retrieve credit product, config.payment_due_interval>>."
          deprecated: true
        payment_due_interval:
          type: integer
          description: "Specifies the payment due interval that is used to determine the payment due date for a billing cycle.\nThe accepted values are either -1 or a value between 1 and 26.\nA value of -1 indicates one day prior to the next billing cycle date."
          default: -1
        periodic_fees:
          type: array
          items:
            required:
              - frequency
              - number_of_days_post_activation
            type: object
            properties:
              frequency:
                enum:
                  - ANNUAL
                  - MONTHLY
                type: string
                description: How frequently the fee is charged.
              number_of_days_post_activation:
                maximum: 1000
                minimum: 1
                type: integer
                description: "Number of days after an account is activated that the initial fee is charged.\nFor example, if the value in this field is `30`, then the initial fee is charged 30 days after an account is activated."
            description: Contains information on a periodic fee.
          description: Contains one or more periodic fees.
      description: 'Contains information on configurations for billing cycle day, payment due day, and fees.'
    ProductCreateReq:
      required:
        - card_product_tokens
        - classification
        - config
        - credit_line
        - currency_code
        - interest_calculation
        - min_payment_flat_amount
        - min_payment_percentage
        - name
        - payment_allocation_order
        - product_sub_type
        - product_type
        - usage
      type: object
      properties:
        card_product_tokens:
          minItems: 1
          type: array
          items:
            type: string
          description: One or more associated card product tokens.
        classification:
          $ref: '#/components/schemas/ProductClassification'
        config:
          $ref: '#/components/schemas/ProductConfig'
        credit_line:
          $ref: '#/components/schemas/ProductCreditLine'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          maxLength: 255
          type: string
          description: Description of the credit product.
        interest_calculation:
          $ref: '#/components/schemas/InterestCalculation'
        min_payment_calculation:
          $ref: '#/components/schemas/ProductMinPaymentCalculation'
        min_payment_flat_amount:
          minimum: 0.01
          type: number
          description: 'Minimum payment, expressed as a flat amount, due on the payment due day.'
        min_payment_percentage:
          maximum: 100
          minimum: 0.00010
          type: number
          description: 'Minimum payment, expressed as a percentage of the total statement balance, due on the payment due day.'
        name:
          maxLength: 255
          type: string
          description: Name of the credit product.
        payment_allocation_order:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PaymentAllocationOrderEnum'
          description: 'Ordered list of balance types to which payments are allocated, from first to last.'
          default:
            - INTEREST
            - FEES
            - PRINCIPAL
        product_sub_type:
          $ref: '#/components/schemas/ProductSubType'
        product_type:
          $ref: '#/components/schemas/ProductType'
        status:
          $ref: '#/components/schemas/ResourceStatus'
        token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the credit product.
        usage:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BalanceType'
          description: One or more usage types for the credit product.
      description: "Specifies shared details for a credit program.\n\nOnce set to `ACTIVE`, cannot be edited or deleted."
    ProductCreditLine:
      required:
        - max
        - min
      type: object
      properties:
        max:
          maximum: 999999999999.99
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: Maximum credit limit.
        min:
          maximum: 999999999999.99
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: Minimum credit limit.
      description: Contains information on the credit line range.
    ProductFeeType:
      enum:
        - LATE_PAYMENT_FEE
        - RETURNED_PAYMENT_FEE
        - FOREIGN_TRANSACTION_FEE
      type: string
      description: Type of fee.
    ProductMinPaymentCalcFeeType:
      $ref: '#/components/schemas/ProductFeeType'
    ProductMinPaymentCalculation:
      required:
        - include_overlimit_amount
        - include_past_due_amount
        - min_payment_flat_amount
        - min_payment_percentage
      type: object
      properties:
        include_past_due_amount:
          type: boolean
          description: Whether to include the past due amount when calculating the minimum payment.
        min_payment_flat_amount:
          minimum: 0.01
          type: number
          description: 'Minimum payment, expressed as a flat amount, due on the payment due day.'
        min_payment_percentage:
          $ref: '#/components/schemas/ProductMinPaymentPercentage'
      description: Contains information used to calculate the minimum payment amount.
    ProductMinPaymentPercentage:
      required:
        - include_fees_charged
        - include_interest_charged
        - percentage_of_balance
      type: object
      properties:
        include_fees_charged:
          type: array
          items:
            $ref: '#/components/schemas/ProductFeeType'
          description: One or more fee types to include when calculating the minimum payment.
        percentage_of_balance:
          maximum: 100
          minimum: 0.00010
          type: number
          description: 'Minimum payment, expressed as a percentage of the total statement balance, due on the payment due day.'
      description: Contains information used to calculate the minimum payment percentage.
    ProductResponse:
      type: object
      properties:
        card_product_tokens:
          minItems: 1
          type: array
          items:
            type: string
          description: One or more associated card product tokens.
        classification:
          $ref: '#/components/schemas/ProductClassification'
        config:
          $ref: '#/components/schemas/ProductConfig'
        created_time:
          type: string
          description: 'Date and time when the credit product was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        credit_line:
          $ref: '#/components/schemas/ProductCreditLine'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          type: string
          description: Description of the credit product.
        interest_calculation:
          $ref: '#/components/schemas/InterestCalculation'
        min_payment_calculation:
          $ref: '#/components/schemas/ProductMinPaymentCalculation'
        min_payment_flat_amount:
          minimum: 0.01
          type: number
          description: 'Minimum payment, expressed as a flat amount, due on the payment due day.'
        min_payment_percentage:
          maximum: 100
          minimum: 0.00010
          type: number
          description: 'Minimum payment, expressed as a percentage of the total statement balance, due on the payment due day.'
        name:
          type: string
          description: Name of the credit product.
        parent_product_token:
          type: string
          description: Unique identifier of the parent credit product.
        payment_allocation_order:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PaymentAllocationOrderEnum'
          description: 'Ordered list of balance types to which payments are allocated, from first to last.'
          default:
            - INTEREST
            - FEES
            - PRINCIPAL
        product_sub_type:
          $ref: '#/components/schemas/ProductSubType'
        product_type:
          $ref: '#/components/schemas/ProductType'
        status:
          $ref: '#/components/schemas/ResourceStatus'
        token:
          type: string
          description: Unique identifier of the credit product.
        updated_time:
          type: string
          description: 'Date and time when the credit product was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
        usage:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BalanceType'
          description: One or more usage types for the credit product.
      description: "Specifies shared details for a credit program.\n\nOnce set to `ACTIVE`, cannot be edited or deleted."
    ProductSubType:
      enum:
        - CREDIT_CARD
      type: string
      description: "Subtype of the credit product type.\n\n`CREDIT_CARD` - Card that enables the cardholder to make purchases on credit."
      default: CREDIT_CARD
    ProductType:
      enum:
        - REVOLVING
      type: string
      description: "Type of credit product.\n\n`REVOLVING` - Allows users to continuously borrow and pay debts up to the credit limit."
      default: REVOLVING
    ProductsPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
          description: Contains one or more credit product objects.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Returns paginated products.
    ProgramGatewayCreateReq:
      required:
        - basic_auth_password
        - basic_auth_username
        - name
        - url
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the Program Gateway is active.
          default: true
        basic_auth_password:
          maxLength: 50
          minLength: 20
          pattern: (?!^ +$)^.+$
          type: string
          description: Basic Authentication password for authenticating your environment.
        basic_auth_username:
          maxLength: 50
          pattern: (?!^ +$)^.+$
          type: string
          description: Basic Authentication username for authenticating your environment.
        custom_header:
          $ref: '#/components/schemas/ProgramGatewayCustomHeaderCreateReq'
        mtls:
          type: boolean
          description: Indicates whether the Program Gateway uses mutual Transport Layer Security (mTLS).
          default: false
        name:
          maxLength: 255
          type: string
          description: Name of the Program Gateway.
        timeout_millis:
          maximum: 2000
          minimum: 1
          type: integer
          description: 'Total timeout for Program Gateway calls, in milliseconds.'
          default: 2000
        token:
          maxLength: 36
          type: string
          description: "Unique identifier of the Program Gateway.\n\nIf you do not include a token, the system generates one automatically.\nAs this token is necessary for use in other calls, it is recommended that you define a simple and easy to remember string rather than letting the system generate a token for you.\nThis value cannot be updated."
        url:
          maxLength: 250
          pattern: (?!^ +$)^.+$
          type: string
          description: "URL of the Program Gateway endpoint hosted in your environment and configured to receive authorization requests made by the Marqeta platform.\nMust be HTTPS."
      description: Contains information relevant to creating a Credit Program Gateway.
    ProgramGatewayCustomHeaderCreateReq:
      type: object
      additionalProperties:
        type: string
      description: "Additional custom information included in the HTTP header.\nFor example, this might contain security information, along with Basic Authentication, when making a Program Gateway request.\nCustom headers also appear in the associated webhook's notifications."
    ProgramGatewayCustomHeaderResponse:
      type: object
      description: Additional custom information included in the HTTP header.
    ProgramGatewayPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProgramGatewayResponse'
          description: Contains one or more Program Gateway objects.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Returns paginated Program Gateways.
    ProgramGatewayResponse:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the Program Gateway is active.
          default: true
        basic_auth_password:
          type: string
          description: Basic Authentication password for authenticating your environment.
        basic_auth_username:
          type: string
          description: Basic Authentication username for authenticating your environment.
        created_time:
          type: string
          description: 'Date and time when the Program Gateway was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        custom_header:
          $ref: '#/components/schemas/ProgramGatewayCustomHeaderResponse'
        mtls:
          type: boolean
          description: Indicates whether the Program Gateway uses mutual Transport Layer Security (mTLS).
        name:
          type: string
          description: Name of the Program Gateway.
        timeout_millis:
          maximum: 2000
          type: integer
          description: 'Total timeout for Program Gateway calls, in milliseconds.'
        token:
          type: string
          description: Unique identifier of the Program Gateway.
        updated_time:
          type: string
          description: 'Date and time when the Program Gateway was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
        url:
          type: string
          description: URL of the Program Gateway endpoint hosted in your environment and configured to receive authorization requests made by the Marqeta platform.
      description: Contains information relevant to a Credit Program Gateway.
    ProgramGatewayUpdateReq:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the Program Gateway is active.
          default: true
        basic_auth_password:
          maxLength: 50
          minLength: 20
          pattern: (?!^ +$)^.+$
          type: string
          description: Basic Authentication password for authenticating your environment.
        basic_auth_username:
          maxLength: 50
          pattern: (?!^ +$)^.+$
          type: string
          description: Basic Authentication username for authenticating your environment.
        custom_header:
          $ref: '#/components/schemas/ProgramGatewayCustomHeaderCreateReq'
        mtls:
          type: boolean
          description: Indicates whether the Program Gateway uses mutual Transport Layer Security (mTLS).
          default: false
        name:
          maxLength: 255
          type: string
          description: Name of the Program Gateway.
        timeout_millis:
          maximum: 2000
          type: integer
          description: 'Total timeout for Program Gateway calls, in milliseconds.'
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the Program Gateway.
        url:
          maxLength: 250
          pattern: (?!^ +$)^.+$
          type: string
          description: "URL of the Program Gateway endpoint hosted in your environment and configured to receive authorization requests made by the Marqeta platform.\nMust be HTTPS."
      description: Contains information relevant to updating a Program Gateway.
    ProgramReserveTransactionListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/program_reserve_transaction_response'
          description: "List of program reserve transactions.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    ProgramTransferListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of program transfer resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/program_transfer_response'
          description: "Array of program transfer objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    ProgramTransferTypeListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of program transfer resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/program_transfer_type_response'
          description: "Array of program transfer types.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    PushToCardDisburseListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/push_to_card_disbursement_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    PushToCardListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/push_to_card_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    PutRewardProgramsRequest:
      required:
        - is_active
        - note
      type: object
      properties:
        is_active:
          type: boolean
          description: A value of `true` indicates that the reward program is active and rewards can be accrued for the associated account.
        note:
          type: string
          description: A note explaining why the reward program is being activated or deactivated.
    RealTimeFeeGroupListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/real_time_fee_group'
          description: "Array of real time fee group objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    RedemptionStatus:
      enum:
        - INITIATED
        - COMPLETED
        - RETURNED
        - PROCESSING
        - SUBMITTED
      type: string
      description: "Status of the redemption.\nIf <</core-api/reward-redemptions#postRedemptionTransition, transitioning the redemption's status>>:\n\n* `new_state` is the state to which you want to transition the redemption; must be `COMPLETED` or `RETURNED`.\n* `initial_status` is the initial status of the redemption prior to transition."
    RedemptionTransitionsResponse:
      required:
        - created_time
        - initial_status
        - new_status
        - redemption_token
        - token
      type: object
      properties:
        created_time:
          type: string
          description: Date and time when the reward redemption transition was created on Marqeta's credit platform.
          format: date-time
        external_settlement_date_time:
          type: string
          description: "Date and time when the reward redemption was settled on your external platform.\n\nThis field is returned if you handled the reward redemption outside of Marqeta's credit platform."
          format: date-time
        initial_status:
          $ref: '#/components/schemas/RedemptionStatus'
        new_status:
          $ref: '#/components/schemas/RedemptionStatus'
        redemption_token:
          maxLength: 36
          type: string
          description: Unique identifier of the redemption whose status was transitioned.
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward redemption transition.
      description: Return redemptions transition.
    RedemptionType:
      enum:
        - EXTERNAL
        - STATEMENT_CREDIT
        - ACH
      type: string
      description: "Type of redemption.\n\n* `EXTERNAL` - You issue the redemption on your external platform; Marqeta adjusts the reward program balance on the system of record.\n* `STATEMENT_CREDIT` - Marqeta issues the redemption as a statement credit on the associated account. +\n*NOTE*: This creates a new journal entry on the account and cannot be undone.\n* `ACH` - The reward redemption is issued as an ACH transfer to the receiving account."
    RedemptionsBalanceResponse:
      required:
        - end_date
        - redemption_total_amount
        - reward_program_token
        - start_date
      type: object
      properties:
        end_date:
          type: string
          description: 'The ending date (or date-time) of a date range from which to return the redemption balance, in UTC.'
          format: date-time
        redemption_total_amount:
          type: number
          description: Total amount of rewards redeemed within a specified date range.
          format: decimal
        reward_program_token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward program for which to return the redemption balance.
        start_date:
          type: string
          description: 'The starting date (or date-time) of a date range from which to return the redemption balance, in UTC.'
          format: date-time
    RedemptionsBySettlementDatePage:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractPage'
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RedemptionsBySettlementDateResponse'
          description: List of redemptions.
      description: Return paginated redemptions by settlement date.
    RedemptionsBySettlementDateResponse:
      required:
        - account_token
        - amount
        - created_time
        - destination
        - note
        - redemption_token
        - reward_program_token
        - status
        - type
        - updated_time
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: token of account the redemption is for.
        amount:
          type: number
          format: decimal
        completion_time:
          type: string
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
        created_time:
          type: string
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
        destination:
          $ref: '#/components/schemas/DestinationType'
        note:
          type: string
          description: A note providing information on the reward redemption.
        redemption_token:
          maxLength: 36
          type: string
          description: Identifier of the redemption.
        reward_program_token:
          maxLength: 36
          type: string
          description: Token of reward program the redemption is for.
        status:
          $ref: '#/components/schemas/RedemptionStatus'
        type:
          $ref: '#/components/schemas/RedemptionType'
        updated_time:
          type: string
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
      description: Return redemptions.
    RedemptionsPage:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbstractPage'
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RedemptionsResponse'
          description: Contains one or more redemptions.
      description: Return paginated redemptions for a reward program.
    RedemptionsResponse:
      required:
        - amount
        - created_time
        - note
        - reward_program_token
        - status
        - token
        - type
        - updated_time
      type: object
      properties:
        amount:
          type: number
          description: Amount to redeem.
          format: decimal
        created_time:
          type: string
          description: 'Date and time when the reward redemption was created on the Marqeta platform, in UTC.'
          format: date-time
        destination:
          $ref: '#/components/schemas/DestinationType'
        external_settlement_date_time:
          type: string
          description: "Date and time when the reward redemption was settled on your external platform.\n\nThis field is returned if you handled the reward redemption outside of Marqeta's credit platform."
          format: date-time
        note:
          type: string
          description: A note providing information on the reward redemption.
        receiving_account_token:
          maxLength: 36
          type: string
          description: "Unique identifier of the external account receiving the reward redemption.\nThis token is equivalent to the <</core-api/payment-sources, payment source>> token."
        related_reward_entries:
          type: array
          items:
            $ref: '#/components/schemas/RewardProgramsEntriesResponse'
          description: Contains one or more reward entries related to the redemption.
        reward_program_token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward program for which to redeem rewards.
        sor_reward_token:
          maxLength: 36
          type: string
          description: "Unique identifier of the system of reward (SOR) reward that was created to represent the reward redemption as a `STATEMENT_CREDIT` on a credit account.\nThe SOR entry is a positive amount that is added to the account balance."
        status:
          $ref: '#/components/schemas/RedemptionStatus'
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward redemption.
        type:
          $ref: '#/components/schemas/RedemptionType'
        updated_time:
          type: string
          description: 'Date and time when the reward redemption was last updated on the Marqeta platform, in UTC.'
          format: date-time
      description: Contains information on a reward redemption.
    RefundDetails:
      required:
        - description
        - method
      type: object
      properties:
        description:
          type: string
          description: Description of the refund.
        method:
          $ref: '#/components/schemas/RefundMethod'
      description: Contains details for a refund.
    RefundDetailsResponse:
      required:
        - description
        - method
        - status
      type: object
      properties:
        description:
          type: string
          description: Description of the refund.
        method:
          $ref: '#/components/schemas/RefundMethod'
        status:
          $ref: '#/components/schemas/RefundStatus'
      description: Contains details for a refund.
      nullable: true
    RefundMethod:
      enum:
        - CHECK
      type: string
      description: Method of the refund.
    RefundStatus:
      enum:
        - COMPLETED
      type: string
      description: Current status of the refund.
    ResourceStatus:
      enum:
        - DRAFT
        - PENDING_APPROVAL
        - SENT_FOR_REVISION
        - ACTIVE
        - REJECTED
        - ARCHIVED
      type: string
      description: "Status of the credit product.\n\n* `DRAFT` - The credit product is in the process of being created.\n* `PENDING_APPROVAL` - The credit product has been created and is awaiting approval.\n* `SENT_FOR_REVISION` - The credit product has been returned for revision.\n* `ACTIVE` - The credit product is active.\n* `REJECTED` - The credit product has been rejected; this status cannot be changed.\n* `ARCHIVED` - The previously active credit product has been archived."
    RetryAchPaymentReq:
      required:
        - new_acho_ach_transfer_token
        - payment_token
      type: object
      properties:
        new_acho_ach_transfer_token:
          type: string
        payment_token:
          type: string
      description: Request body that can be used to create a new ACHO transfer for a given payment.
    ReturnedDetails:
      required:
        - return_code
        - return_reason
      type: object
      properties:
        return_code:
          type: string
          description: "Return code for the returned payment.\nFor more, see <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA ACH return codes>>."
        return_reason:
          type: string
          description: "Reason the payment was returned.\nFor more, see <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA ACH return codes>>."
      description: Contains information on a returned payment.
      nullable: true
    ReversalModel:
      required:
        - amount
        - original_transaction_token
      type: object
      properties:
        amount:
          type: number
        find_original_window_days:
          type: integer
          format: int32
        is_advice:
          type: boolean
          default: false
        network_fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
    RewardCreateReq:
      required:
        - amount
        - currency_code
        - description
        - type
      type: object
      properties:
        amount:
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: Amount of the reward.
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          maxLength: 255
          type: string
          description: Description of the reward.
        note:
          maxLength: 255
          type: string
          description: Additional information about the reward.
        token:
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
          description: Unique identifier of the reward.
    RewardEntriesJournalEntriesPageResponse:
      required:
        - count
        - data
        - end_index
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: "The number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
        data:
          type: array
          items:
            $ref: '#/components/schemas/RewardEntriesJournalEntriesResponse'
          description: An array of redacted reward entry objects.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
          format: int64
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
          format: int64
    RewardEntriesJournalEntriesResponse:
      type: object
      properties:
        related_journal_entry_token:
          maxLength: 36
          type: string
          description: Unique identifier of the related journal entry to which the reward rule was applied to trigger the reward entry.
        transaction_amount:
          type: number
          description: "The transaction amount to which the reward rule was applied.\nUsed to determine the value of the reward entry."
          format: decimal
        value:
          type: number
          description: Value of the reward entry.
          format: decimal
    RewardEntryStatus:
      enum:
        - PENDING
        - POSTED
      type: string
      description: Status of the reward entry.
    RewardProgramsBalancesResponse:
      required:
        - billing_cycle_closing_date
        - billing_cycle_opening_date
        - net_balance
        - pending_reward_balance
        - percentage
        - reward_program_token
        - total_reward_balance
      type: object
      properties:
        billing_cycle_closing_date:
          type: string
          description: 'Closing date of the billing cycle for which rewards were accrued, in UTC.'
          format: date-time
        billing_cycle_opening_date:
          type: string
          description: 'Opening date of the billing cycle for which rewards were accrued, in UTC.'
          format: date-time
        net_balance:
          type: number
          description: "The net balance for a billing cycle, which is total amount spent during a billing cycle, minus any refunds or reversals.\nUsed to determine reward accrual."
          format: decimal
        pending_reward_balance:
          type: number
          description: "The pending balance of the rewards accrued for the current billing cycle.\nPending rewards cannot be redeemed."
          format: decimal
        percentage:
          type: number
          description: "The reward percentage applied to the balance for the current billing cycle.\nDetermined by the reward rules config."
          format: decimal
        reward_program_token:
          maxLength: 36
          type: string
          description: Unique identifier of reward program for which to return balances.
        total_reward_balance:
          type: number
          description: The total balance of the rewards accrued to date minus the rewards redeemed to date.
          format: decimal
    RewardProgramsEntriesBalanceResponse:
      required:
        - created_time
        - end_date
        - reward_program_token
        - start_date
        - total_reward_balance
      type: object
      properties:
        created_date:
          type: string
          description: 'Date and time the reward entries balance was created on the Marqeta platform, in UTC.'
          format: date-time
        end_date:
          type: string
          description: "The ending date (or date-time) of a date range from which to return accrued rewards, in UTC.\nReward entries created on or before this date count toward the total reward balance."
          format: date-time
        reward_program_token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward program for which to retrieve the reward entries balance.
        start_date:
          type: string
          description: "The starting date (or date-time) of a date range from which to return accrued rewards, in UTC.\nReward entries created on or after this date count toward the total reward balance."
          format: date-time
        total_reward_balance:
          type: number
          description: The total balance of rewards accrued within a date range.
          format: decimal
    RewardProgramsEntriesPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/RewardProgramsEntriesResponse'
          description: An array of reward entry objects.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
          format: int64
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
          format: int64
      description: Return paginated reward entries.
    RewardProgramsEntriesResponse:
      required:
        - created_time
        - note
        - related_journal_entry_token
        - reward_program_token
        - reward_rules_config_token
        - status
        - token
        - transaction_amount
      type: object
      properties:
        created_time:
          type: string
          description: 'Date and time when the reward entry was created on the Marqeta platform, in UTC.'
          format: date-time
        mcc:
          type: string
          description: Merchant category code (MCC) of the related journal entry.
        mid:
          type: string
          description: Merchant identifier (MID) of the related journal entry.
        note:
          type: string
          description: A note providing information on the reward entry.
        related_journal_entry_token:
          maxLength: 36
          type: string
          description: Unique identifier of the related journal entry to which the reward rule was applied to trigger the reward entry.
        related_redemption_token:
          maxLength: 36
          type: string
          description: Unique identifier of the related redemption token that triggered the reward entry.
        reward_program_token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward program for which to return reward entries.
        reward_rules_config_token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward rules config used to determine the value of the reward entry.
        status:
          $ref: '#/components/schemas/RewardEntryStatus'
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward entry.
        transaction_amount:
          type: number
          description: "The transaction amount to which the reward rule was applied.\nUsed to determine the value of the reward entry."
          format: decimal
        value:
          type: number
          description: Value of the reward entry.
          format: decimal
    RewardProgramsPageResponse:
      required:
        - count
        - data
        - end_index
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/RewardProgramsResponse'
          description: An array of reward program objects.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
          format: int64
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
          format: int64
    RewardProgramsResponse:
      required:
        - account_token
        - bundle_token
        - calculation_type
        - created_time
        - is_active
        - note
        - token
        - updated_time
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the associated credit account.
        bundle_token:
          maxLength: 36
          type: string
          description: Unique identifier of the associated bundle that contains the reward policy on which the reward program is based.
        calculation_type:
          $ref: '#/components/schemas/CalculationType'
        created_time:
          type: string
          description: 'Date and time when the reward program was created on the Marqeta platform, in UTC.'
          format: date-time
        is_active:
          type: boolean
          description: A value of `true` indicates that the reward program is active.
        note:
          type: string
          description: A note that provides information on the reward program.
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward program.
        updated_time:
          type: string
          description: 'Date and time when the reward program was last updated on the Marqeta platform, in UTC.'
          format: date-time
    RewardProgramsRulesConfigsPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/RewardProgramsRulesConfigsResponse'
          description: An array of rules config objects.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
          format: int64
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
          format: int64
      description: Return paginated rules configs for a reward program.
    RewardProgramsRulesConfigsResponse:
      required:
        - accrual_type
        - created_time
        - is_active
        - percentage
        - reward_program_token
        - token
        - updated_time
      type: object
      properties:
        accrual_type:
          $ref: '#/components/schemas/AccrualType'
        created_time:
          type: string
          description: 'Date and time when the reward rules config was created on the Marqeta platform, in UTC.'
          format: date-time
        greater_than:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: "Minimum amount that the balance for a billing cycle can be to apply the specified reward percentage.\nFor example, if the `greater_than` value is `500`, the account holder earns _x_% of the account balance if they spend over $500 during a billing cycle."
          format: decimal
        is_active:
          type: boolean
          description: A value of `true` indicates that the reward rules config is active.
        less_than:
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: "Maximum amount that the balance for a billing cycle can be to apply the specified reward percentage.\nFor example, if the `less_than` value is `1500`, the account holder earns _x_% of the account balance if they spend under $1500 during a billing cycle."
          format: decimal
        mcc:
          type: string
          description: Merchant category code (MCC) of the related journal entry.
        percentage:
          type: number
          description: "The reward percentage applied when the balance for a billing cycle is within the range specified in the `less_than` and `greater_than` fields.\nFor example, if the `percentage` is `1`, the account holder earns 1% of the account balance if they spend between the `less_than` and `greater_than` amounts during a billing cycle."
          format: decimal
        reward_program_token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward program on which the rules config is applied.
        token:
          maxLength: 36
          type: string
          description: Unique identifier of the reward rules config.
        updated_time:
          type: string
          description: 'Date and time when the reward rules config was last updated on the Marqeta platform, in UTC.'
          format: date-time
    RewardResponse:
      required:
        - amount
        - created_time
        - currency_code
        - description
        - token
        - type
        - updated_time
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the account on which the reward exists.
        amount:
          minimum: 0
          type: number
          description: Amount of the reward.
        applied_to_amount:
          type: number
          description: "Total amount to which a percentage reward method is applied (for example, if a 3% reward is applied to 100, then `100` is the `applied_to_amount` value).\n\nThis field is not applicable for a flat fee method.\n\nReturned for auto-cash back reward types only."
        created_time:
          type: string
          description: 'Date and time when the reward was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          type: string
          description: Description of the reward.
        method:
          $ref: '#/components/schemas/Method'
        note:
          type: string
          description: Additional information about the reward.
        token:
          type: string
          description: "Unique identifier of the reward.\n\nIf in the `detail_object`, unique identifier of the detail object."
        type:
          $ref: '#/components/schemas/RewardType'
        updated_time:
          type: string
          description: 'Date and time when the reward was last updated on Marqeta''s credit platform, in UTC.'
          format: date-time
        value:
          type: number
          description: "Value of the percentage or flat amount.\n\nReturned for auto-cash back reward types only."
    RewardType:
      enum:
        - AUTO_CASH_BACK
        - CASH_BACK
      type: string
      description: Type of reward.
    ShippingInformationResponse:
      type: object
      properties:
        care_of_line:
          type: string
          description: "Specifies the value of the care of (C/O) line on the mailing carrier.\n\nThis field is returned if it exists in the resource."
        method:
          enum:
            - LOCAL_MAIL
            - LOCAL_MAIL_PACKAGE
            - GROUND
            - TWO_DAY
            - OVERNIGHT
            - INTERNATIONAL
            - INTERNATIONAL_PRIORITY
            - LOCAL_PRIORITY
            - FEDEX_EXPEDITED
            - FEDEX_REGULAR
            - UPS_EXPEDITED
            - UPS_REGULAR
            - USPS_EXPEDITED
            - USPS_REGULAR
          type: string
          description: "Specifies the shipping service.\n\nThis field is returned if it exists in the resource."
        recipient_address:
          $ref: '#/components/schemas/FulfillmentAddressResponse'
        return_address:
          $ref: '#/components/schemas/FulfillmentAddressResponse'
      description: "Specifies shipping details for the order.\n\nThis object is returned if it exists in the resource."
    StatementFile:
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit account on which the statement PDF file is generated.
        closing_date:
          type: string
          description: Date and time when the statement period ended.
          format: date-time
        opening_date:
          type: string
          description: Date and time when the statement period began.
          format: date-time
        signed_url:
          type: string
          description: Signed URL to retrieve the statement PDF file.
        statement_summary_token:
          type: string
          description: Unique identifier of the statement summary.
          format: uuid
        token:
          type: string
          description: Unique identifier of the statement file.
        type:
          enum:
            - STATEMENT_PDF
          type: string
          description: Type of file.
      description: Collection of statement files.
    StatementFilePage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/StatementFile'
          description: List of statement files.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Returns paginated statement files.
    StatementInterestCharge:
      type: object
      properties:
        amount:
          type: number
          description: Amount of interest calculated for the billing period.
        apr_type:
          enum:
            - GO_TO
          type: string
          description: Type of APR.
        apr_value:
          maximum: 100
          minimum: 0
          type: number
          description: Annual percentage rate.
        balance_subject_to_interest_rate:
          type: number
          description: Average daily balance used to calculate interest.
        balance_type:
          enum:
            - PURCHASE
          type: string
          description: "Type of balance.\n\n* `PURCHASE` - The balance on purchases."
      description: Contains information on statement interest charges.
    StatementInterestChargesPage:
      required:
        - account_token
        - data
        - statement_summary_token
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit account on which the statement interest charge is generated.
        data:
          type: array
          items:
            $ref: '#/components/schemas/StatementInterestCharge'
          description: Contains one or more interest charges on a statement.
        statement_summary_token:
          type: string
          description: Unique identifier of the statement summary.
      description: Return paginated statement interest charges.
    StatementPaymentInfo:
      type: object
      properties:
        created_time:
          type: string
          description: 'Date and time when the statement payment information was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        minimum_payment_due:
          type: number
          description: 'Minimum payment amount for the current statement period, based on the associated credit product settings.'
        new_statement_balance:
          type: number
          description: Balance on the credit account when the statement period ended.
        payment_cutoff_date:
          type: string
          description: Last day a payment can be made before interest and fees are charged to the account.
          format: date-time
        payment_due_date:
          type: string
          description: 'Payment due date, based on the credit account settings.'
          format: date-time
        statement_summary_token:
          type: string
          description: Unique identifier of the statement summary.
          format: uuid
        three_year_savings:
          type: number
          description: Savings amount if the balance is paid off in three years versus only making minimum payments.
        token:
          type: string
          description: Unique identifier of the statement payment.
          format: uuid
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/StatementPaymentWarning'
          description: One or more payoff warnings.
      description: Contains information on a statement payment.
    StatementPaymentWarning:
      type: object
      properties:
        disclosure:
          enum:
            - NEGATIVE_OR_NO_AMORTIZATION
            - NO_LIFETIME_REPAYMENT
          type: string
          description: "Statement disclosure in the case of negative or no amortization, or no lifetime repayment for the minimum payment warning type.\n\n* `NEGATIVE_OR_NO_AMORTIZATION` - Occurs when the interest amount is higher than the minimum payment; results in the outstanding balance remaining in perpetuity.\n* `NO_LIFETIME_REPAYMENT` - Occurs when the interest amount is just below the minimum payment; results in the outstanding balance taking longer than a lifetime to pay off."
        interest_paid:
          type: number
          description: "For the minimum payment warning type, this value represents the total amount of interest to pay off the statement balance if only making the minimum payment each month.\n\nFor the 3 Year warning type, this value represents the total amount of interest if paying off the statement balance in three years."
        monthly_payment:
          type: number
          description: "For the minimum payment warning type, this value is 0.\n\nFor the 3 Year warning type, this value represents the fixed monthly payment amount required to pay off the statement balance in three years."
        pay_off_period:
          minimum: 0
          type: integer
          description: "For the minimum payment warning type, this value represents the number of periods required to pay off the statement balance.\n\nFor the 3 Year warning type, this value is 36 (months)."
        period_type:
          enum:
            - MONTH
            - YEAR
          type: string
          description: Time unit of the pay off period.
        total_paid:
          type: number
          description: "For the minimum payment warning type, this value represents the total amount of principal and interest to pay off the statement balance if only making the minimum payment each month.\n\nFor the 3 Year warning type, this value represents the total amount of principal and interest if paying off the statement balance in three years."
        type:
          enum:
            - MIN_PAYMENT
            - 3_YEAR
          type: string
          description: "Type of statement warning.\n\n* `MIN_PAYMENT` - Displays the total estimated payment amount and how long it would take to pay off the statement balance if only making minimum payments.\n* `3_YEAR` - Displays the monthly payment amount and total estimated payment amount if paying off the statement balance in three years."
      description: Contains information on statement payment warnings.
    StatementReward:
      type: object
      properties:
        created_time:
          type: string
          description: 'Date and time when the statement reward was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        current_billing_cycle_reward:
          type: number
          description: Amount of rewards received in the current billing cycle.
        previous_billing_cycle_reward:
          type: number
          description: Amount of rewards received in the previous billing cycle.
        token:
          type: string
          description: Unique identifier of the rewards for a specific statement.
      description: Contains information on statement rewards.
    StatementSummary:
      required:
        - account_token
        - available_credit
        - closing_balance
        - closing_date
        - created_time
        - credits
        - cycle_type
        - days_in_billing_cycle
        - fees
        - interest
        - opening_balance
        - opening_date
        - past_due_amount
        - payments
        - purchases
        - token
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the credit account on which the statement summary is generated.
        available_credit:
          type: number
          description: 'Amount available to spend on the credit account, as of the statement closing date.'
        closing_balance:
          type: number
          description: Balance of the credit account when the statement period ended.
        closing_date:
          type: string
          description: Date and time when the statement period ended.
          format: date-time
        created_time:
          type: string
          description: 'Date and time when the statement summary was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        credit_limit:
          type: number
          description: 'Maximum balance the credit account can carry, as of the statement closing date.'
        credits:
          type: number
          description: Total amount of credits received during the statement period.
        cycle_type:
          $ref: '#/components/schemas/CycleType'
        days_in_billing_cycle:
          type: integer
          description: 'Number of days in the billing cycle, also known as the statement period.'
        fees:
          type: number
          description: "Total amount of fees charged during the statement period.\nDoes not include periodic fees."
        interest:
          type: number
          description: Total amount of interest charged during the statement period.
        opening_balance:
          type: number
          description: Balance of the credit account when the statement period began.
        opening_date:
          type: string
          description: Date and time when the statement period began.
          format: date-time
        past_due_amount:
          type: number
          description: 'Total payment amount, required to make the account current.'
        payments:
          type: number
          description: Total amount of payments made during the statement period.
        purchases:
          type: number
          description: Total amount of purchases made during the statement period.
        token:
          type: string
          description: Unique identifier of the statement summary.
          format: uuid
      description: Contains the summary data for an account's monthly statement.
    StatementSummaryPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/StatementSummary'
          description: One or more statement summaries.
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Return filtered transactions.
    SubstatusCreateReq:
      required:
        - reason
        - resource_token
        - resource_type
        - substatus
      type: object
      properties:
        effective_date:
          type: string
          description: 'Date when the sub status goes into effect, in UTC.'
          format: date-time
        reason:
          maxLength: 255
          minLength: 1
          type: string
          description: Reason for the substatus.
        resource_token:
          type: string
          description: "The unique identifier of the user or account for which you want to create a substatus.\n"
        resource_type:
          enum:
            - USER
            - ACCOUNT
          type: string
          description: "Possible values: USER, ACCOUNT, BUSINESS\n"
        substatus:
          maxLength: 36
          minLength: 1
          type: string
          description: "Possible values: FRAUD, DECEASED, BANKRUPTCY, BANKRUPTCY_FILED, BANKRUPTCY_REAFFIRMED, BANKRUPTCY_WITHDRAWN, BANKRUPTCY_RESCINDED, BANKRUPTCY_DISCHARGED, HARDSHIP, MLA, SCRA\n"
      description: Contains information relevant to creating substatus
    SubstatusPage:
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
      properties:
        count:
          type: integer
          description: Number of resources returned.
        data:
          type: array
          items:
            $ref: '#/components/schemas/SubstatusResponse'
        end_index:
          type: integer
          description: Sort order index of the last resource in the returned array.
        is_more:
          type: boolean
          description: A value of `true` indicates that more unreturned resources exist.
        start_index:
          type: integer
          description: Sort order index of the first resource in the returned array.
      description: Return paginated account and user substatuses
    SubstatusResponse:
      required:
        - created_time
        - effective_date
        - reason
        - resource_token
        - resource_type
        - substatus
        - token
      type: object
      properties:
        created_time:
          type: string
          description: 'Date and time when the sub status was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        deactivation_reason:
          maxLength: 255
          type: string
          description: Reason for deactivating the sub status.
        deactivation_time:
          type: string
          description: 'Date and time when the sub status was deactivated on Marqeta''s credit platform, in UTC.'
          format: date-time
        effective_date:
          type: string
          description: 'Date when the sub status goes into effect, in UTC.'
          format: date-time
        is_active:
          type: boolean
          description: Indicates whether the sub status is active.
        reason:
          maxLength: 255
          type: string
          description: substatus reason
        resource_token:
          maxLength: 36
          type: string
          description: substatus resource token
        resource_type:
          type: string
          description: substatus resource type
        substatus:
          maxLength: 36
          type: string
          description: substatus
        token:
          maxLength: 36
          type: string
          description: substatus token
      description: Contains information about the substatus.
    SubstatusUpdateReq:
      required:
        - deactivation_reason
      type: object
      properties:
        deactivation_reason:
          maxLength: 255
          minLength: 1
          type: string
          description: Reason to deactivate the substatus.
      description: Contains information relevant to updating substatus
    Success:
      type: object
      properties:
        success:
          type: boolean
          description: Denotes whether the operation is successful or not
      description: Successful response for operation
    TransactionModelListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "The number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/transaction_model'
          description: "An array of transaction objects.\nSee the <</core-api/transactions/#transaction_model, Transaction object>> description at the top of this page.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "The sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "The sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    ApiError:
      type: object
      properties:
        error_code:
          type: string
        error_message:
          type: string
        message:
          type: string
    UserCardHolderListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/card_holder_model'
          description: "Array of user objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    UserCardHolderUpdateModel:
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Associates the specified account holder group with the cardholder.\nSend a `GET` request to `/accountholdergroups` to retrieve account holder group tokens."
        address1:
          maxLength: 255
          minLength: 0
          type: string
          description: "Cardholder address.\n\n*NOTE:* Required for KYC verification (US-based cardholders only).\nCannot perform KYC if set to a PO Box."
        address2:
          maxLength: 255
          minLength: 0
          type: string
          description: "Additional address information for the cardholder.\n\n*NOTE:* Cannot perform KYC if set to a PO Box."
        birth_date:
          type: string
          description: "Cardholder date of birth.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: "The city that corresponds to the address.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        company:
          maxLength: 255
          minLength: 0
          type: string
          description: Company name.
        corporate_card_holder:
          type: boolean
          description: Specifies if the cardholder holds a corporate card.
          default: false
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: "Country in which the cardholder resides.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: "Valid email address for the cardholder.\n\nThis value must be unique among cardholders."
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Cardholder first name.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        gender:
          maxLength: 1
          minLength: 0
          enum:
            - F
            - M
          type: string
          description: Gender of the cardholder.
        honorific:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Cardholder title or prefix: Ms., Mr., Miss, Mrs.'
        id_card_expiration_date:
          type: string
          description: Expiration date of the cardholder's identification card.
        id_card_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's identification card number.
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          description: One or more objects containing identifications associated with the cardholder.
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
          description: Cardholder IP address.
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Cardholder last name.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
        middle_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder middle name.
        nationality:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder nationality.
        notes:
          maxLength: 255
          minLength: 0
          type: string
          description: Any additional information pertaining to the cardholder.
        parent_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of an existing user or business resource.\n\nRequired if `uses_parent_account = true`.\nThis account holder is configured as the parent of the current cardholder.\n\nTo unlink a child account from a parent account, update this field to a null value."
        passport_expiration_date:
          type: string
          description: Expiration date of the cardholder's passport.
        passport_number:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder passport number.
        password:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's user account password on the Marqeta platform.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: "Cardholder telephone number (including area code), prepended by the `+` symbol and the 1- to 3-digit country calling code.\nDo not include hyphens, spaces, or parentheses."
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: "Postal code of the cardholder's address.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        ssn:
          type: string
          description: Cardholder's Social Security Number (SSN).
        state:
          maxLength: 32
          minLength: 0
          type: string
          description: "State where the cardholder resides.\n\n*NOTE:* <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid two-character abbreviation>> required for KYC verification (US-based cardholders only)."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the cardholder.
        uses_parent_account:
          type: boolean
          description: "Indicates whether the child shares balances with the parent (`true`), or the child's balances are independent of the parent (`false`).\n\nIf set to `true`, you must also include a `parent_token` in the request.\nThis value cannot be updated."
          default: false
    UserTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserTransitionResponse'
          description: "Array of user transition resources.\n\nResources are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    UserTransitionRequest:
      required:
        - channel
        - reason_code
        - status
        - user_token
      type: object
      properties:
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
          description: Mechanism by which the transaction was initiated.
        idempotentHash:
          type: string
          description: Unique hashed value that identifies subsequent submissions of the user transition request.
        reason:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional information about the status change.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "Identifies the standardized reason for the transition:\n\n*00:* Object activated for the first time.\n\n*01:* Requested by you.\n\n*02:* Inactivity over time.\n\n*03:* This address cannot accept mail or the addressee is unknown.\n\n*04:* Negative account balance.\n\n*05:* Account under review.\n\n*06:* Suspicious activity was identified.\n\n*07:* Activity outside the program parameters was identified.\n\n*08:* Confirmed fraud was identified.\n\n*09:* Matched with an Office of Foreign Assets Control list.\n\n*10:* Card was reported lost.\n\n*11:* Card information was cloned.\n\n*12:* Account or card information was compromised.\n\n*13:* Temporary status change while on hold/leave.\n\n*14:* Initiated by Marqeta.\n\n*15:* Initiated by issuer.\n\n*16:* Card expired.\n\n*17:* Failed KYC.\n\n*18:* Changed to `ACTIVE` because information was properly validated.\n\n*19:* Changed to `ACTIVE` because account activity was properly validated.\n\n*20:* Change occurred prior to the normalization of reason codes.\n\n*21:* Initiated by a third party, often a digital wallet provider.\n\n*22:* PIN retry limit reached.\n\n*23:* Card was reported stolen.\n\n*24:* Address issue.\n\n*25:* Name issue.\n\n*26:* SSN issue.\n\n*27:* DOB issue.\n\n*28:* Email issue.\n\n*29:* Phone issue.\n\n*30:* Account/fulfillment mismatch.\n\n*31:* Other reason."
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
          description: Specifies the new status of the user.
        token:
          type: string
          description: "Unique identifier of the user transition.\n\nIf you do not include a token, the system generates one automatically.\nThis token is referenced in other API calls, so we recommend that you define a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          type: string
          description: Unique identifier of the user whose status you want to transition.
    UserTransitionResponse:
      required:
        - channel
        - reason_code
        - status
        - token
      type: object
      properties:
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
          description: Mechanism by which the transaction was initiated.
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        reason:
          type: string
          description: Additional information about the status change.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "Identifies the standardized reason for the transition:\n\n*00:* Object activated for the first time.\n\n*01:* Requested by you.\n\n*02:* Inactivity over time.\n\n*03:* This address cannot accept mail or the addressee is unknown.\n\n*04:* Negative account balance.\n\n*05:* Account under review.\n\n*06:* Suspicious activity was identified.\n\n*07:* Activity outside the program parameters was identified.\n\n*08:* Confirmed fraud was identified.\n\n*09:* Matched with an Office of Foreign Assets Control list.\n\n*10:* Card was reported lost.\n\n*11:* Card information was cloned.\n\n*12:* Account or card information was compromised.\n\n*13:* Temporary status change while on hold/leave.\n\n*14:* Initiated by Marqeta.\n\n*15:* Initiated by issuer.\n\n*16:* Card expired.\n\n*17:* Failed KYC.\n\n*18:* Changed to `ACTIVE` because information was properly validated.\n\n*19:* Changed to `ACTIVE` because account activity was properly validated.\n\n*20:* Change occurred prior to the normalization of reason codes.\n\n*21:* Initiated by a third party, often a digital wallet provider.\n\n*22:* PIN retry limit reached.\n\n*23:* Card was reported stolen.\n\n*24:* Address issue.\n\n*25:* Name issue.\n\n*26:* SSN issue.\n\n*27:* DOB issue.\n\n*28:* Email issue.\n\n*29:* Phone issue.\n\n*30:* Account/fulfillment mismatch.\n\n*31:* Other reason."
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
          description: Specifies the new status of the user.
        token:
          type: string
          description: Unique identifier of the user transition.
        user_token:
          type: string
          description: Unique identifier of the user whose status was transitioned.
    UserValidationRequest:
      type: object
      properties:
        birth_date:
          type: string
          description: Date of birth of the user associated with this card.
          format: date-time
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: Telephone number of the user associated with this card.
        random_name_line1_postfix:
          maxLength: 6
          minLength: 6
          type: string
          description: "Random six-digit numeric postfix generated for some bulk card orders.\n\nSee <</core-api/bulk-card-orders, Bulk Card Orders>> for more information about numeric postfixes."
        ssn:
          maxLength: 255
          minLength: 0
          type: string
          description: Social Security Number (SSN) of the user associated with this card.
      description: Contains information about the user.
    UserValidationResponse:
      required:
        - birth_date
        - phone
        - random_name_line1_postfix
        - ssn
      type: object
      properties:
        birth_date:
          type: boolean
          description: Indicates whether the `birth_date` field in the request was validated.
          default: false
        phone:
          type: boolean
          description: Indicates whether the `phone` field in the request was validated.
          default: false
        random_name_line1_postfix:
          type: boolean
          description: Indicates whether the `random_name_line1_postfix` field in the request was validated.
          default: false
        ssn:
          type: boolean
          description: Indicates whether the `ssn` field in the request was validated.
          default: false
      description: Contains information about the user.
    ValidationsRequest:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserValidationRequest'
      description: Contains information about the user.
    ValidationsResponse:
      required:
        - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserValidationResponse'
      description: Contains information about the user.
    VelocityControlBalance:
      allOf:
        - $ref: '#/components/schemas/VelocityControlResponse'
        - type: object
          properties:
            available:
              type: object
              properties:
                amount:
                  type: number
                  description: "Amount of money remaining for the user.\nThis value is returned only if the user has a limit on the amount of money."
                days_remaining:
                  type: integer
                  description: "Number of days remaining for the user.\nThis value is returned only if the user has a limit on the number of days."
                uses:
                  type: integer
                  description: "Number of uses remaining for the user.\nThis value is returned only if the user has a limit on the number of uses."
    VelocityControlBalanceListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of velocity control resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/velocity_control_balance_response'
          description: "Array of velocity control objects that include available balances.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    VelocityControlBalancePage:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/VelocityControlBalance'
          description: "Array of Card Group objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    VelocityControlListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/velocity_control_response'
          description: "Array of velocity control objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "The sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    VelocityControlResponse:
      required:
        - amount_limit
        - currency_code
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the velocity control is active.
          default: false
        amount_limit:
          minimum: 0
          type: number
          description: Maximum monetary sum that can be cleared within the time period defined by velocity period.
        association:
          $ref: '#/components/schemas/Association'
        currency_code:
          type: string
          description: Three-character ISO 4217 currency code.
        merchant_scope:
          $ref: '#/components/schemas/MerchantScope'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: "Description of how the velocity control restricts spending.\nFor example, \"Max spend of $500 per day\" or \"Max spend of $5000 per month for non-exempt employees\"."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the velocity control.
        usage_limit:
          minimum: 1
          type: integer
          description: "Maximum number of times a card can be used within the time period defined by the `velocity_window` field.\n\nLeave `null` to indicate that the card can be used an unlimited number of times."
          format: int32
        velocity_window:
          $ref: '#/components/schemas/VelocityWindow'
        velocity_window_start_day:
          minimum: 1
          type: integer
          description: "Start day of the velocity window defined by the `velocity_window` field.\nDefault value is `1`"
          format: int32
    VelocityWindow:
      enum:
        - MONTH
      type: string
      description: "Defines the time period to which the `amount_limit` and `usage_limit` fields apply:\n* *MONTH* – one month; months begin on the first day of month at 00:00:00 ET."
    WebhookEventResendContainerResponse:
      type: object
      properties:
        unused:
          type: string
          description: Event notification that was resent to your webhook endpoint.
      description: Contains information about a webhook event.
    WebhookResponseModelListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/webhook_response_model'
          description: "Array of webhooks resources.\n\nResources are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    WebhookUpdateCustomHeaderRequest:
      type: object
      properties:
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: "Additional custom information included in the HTTP header.\nFor example, this might contain security information, along with Basic Authentication, when making a JIT Funding request."
    YearToDate:
      required:
        - account_token
        - statement_token
        - total_fees
        - total_interest
      type: object
      properties:
        account_token:
          maxLength: 36
          type: string
          description: Unique identifier of the associated credit account.
        created_time:
          type: string
          description: 'Date and time when the year-to-date total was created on Marqeta''s credit platform, in UTC.'
          format: date-time
        statement_token:
          type: string
          description: Unique identifier of the statement summary from which to retrieve year-to-date totals.
          format: uuid
        token:
          type: string
          description: Unique identifier of the year-to-date total.
          format: uuid
        total_fees:
          type: number
          description: Total fees charged year-to-date.
        total_interest:
          type: number
          description: Total interest charged year-to-date.
      description: Contains information about year-to-date totals for an account.
    accepted_countries_model:
      required:
        - country_codes
        - is_whitelist
        - name
      type: object
      properties:
        country_codes:
          type: array
          items:
            type: string
            description: ISO 3166 three-digit numeric country code.
          description: Comma-delimited list of accepted countries by ISO 3166 three-digit country code.
        created_time:
          type: string
          description: "Date and time when the accepted countries object was created, in UTC.\nThis field is returned when included in your query."
          format: date-time
        is_whitelist:
          type: boolean
          description: "Specifies if the list of accepted countries in this object is an allow list.\nIf set to `true`, transactions are accepted for all countries included in the object's `country_codes` array.\nIf set to `false`, transactions are prohibited for all countries included in the object's `country_codes` array."
          default: false
        last_modified_time:
          type: string
          description: "Date and time when the accepted countries object was last updated, in UTC.\nThis field is returned when included in your query."
          format: date-time
        name:
          type: string
          description: Name of the `acceptedcountries` object.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "The unique identifier of the `acceptedcountries` object.\n\nThis field is always returned."
    access_token_response:
      required:
        - expires
      type: object
      properties:
        accesstoken_id:
          type: string
        application:
          $ref: '#/components/schemas/Application'
        expires:
          type: string
          description: Date and time when the access token expires.
          format: date-time
        master_roles:
          type: array
          items:
            type: string
          description: Array of master roles.
        one_time:
          type: boolean
          description: Indicates whether the access token is a single-use token.
        token:
          type: string
          description: Unique identifier of the access token.
        token_type:
          type: string
          description: Specifies the type of access token.
        user_token:
          type: string
          description: Unique identifier of the user resource.
      description: Contains a cardholder's login access information.
    account:
      type: object
      properties:
        email_address:
          type: string
          description: Digital wallet provider's email address for the cardholder.
        id:
          type: string
          description: Digital wallet provider's identity number for the cardholder.
        score:
          type: string
          description: Score from the digital wallet provider.
      description: Contains information related to the cardholder and provided by the digital wallet provider.
    account_funding:
      type: object
      properties:
        funding_source:
          enum:
            - CREDIT
            - DEBIT
            - PREPAID
            - DEPOSIT_ACCOUNT
            - CASH
            - MOBILE_MONEY_ACCOUNT
            - NON_VISA_CREDIT
            - CHECK
            - ACH
          type: string
          description: Specifies the type of account from which the transaction was funded.
        receiver_account_type:
          enum:
            - OTHER
            - RTN_BANK_ACCOUNT
            - IBAN
            - CARD_ACCOUNT
            - EMAIL
            - PHONE_NUMBER
            - BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE
            - WALLET_ID
            - SOCIAL_NETWORK_ID
          type: string
          description: Specifies the type of account receiving the funding.
        receiver_name:
          type: string
          description: Specifies the name of the account holder receiving the funding.
        screening_score:
          type: string
          description: "Sanctions screening score to assist with meeting Anti-Money Laundering (AML) obligations.\n\nHigher scores indicate that the sender's data more closely resembles an entry on the regulatory watchlist.\n\nA value of 999 means no score was available."
        transaction_purpose:
          type: string
          description: Describes the purpose of the account funding transaction.
        transaction_type:
          enum:
            - ACCOUNT_TO_ACCOUNT
            - PERSON_TO_PERSON
            - WALLET_TRANSFER
            - MONEY_TRANSFER_BY_BANK
            - BUSINESS_TO_BUSINESS
            - DISBURSEMENT
            - GOVERNMENT_DISBURSEMENT
            - GAMBLING_PAYOUT
            - LOYALTY
            - MERCHANT_DISBURSEMENT
            - ONLINE_GAMBLING_PAYOUT
            - PENSION_DISBURSEMENT
            - PREPAID_LOADS
            - CARD_BILL_PAYMENT
            - BILL_PAYMENT
            - CASH_CLAIM
            - CASH_IN
            - CASH_OUT
            - MOBILE_AIR_TIME_PAYMENT
            - MONEY_TRANSFER_BY_MERCHANT
            - FACE_TO_FACE_MERCHANT_PAYMENT
            - GOVERNMENT_PAYMENT
            - PAYMENTS_GOODS_SERVICES
            - FUNDS_TRANSFER
            - GENERAL_BUSINESS_TO_BUSINESS_TRANSFER
            - BUSINESS_TO_BUSINESS_TRANSFER
            - CASH_DEPOSIT
            - PURCHASE_REPAYMENT
          type: string
          description: Specifies the account funding transaction type.
      description: "Contains details about account funding transactions.\nAccount funding transactions move money into a cardholder's general purpose account (GPA)."
    account_holder_group_config:
      type: object
      properties:
        is_reloadable:
          type: boolean
          description: "If set to `false`, this control prohibits an account holder's account from being reloaded with funds after the initial load.\n\nThis restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments."
          default: false
        kyc_required:
          enum:
            - ALWAYS
            - CONDITIONAL
            - NEVER
          type: string
          description: 'If set to `ALWAYS`, new account holders are created in an `UNVERIFIED` status and must pass identity verification (KYC) before they can be active; if set to `CONDITIONAL`, new account holders begin in a `LIMITED` status and have limited actions available before passing identity verification; if set to `NEVER`, new account holders are created in an active state.'
        pre_kyc_controls:
          $ref: '#/components/schemas/pre_kyc_controls'
        real_time_fee_group_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Associates the specified real-time fee group with the members of the account holder group.
      description: Contains configuration fields for the account holder group.
    account_holder_group_request:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/account_holder_group_config'
        name:
          maxLength: 40
          minLength: 1
          type: string
          description: Descriptive name for the account holder group.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the account holder group.
    account_holder_group_response:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/account_holder_group_config'
        name:
          type: string
          description: "Descriptive name for the account holder group.\n\nThis field is returned if it exists in the resource."
        token:
          type: string
          description: "Unique identifier of the account holder group.\n\nThis field is always returned."
    account_holder_group_update_request:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/account_holder_group_config'
        name:
          maxLength: 40
          minLength: 1
          type: string
          description: Descriptive name for the account holder group.
    account_name_verification_model:
      type: object
      properties:
        on_file:
          $ref: '#/components/schemas/ani_information'
        request:
          $ref: '#/components/schemas/ani_information'
        request_type:
          enum:
            - SENDER
            - RECEIVER
          type: string
        response:
          $ref: '#/components/schemas/response'
      description: 'Contains name verification data: the full name entered by the cardholder, name data held by the Marqeta platform, and an assertion by the Marqeta platform as to whether the two sets of data match.'
    account_name_verification_source:
      type: object
      properties:
        first_name:
          type: string
          description: First or given name of the cardholder.
        last_name:
          type: string
          description: Last or family name of the cardholder.
        middle_name:
          type: string
          description: Middle name of the cardholder.
        on_file:
          $ref: '#/components/schemas/ani_information'
        response:
          $ref: '#/components/schemas/response'
      description: Contains account name verification data used to make JIT Funding decisions.
    ach_model:
      required:
        - account_number
        - account_type
        - name_on_account
        - routing_number
      type: object
      properties:
        account_number:
          type: string
          description: ACH account number.
        account_type:
          enum:
            - checking
            - savings
            - corporate
            - loan
          type: string
          description: Type of account.
        bank_name:
          type: string
          description: Name of the financial institution where the ACH account is held.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business account holder.\nThis token is required if a `user_token` is not specified."
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        name_on_account:
          maxLength: 50
          minLength: 1
          type: string
          description: Name on the ACH account.
        routing_number:
          type: string
          description: Routing number for the ACH account.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source.\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user account holder.\nThis token is required if a `business_token` is not specified."
        verification_notes:
          type: string
          description: "Free-form text field for holding notes about verification.\nThis field is returned only if `verification_override = true`."
        verification_override:
          type: boolean
          description: "Allows the ACH funding source to be used, regardless of its verification status.\nSet this field to `true` if you can attest that you have verified the account on your own and that it will not be returned by the Federal Reserve.\n\n*NOTE:* When using `PLAID` to validate a funding source, this field is always set to `true`."
          default: false
    ach_partner_request_model:
      required:
        - partner
        - partner_account_link_reference_token
      type: object
      properties:
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Required if 'user_token' is null
        idempotentHash:
          type: string
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        partner:
          enum:
            - PLAID
          type: string
          description: "Name of the partner who validated the account holder.\nReturned when a third-party partner was used for account validation."
        partner_account_link_reference_token:
          type: string
          description: "Supplied by the account validation partner, this value is a reference to the account holder's details, such as the account number and routing number.\nReturned when a third-party partner was used for account validation."
        token:
          type: string
          description: "Unique identifier of the funding source.\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Supplied by the account validation partner, this value is a reference to the account holder's details, such as the account number and routing number.\nThis token is required if a `business_token` is not specified.\n\nSend a `GET` request to `/users` to retrieve user tokens."
    ach_response_model:
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - last_modified_time
        - name_on_account
        - token
      type: object
      properties:
        account_suffix:
          type: string
          description: ACH account identifier appended to the bank account number.
        account_type:
          type: string
          description: Type of account.
        active:
          type: boolean
          description: Specifies whether the account is active.
          default: false
        bank_name:
          type: string
          description: "Name of the bank holding the account.\nThis field is returned if it exists in the resource."
        business_token:
          type: string
          description: "Unique identifier of the business account holder.\nThis token is returned if a `user_token` is not specified."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        date_sent_for_verification:
          type: string
          description: "Date and time in UTC when either the request for account validation was sent to the third-party partner, or when the funding source was verified by microdeposits.\n\nThis field is returned if it exists in the resource."
          format: date-time
        date_verified:
          type: string
          description: "Date and time when the account was verified, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source.\n\nThis field is returned if it exists in the resource."
          default: false
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        name_on_account:
          type: string
          description: Name on the ACH account.
        partner:
          type: string
          description: "Name of the partner who validated the account holder.\nReturned when a third-party partner was used for account validation."
        partner_account_link_reference_token:
          type: string
          description: "Supplied by the account validation partner, this value is a reference to the account holder's details, such as the account number and routing number.\nReturned when a third-party partner was used for account validation."
        token:
          type: string
          description: Unique identifier of the funding source.
        user_token:
          type: string
          description: "Unique identifier of the user account holder.\nThis token is returned if a `business_token` is not specified."
        verification_notes:
          type: string
          description: "Free-form text field for holding notes about verification.\nThis field is returned only if `verification_override = true`."
        verification_override:
          type: boolean
          description: "Allows the ACH funding source to be used regardless of its verification status.\nThis field is returned if it exists in the resource.\n\n*NOTE:* When using `PLAID` to validate a funding source, this field is always set to `true`."
          default: false
        verification_status:
          type: string
          description: "Account verification status.\nThis field is returned if it exists in the resource."
    ach_verification_model:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the ACH funding source is active.
          default: false
        verify_amount1:
          type: number
          description: Verification amount.
        verify_amount2:
          type: number
          description: Verification amount.
    acquirer:
      type: object
      properties:
        institution_country:
          type: string
          description: Country code of the merchant's financial institution.
        institution_id_code:
          type: string
          description: Identifier code of the merchant's financial institution.
        network_international_id:
          type: string
          description: The international network identifier.
        retrieval_reference_number:
          type: string
          description: Retrieval reference number of the merchant's financial institution.
        system_trace_audit_number:
          type: string
          description: System trace audit number of the merchant's financial institution.
      description: Contains information about the merchant's financial institution.
    activation_actions:
      type: object
      properties:
        swap_digital_wallet_tokens_from_card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Moves all digital wallet tokens from the specified card to the new card.\n\nNot relevant when `reissue_pan_from_card_token` is set.\n\nSend a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user."
        terminate_reissued_source_card:
          type: boolean
          description: "If you are reissuing a card, the source card is terminated by default.\nTo prevent the source card from being terminated, set this field to `false`.\n\nOnly relevant when `reissue_pan_from_card_token` is set."
          default: true
      description: "Defines actions to execute when the card is activated.\nThe fields in this object are mutually exclusive."
    address_verification:
      type: object
      properties:
        name:
          type: string
          description: Name of the cardholder.
        postal_code:
          type: string
          description: Postal code.
        street_address:
          type: string
          description: Street address provided by the cardholder.
        zip:
          type: string
          description: United States ZIP code.
      description: Contains address verification information.
    address_verification_model:
      type: object
      properties:
        on_file:
          $ref: '#/components/schemas/avs_information'
        request:
          $ref: '#/components/schemas/avs_information'
        response:
          $ref: '#/components/schemas/response'
      description: 'Contains address verification data consisting of address data entered by the cardholder, address data held by the Marqeta platform, and an assertion by the Marqeta platform as to whether the two sets of data match.'
    address_verification_source:
      type: object
      properties:
        on_file:
          $ref: '#/components/schemas/avs_information'
        response:
          $ref: '#/components/schemas/response'
      description: 'Contains address verification data consisting of address data entered by the cardholder, address data held by the Marqeta platform, and an assertion by the Marqeta platform as to whether the two sets of data match.'
    airline:
      type: object
      properties:
        depart_date:
          type: string
          description: The date and time of departure.
          format: date-time
        origination_city:
          type: string
          description: The city where the flight originates.
        passenger_name:
          type: string
          description: The name of the passenger.
      description: Contains information about airline-related transactions.
    android_push_tokenize_request_data:
      type: object
      properties:
        display_name:
          type: string
          description: "Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).\n`Visa 5678`, for example."
        last_digits:
          type: string
          description: Last four digits of the primary account number of the physical or virtual card.
        network:
          type: string
          description: Specifies the card network of the physical or virtual card.
        opaque_payment_card:
          type: string
          description: Encrypted data field created by the issuer and passed to Google Wallet during the push provisioning process.
        token_service_provider:
          type: string
          description: Specifies the network that provides the digital wallet token service.
        user_address:
          $ref: '#/components/schemas/AndroidPushTokenRequestAddress'
      description: Contains details about a card tokenization push request.
    ani_information:
      type: object
      properties:
        first_name:
          type: string
          description: First or given name of the cardholder.
        last_name:
          type: string
          description: Last or family name of the cardholder.
        middle_name:
          type: string
          description: Middle name of the cardholder.
      description: Contains the name of the cardholder for account name verification.
    ani_information_1:
      type: object
      properties:
        first_name:
          type: string
          description: First or given name of the cardholder.
        last_name:
          type: string
          description: Last or family name of the cardholder.
        middle_name:
          type: string
          description: Middle name of the cardholder.
      description: Contains account name verification data used to make JIT Funding decisions.
    atc_information:
      type: object
      properties:
        atc_discrepancy_indicator:
          type: string
        atc_discrepancy_value:
          type: number
        atc_value:
          type: number
    auth_control_exempt_mids_request:
      required:
        - name
      type: object
      properties:
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          type: string
          description: 'Date and time when the exception ends, in UTC.'
          format: date-time
        merchant_group_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the merchant group to be exempted.\nThis field is required if there is no entry in the `mid` field.\nPass either this field or the `mid` field, not both.\n\nFor information about merchant groups, see <</core-api/merchant-groups, Merchant Groups>>."
        mid:
          maxLength: 36
          minLength: 1
          type: string
          description: "Merchant to be exempted.\nThis field is required if there is no entry in the `merchant_group_token` field.\nUse either this field or the `merchant_group_token` field, not both."
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: Name of the merchant identifier authorization control exemption.
        start_time:
          type: string
          description: 'Date and time when the exception starts, in UTC.'
          format: date-time
        token:
          type: string
          description: "Unique identifier of the merchant identifier authorization control exemption.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    auth_control_exempt_mids_response:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          description: "Indicates whether the merchant identifier authorization control exception is active.\n\nThis field is returned if it exists in the resource."
          default: false
        association:
          $ref: '#/components/schemas/spend_control_association'
        created:
          type: string
          description: "Date and time when the resource was created, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        end_time:
          type: string
          description: "Date and time when the exception ends, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        last_updated:
          type: string
          description: "Date and time when the resource was last updated, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        merchant_group_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the merchant group to be exempted.\n\nThis field is returned if it exists in the resource."
        mid:
          maxLength: 36
          minLength: 1
          type: string
          description: "Merchant to be exempted.\n\nThis field is returned if it exists in the resource."
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: Name of the merchant identifier authorization control exemption.
        start_time:
          type: string
          description: "Date and time when the exception starts, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        token:
          type: string
          description: "Unique identifier of the merchant identifier authorization control exemption.\n\nThis field is always returned."
    auth_control_exempt_mids_update_request:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the merchant identifier authorization control exception is active.
          default: false
    auth_control_merchant_scope:
      type: object
      properties:
        mcc:
          maxLength: 4
          minLength: 1
          type: string
          description: "Merchant Category Code (MCC).\nIdentifies the type of goods or services provided by the merchant.\n\nEnter a value to control access to a particular type of product or service.\n\nSee <</developer-guides/controlling-spending, Controlling Spending>> for links to more information about merchant category codes."
        mcc_group:
          maxLength: 36
          minLength: 1
          type: string
          description: "Token identifying a group of MCCs.\n\nEnter a value to control access to a group of product or service types."
        merchant_group_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of a merchant group.\n\nEnter a value to control access to a group of merchants."
        mid:
          maxLength: 36
          minLength: 1
          type: string
          description: "Merchant identifier (MID).\nIdentifies a specific merchant.\n\nEnter a value to control access to a particular merchant."
      description: "Defines the group of merchants to which the authorization control applies.\nThis object is required if the `association` object is not included in your request.\nYour request can include both the `merchant_scope` and `association` objects.\n\nIf you include this object in your request, you must populate one or more of its fields.\nIf no fields are populated, the authorization control applies to all merchants."
    auth_control_request:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the authorization control is active.
          default: true
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          type: string
          description: 'Date and time when the exception ends, in UTC.'
          format: date-time
        merchant_scope:
          $ref: '#/components/schemas/auth_control_merchant_scope'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: Name of the authorization control.
        start_time:
          type: string
          description: 'Date and time when the exception goes into effect, in UTC.'
          format: date-time
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the authorization control.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    auth_control_response:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          description: "Indicates whether the authorization control is active.\n\nThis field is returned if it exists in the resource."
          default: true
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          type: string
          description: "Date and time when the exception ends, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        merchant_scope:
          $ref: '#/components/schemas/auth_control_merchant_scope'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: Name of the authorization control.
        start_time:
          type: string
          description: "Date and time when the exception goes into effect, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the authorization control.\n\nThis field is returned if it exists in the resource."
    auth_control_update_request:
      required:
        - token
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the authorization control is active.
          default: true
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          type: string
          description: 'Date and time when the exception ends, in UTC.'
          format: date-time
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: Name of the authorization control.
        start_time:
          type: string
          description: 'Date and time when the exception goes into effect, in UTC.'
          format: date-time
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the authorization control.
    auth_request_model:
      required:
        - amount
        - card_token
        - mid
      type: object
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_options:
          $ref: '#/components/schemas/card_options'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        cash_back_amount:
          type: number
        is_pre_auth:
          type: boolean
          default: false
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
        network_metadata:
          $ref: '#/components/schemas/network_metadata'
        pin:
          maxLength: 50
          minLength: 1
          type: string
        transaction_options:
          $ref: '#/components/schemas/transaction_options'
        webhook:
          $ref: '#/components/schemas/webhook'
    authorization_advice_model:
      required:
        - amount
        - original_transaction_token
      type: object
      properties:
        amount:
          type: number
        network_fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        transaction_options:
          $ref: '#/components/schemas/transaction_options'
        webhook:
          $ref: '#/components/schemas/webhook'
    authorization_controls:
      type: object
      properties:
        hold_expiration_days:
          type: integer
          description: Specifies the number of days after which an authorization associated with this group expires.
          format: int32
          default: 7
        hold_increase:
          $ref: '#/components/schemas/hold_increase'
      description: "Controls the expiration of authorizations and automatic increases to the authorization amount for MCCs specified in this group.\n\nBy default, these authorization controls apply program-wide, meaning that they apply to every card in your program.\nYou can, however, exempt cards associated with any particular card product by setting that card product's `allow_mcc_group_authorization_controls` field to `false`."
    auto_reload_association:
      type: object
      properties:
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business for which the auto reload is configured.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        card_product_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the card product for which the auto reload is configured.\n\nSend a `GET` request to `/cardproducts` to retrieve card product tokens."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user for which the auto reload is configured.\n\nSend a `GET` request to `/users` to retrieve user tokens."
      description: "Specifies the scope of the auto reload.\n\nInput no more than one field.\nIf no value is supplied, the auto reload applies at the program level."
    auto_reload_model:
      required:
        - currency_code
        - order_scope
      type: object
      properties:
        active:
          type: boolean
          description: "Specifies whether the auto reload is active.\n\nOnly one auto reload per level, per object, can be active."
          default: true
        association:
          $ref: '#/components/schemas/auto_reload_association'
        currency_code:
          type: string
          description: 'Three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO 4217 currency code, window="_blank"].'
        funding_source_address_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source address to use for this auto reload.\n\nIf your funding source is an ACH account, then a `funding_source_address_token` is not required.\nIf your funding source is a payment card, you must have at least one funding source address in order to create a GPA order.\n\nSend a `GET` request to `/fundingsources/addresses/user/{user_token}` to retrieve address tokens for a user.\n\nSend a `GET` request to `/fundingsources/addresses/business/{business_token}` to retrieve address tokens for a business."
        funding_source_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source to use for this auto reload.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve funding source tokens for a user.\n\nSend a `GET` request to `/fundingsources/business/{business_token}` to retrieve funding source tokens for a business."
        order_scope:
          $ref: '#/components/schemas/order_scope'
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the auto reload.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
      description: "Contains information about an auto reload.\nSee <</core-api/auto-reload, Auto Reloads>> for more information.\n\nReturned if an auto reload was executed."
    auto_reload_response_model:
      required:
        - created_time
        - currency_code
        - last_modified_time
        - order_scope
      type: object
      properties:
        active:
          type: boolean
          description: "Specifies whether the auto reload is active.\n\nThis field is returned if it exists in the resource."
          default: true
        association:
          $ref: '#/components/schemas/auto_reload_association'
        created_time:
          type: string
          description: 'Date and time when the auto reload object was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: 'Three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO 4217 currency code, window="_blank"].'
        funding_source_address_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source address to use for this auto reload.\n\nThis field is returned if it exists in the resource."
        funding_source_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source to use for this auto reload.\n\nThis field is returned if it exists in the resource."
        last_modified_time:
          type: string
          description: 'Date and time when the auto reload object was last modified, in UTC.'
          format: date-time
        order_scope:
          $ref: '#/components/schemas/order_scope'
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the auto reload.\n\nThis field is always returned."
    auto_reload_update_model:
      type: object
      properties:
        active:
          type: boolean
          description: "Specifies whether the auto reload is active.\n\nOnly one auto reload per level, per object, can be active."
          default: true
        association:
          $ref: '#/components/schemas/auto_reload_association'
        currency_code:
          type: string
          description: 'Three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO 4217 currency code, window="_blank"].'
        funding_source_address_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source address to use for this auto reload.\n\nIf your funding source is an ACH account, then a `funding_source_address_token` is not required.\nIf your funding source is a payment card, you must have at least one funding source address in order to create a GPA order."
        funding_source_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the funding source to use for this auto reload.
        order_scope:
          $ref: '#/components/schemas/order_scope'
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: The token in the path parameter takes precedence over the `token` body field.
    available:
      required:
        - amount
        - uses
      type: object
      properties:
        amount:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: Total amount of spend remaining in the velocity control.
        days_remaining:
          type: integer
          description: Number of days remaining in the velocity control time window.
          format: int32
        uses:
          type: integer
          description: Number of uses remaining in the velocity control.
          format: int32
          default: 0
      description: "Specifies the available balances of the velocity controls associated with a user.\n\nThis object is not returned if the velocity control window is `TRANSACTION`, because available balances do not apply to single-transaction velocity windows."
    avs_control_options:
      type: object
      properties:
        decline_on_address_number_mismatch:
          type: boolean
          description: "Set to `true` to decline account verification or authorization messages whose address number does not match the address number on file.\n\nSet to `false` to not decline account verification or authorization messages whose address number does not match the address number on file.\n\nThis field is functional only if `validate = true`."
          default: false
        decline_on_postal_code_mismatch:
          type: boolean
          description: "Set to `true` to decline account verification or authorization messages whose postal code does not match the postal code on file.\n\nSet to `false` to not decline account verification or authorization messages whose postal code does not match the postal code on file.\n\nThis field is functional only if `validate = true`."
          default: true
        validate:
          type: boolean
          description: "Set to `true` to require validation of account verification or authorization messages.\n\nSet to `false` to forgo validation and approve all account verification and authorization messages."
          default: true
    avs_controls:
      type: object
      properties:
        auth_messages:
          $ref: '#/components/schemas/avs_control_options'
        av_messages:
          $ref: '#/components/schemas/avs_control_options'
    avs_information:
      type: object
      properties:
        postal_code:
          type: string
          description: Postal code of the address.
        street_address:
          type: string
          description: Street name and number of the address.
        zip:
          type: string
          description: United States ZIP code of the address.
      description: Contains address verification information.
    balance_inquiry_request_model:
      required:
        - account_type
        - card_acceptor
        - card_token
        - mid
      type: object
      properties:
        account_type:
          enum:
            - checking
            - savings
            - credit
          type: string
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
        pin:
          maxLength: 15
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
    bank_account_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - account_suffix
            - account_type
            - name_on_account
            - routing_number
            - verification_status
          type: object
          properties:
            account_suffix:
              type: string
            account_type:
              type: string
            business_token:
              type: string
              description: Required if 'user_token' is null
            name_on_account:
              type: string
            routing_number:
              type: string
            user_token:
              type: string
              description: Required if 'business_token' is null
            verification_status:
              type: string
    bank_transfer_request_model:
      required:
        - amount
        - funding_source_token
        - type
      type: object
      properties:
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: Amount to push or pull.
        channel:
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
          description: default = API
        created_by:
          maxLength: 255
          minLength: 0
          type: string
        currency_code:
          type: string
          description: Currency of the push or pull.
        funding_source_token:
          maxLength: 36
          minLength: 0
          type: string
          description: ACH funding source token for the external account.
        memo:
          type: string
          description: Additional text describing the ACH transfer.
        standard_entry_class_code:
          enum:
            - WEB
            - PPD
            - CCD
          type: string
          description: "Three-letter code identifying the type of entry.\n\n* *WEB* — An internet-initiated entry\n* *PPD* — Prearranged Payment and Deposit\n* *CCD* — Cash Concentration and Disbursement"
        statement_descriptor:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Description of the transaction, as it will appear on the receiver''s bank statement.'
        token:
          maxLength: 36
          minLength: 0
          type: string
          description: Unique identifier of the ACH transfer to retrieve.
        transfer_speed:
          enum:
            - STANDARD
            - SAME_DAY
          type: string
          description: "Specifies how quickly to initiate the ACH transfer.\n\n*NOTE:* Same-day transfers are limited to a maximum amount of $100,000."
        type:
          enum:
            - PUSH
            - PULL
          type: string
          description: Specifies whether the ACH transfer is a push (credit) or pull (debit).
    bank_transfer_response_model:
      required:
        - amount
        - funding_source_token
        - type
      type: object
      properties:
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: Amount to push or pull.
        batch_number:
          type: string
          description: 'Field required in older versions of the API, but no longer used.'
        channel:
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
          description: default = API
        created_by:
          maxLength: 255
          minLength: 0
          type: string
        created_time:
          type: string
          description: 'Date and time when the ACH transfer was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: 'Valid alpha-3 link:https://www.iso.org/iso-4217-currency-codes.html[ISO 4217 currency code, window="_blank"]'
        funding_source_token:
          maxLength: 36
          minLength: 0
          type: string
          description: ACH funding source token for the external account.
        last_modified_time:
          type: string
          description: 'Date and time when the ACH transfer was last modified, in UTC.'
          format: date-time
        memo:
          type: string
          description: Additional text describing the ACH transfer.
        return_code:
          type: string
          description: "Standardized ACH return code for a returned transaction, generally sent by the RDFI.\n\nTransactions can be returned for any of the reasons listed in the <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA ACH return codes table>> of the ACH Origination Guide."
        return_reason:
          type: string
          description: 'Human-readable description correlating to the `return_code`, such as `Insufficient funds`, if a return code is present in the response.'
        standard_entry_class_code:
          enum:
            - WEB
            - PPD
            - CCD
          type: string
          description: "Three-letter code identifying the type of entry.\n\n* *WEB* — An internet-initiated entry\n* *PPD* — Prearranged Payment and Deposit\n* *CCD* — Cash Concentration and Disbursement"
        statement_descriptor:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Description of the transaction, as it will appear on the receiver''s bank statement.'
        status:
          enum:
            - INITIATED
            - PENDING
            - PROCESSING
            - SUBMITTED
            - RETURNED
            - COMPLETED
            - ERROR
            - CANCELLED
            - REVERSAL_PEND
            - REVERSAL_COMP
            - REVERSAL_DECL
          type: string
          description: New state of the ACH transfer.
        token:
          maxLength: 36
          minLength: 0
          type: string
          description: Unique identifier of the ACH transfer to retrieve.
        transfer_speed:
          enum:
            - STANDARD
            - SAME_DAY
          type: string
          description: "Specifies how quickly to initiate the ACH transfer.\n\n*NOTE:* Same-day transfers are limited to a maximum amount of $100,000."
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/bank_transfer_transition_response_model'
          description: Array of ACH transfer transition objects.
        type:
          enum:
            - PUSH
            - PULL
          type: string
          description: Specifies whether the ACH transfer is a push (credit) or pull (debit).
    bank_transfer_transition_request_model:
      required:
        - bank_transfer_token
        - channel
        - status
      type: object
      properties:
        amount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        bank_transfer_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Token of the ACH transfer you want to transition.
        batch_number:
          type: string
          description: 'Field required in older versions of the API, but no longer used.'
        channel:
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
          description: Mechanism by which the transaction was initiated.
        effective_date:
          type: string
          format: date-time
        program_reserve_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Not currently used.
        reason:
          type: string
          description: Description of why the ACH transfer status was updated.
        return_code:
          type: string
          description: "Standardized ACH return code for a returned transaction, generally sent by the RDFI.\n\nTransactions can be returned for any of the reasons listed in the <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA ACH return codes table>> of the ACH Origination Guide."
        reversal_after_45_days:
          type: boolean
        status:
          enum:
            - PENDING
            - PROCESSING
            - SUBMITTED
            - RETURNED
            - COMPLETED
            - CANCELLED
            - REVERSAL_PEND
            - REVERSAL_COMP
          type: string
          description: "New state of the ACH transfer.\n\n*NOTE:* In production environments, the only value to which you are allowed to transition an ACH transfer is `CANCELLED`."
        token:
          maxLength: 36
          minLength: 0
          type: string
          description: Unique identifier of the bank transfer transition request.
    bank_transfer_transition_response_model:
      required:
        - bank_transfer_token
        - channel
        - status
      type: object
      properties:
        amount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        bank_transfer_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Unique identifier of the ACH transfer being transitioned.
        batch_number:
          type: string
          description: 'Field required in older versions of the API, but no longer used.'
        channel:
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
          description: Mechanism by which the transaction was initiated.
        created_time:
          type: string
          description: 'Date and time when the ACH transfer was created, in UTC.'
          format: date-time
        effective_date:
          type: string
          format: date-time
        last_modified_time:
          type: string
          description: Date and time when the ACH transfer was last modified.
          format: date-time
        program_reserve_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Not currently used.
        reason:
          type: string
          description: "Explanation of why the transition is being made, for example \"Created by POST call on API\".\nReturned if this information was supplied when the transition was originally created."
        return_code:
          type: string
          description: "Standardized ACH return code for a returned transaction, generally sent by the RDFI.\n\nTransactions can be returned for any of the reasons listed in the <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA ACH return codes table>> of the ACH Origination Guide."
        return_reason:
          type: string
          description: 'Human-readable description correlating to the `return_code`, such as `Insufficient funds`, if a return code is present in the response.'
        reversal_after_45_days:
          type: boolean
        status:
          enum:
            - PENDING
            - PROCESSING
            - SUBMITTED
            - RETURNED
            - COMPLETED
            - CANCELLED
            - REVERSAL_PEND
            - REVERSAL_COMP
          type: string
          description: New state of the ACH transfer.
        token:
          maxLength: 36
          minLength: 0
          type: string
          description: Unique identifier of the bank transfer transition.
        transaction_jit_token:
          type: string
          description: Transaction token for JIT-related ledger entries for the ACH transfer.
        transaction_token:
          type: string
          description: Transaction token for *non*-JIT-related ledger entries for the ACH transfer.
    base_ach_request_model:
      required:
        - account_number
        - account_type
        - name_on_account
        - routing_number
      type: object
      properties:
        account_number:
          type: string
          description: ACH account number.
        account_type:
          enum:
            - checking
            - savings
            - corporate
            - loan
          type: string
          description: Type of account.
        bank_name:
          type: string
          description: Name of the bank holding the account.
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        name_on_account:
          maxLength: 50
          minLength: 1
          type: string
          description: Name on the ACH account.
        routing_number:
          type: string
          description: Routing number for the ACH account.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source.\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        verification_notes:
          type: string
          description: "Free-form text field for holding notes about verification.\nThis field is returned only if `verification_override = true`."
        verification_override:
          type: boolean
          description: "Allows the ACH funding source to be used, regardless of its verification status.\nSet this field to `true` if you can attest that you have verified the account on your own and that it will not be returned by the Federal Reserve.\n\n*NOTE:* When using `PLAID` to validate a funding source, this field is always set to `true`."
          default: false
    base_ach_response_model:
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - last_modified_time
        - name_on_account
        - token
      type: object
      properties:
        account_suffix:
          type: string
          description: ACH account identifier appended to the bank account number.
        account_type:
          type: string
          description: Type of account.
        active:
          type: boolean
          description: Specifies whether the account is active.
          default: false
        bank_name:
          type: string
          description: "Name of the bank holding the account.\nThis field is returned if it exists in the resource."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        date_sent_for_verification:
          type: string
          description: "Date and time in UTC when either the request for account validation was sent to the third-party partner, or when the funding source was verified by microdeposits.\n`2022-02-26T20:03:05Z`, for example.\n\nThis field is returned if it exists in the resource."
          format: date-time
        date_verified:
          type: string
          description: "Date and time when the account was verified, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        name_on_account:
          type: string
          description: Name on the ACH account.
        partner:
          type: string
        partner_account_link_reference_token:
          type: string
        token:
          type: string
          description: Unique identifier of the funding source.
        verification_notes:
          type: string
          description: "Free-form text field for holding notes about verification.\nThis field is returned only if `verification_override = true`."
        verification_override:
          type: boolean
          description: "Allows the ACH funding source to be used regardless of its verification status.\nThis field is returned if it exists in the resource.\n\n*NOTE:* When using `PLAID` to validate a funding source, this field is always set to `true`."
          default: false
        verification_status:
          type: string
          description: "Account verification status.\nThis field is returned if it exists in the resource."
    beneficial_owner_request:
      type: object
      properties:
        dob:
          type: string
          description: Date of birth of the beneficial owner.
          format: date-time
        first_name:
          type: string
          description: First name of the beneficial owner.
        home:
          $ref: '#/components/schemas/AddressRequestModel'
        last_name:
          type: string
          description: Last name of the beneficial owner.
        middle_name:
          type: string
          description: Middle name of the beneficial owner.
        phone:
          type: string
          description: Ten-digit phone number of the beneficial owner.
        ssn:
          type: string
          description: Nine-digit Social Security Number (SSN) of the beneficial owner.
        title:
          type: string
          description: Title of the beneficial owner.
      description: "Contains information about the beneficial owner of the business, if applicable.\n\nThis object is required for KYC verification in the United States if the business is private and has a beneficial owner.\nThis object is not required for publicly held businesses.\n\nDo not include information about the proprietor or business officer in a `beneficial_owner` object.\nIf the proprietor or officer of the business is also a beneficial owner, you must indicate that in the `proprietor_is_beneficial_owner` field in the body field details of the business."
    beneficial_owner_response:
      type: object
      properties:
        first_name:
          type: string
          description: "First name of the beneficial owner.\n\nThis field is returned if it exists in the resource."
        getdob:
          type: string
          description: "Date of birth of the beneficial owner.\n\nThis field is returned if it exists in the resource."
          format: date-time
        home:
          $ref: '#/components/schemas/AddressResponseModel'
        last_name:
          type: string
          description: "Last name of the beneficial owner.\n\nThis field is returned if it exists in the resource."
        middle_name:
          type: string
          description: "Middle name of the beneficial owner.\n\nThis field is returned if it exists in the resource."
        phone:
          type: string
          description: "Ten-digit phone number of the beneficial owner.\n\nThis field is returned if it exists in the resource."
        title:
          type: string
          description: "Title of the beneficial owner.\n\nThis field is returned if it exists in the resource."
      description: 'Contains information about the beneficial owner of the business, if applicable.'
    bulk_issuance_request:
      required:
        - card_allocation
        - card_product_token
        - fulfillment
        - token
      type: object
      properties:
        card_allocation:
          maximum: 50000
          type: integer
          description: Number of cards in the order.
          format: int32
        card_product_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Specifies the card product from which to create your cards.
        expedite:
          type: boolean
          description: "Set to `true` to request expedited processing of the order by your card fulfillment provider.\n\nThis expedited service is available for cards fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window=\"_blank\"], link:http://www.idemia.com[IDEMIA, window=\"_blank\"], and link:https://www.arroweye.com/[Arroweye Solutions, window=\"_blank\"].\n\n*NOTE:* Contact your Marqeta representative for information regarding the cost of expedited service."
          default: false
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset'
        fulfillment:
          $ref: '#/components/schemas/FulfillmentRequest'
        name_line_1_numeric_postfix:
          type: boolean
          description: 'If set to `true`, the unique numeric postfix appended to each card''s token field is also appended to the card''s `fulfillment.card_personalization.text.name_line_1.value` field.'
          default: false
        name_line_1_random_postfix:
          type: boolean
          description: 'If set to `true`, the unique random postfix appended to each card''s token field is also appended to the card''s `fulfillment.card_personalization.text.name_line_1.value` field.'
          default: false
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "If you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_association:
          $ref: '#/components/schemas/user_association'
    bulk_issuance_response:
      required:
        - card_allocation
        - card_product_token
        - fulfillment
        - token
      type: object
      properties:
        card_allocation:
          maximum: 50000
          type: integer
          description: Number of cards in the order.
          format: int32
        card_fulfillment_time:
          type: string
          description: "Date and time when the bulk card order was fulfilled, in UTC.\n\nThis field is included if your bulk card order has been processed."
          format: date-time
        card_product_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Specifies the card product from which the cards are created.
        cards_processed:
          type: integer
          description: "Number of cards processed in the bulk card order.\n\nThis field is returned if it exists in the resource."
          format: int32
        created_time:
          type: string
          description: "Date and time when the resource was created, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        expedite:
          type: boolean
          description: "Indicates if expedited processing of this bulk card order was requested.\n\nThis field is returned if it exists in the resource."
          default: false
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset'
        fulfillment:
          $ref: '#/components/schemas/FulfillmentResponse'
        name_line1_end_index:
          type: integer
          description: "This field is included if your bulk card order has been processed.\n\nYou can use the `name_line1_start_index` and `name_line1_end_index` fields to identify the cards and users associated with the order.\nFor example, if the start index is \"1\" and the end index is \"3\", the card tokens are \"card-1\", \"card-2\", and \"card-3\", and the user tokens are \"user-1\", \"user-2\", and \"user-3\".\n\nSee <</core-api/bulk-card-orders#create_bulk_card_order, Create bulk card order>> for more information about the automatic generation and naming of cards and users."
          format: int32
        name_line1_start_index:
          type: integer
          description: "This field is included if your bulk card order has been processed.\n\nYou can use the `name_line1_start_index` and `name_line1_end_index` fields to identify the cards and users associated with the order.\nFor example, if the start index is \"1\" and the end index is \"3\", the card tokens are \"card-1\", \"card-2\", and \"card-3\", and the user tokens are \"user-1\", \"user-2\", and \"user-3\".\n\nSee <</core-api/bulk-card-orders#create_bulk_card_order, Create bulk card order>> for more information about the automatic generation and naming of cards and users."
          format: int32
        name_line_1_numeric_postfix:
          type: boolean
          description: 'If set to `true`, the unique numeric postfix appended to each card''s token field is also appended to the card''s `fulfillment.card_personalization.text.name_line_1.value` field.'
          default: false
        name_line_1_random_postfix:
          type: boolean
          description: "If set to `true`, the unique random postfix appended to each card's token field is also appended to the card's `fulfillment.card_personalization.text.name_line_1.value` field.\n\nThis field is returned if it exists in the resource."
          default: false
        provider_ship_date:
          type: string
          description: "Date and time when the card provider shipped the bulk card order, in UTC.\n\nThis field is included if your bulk card order has shipped."
          format: date-time
        provider_shipping_method:
          type: string
          description: "Shipping method used by the card provider.\n`United_Postal_Service`, for example.\n\nThis field is included if your bulk card order has shipped."
        provider_tracking_number:
          type: string
          description: "A tracking number is included only if your card provider is Arroweye Solutions.\n\nThis field is included if your bulk card order has shipped."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the bulk card order.
        user_association:
          $ref: '#/components/schemas/user_association'
    business_card_holder_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Associates the specified account holder group with the business.\n\nThis field is returned if it exists in the resource."
        active:
          type: boolean
          description: "Specifies if the business is in the `ACTIVE` state on the Marqeta platform.\n\nThis field is returned if it exists in the resource."
          default: false
        attestation_consent:
          type: boolean
          description: "Indicates that the attester agrees that the information provided is correct and truthful.\n\nThis field is returned if it exists in the resource."
          default: false
        attestation_date:
          type: string
          description: "Timestamp of the attestation.\n\nThis field is returned if it exists in the resource."
          format: date-time
        attester_name:
          maxLength: 64
          minLength: 0
          type: string
          description: "Name of the attester for KYC verification.\n\nThis field is returned if it exists in the resource."
        attester_title:
          maxLength: 64
          minLength: 0
          type: string
          description: "Title of the attester for KYC verification.\n\nThis field is returned if it exists in the resource."
        authentication:
          $ref: '#/components/schemas/Authentication'
        beneficial_owner1:
          $ref: '#/components/schemas/beneficial_owner_response'
        beneficial_owner2:
          $ref: '#/components/schemas/beneficial_owner_response'
        beneficial_owner3:
          $ref: '#/components/schemas/beneficial_owner_response'
        beneficial_owner4:
          $ref: '#/components/schemas/beneficial_owner_response'
        business_name_dba:
          maxLength: 255
          minLength: 0
          type: string
          description: "Fictitious business name (\"Doing Business As\" or DBA).\n\nThis field is returned if it exists in the resource."
        business_name_legal:
          maxLength: 255
          minLength: 0
          type: string
          description: "Legal name of the business.\n\nThis field is returned if it exists in the resource."
        business_type:
          maxLength: 255
          minLength: 0
          type: string
          description: "Indicates the type of business, for example B2B (business-to-business) or B2C (business-to-consumer).\n\nThis field is returned if it exists in the resource."
        created_time:
          type: string
          description: 'Date and time when the business was created, in UTC.'
          format: date-time
        date_established:
          type: string
          description: "Date and time when the business was established.\n\nThis field is returned if it exists in the resource."
          format: date-time
        duns_number:
          maxLength: 255
          minLength: 0
          type: string
          description: "Data Universal Numbering System (DUNS) number of the business.\n\nThis field is returned if it exists in the resource."
        general_business_description:
          maxLength: 255
          minLength: 0
          type: string
          description: "General description of the business.\n\nThis field is returned if it exists in the resource."
        history:
          maxLength: 255
          minLength: 0
          type: string
          description: "History of the business.\n\nThis field is returned if it exists in the resource."
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationResponseModel'
          description: "One or more objects containing identifications associated with the business.\n\nObjects are returned if they exist in the resource."
        in_current_location_since:
          type: string
          description: "Date on which the business office opened in its current location.\n\nThis field is returned if it exists in the resource."
          format: date-time
        incorporation:
          $ref: '#/components/schemas/business_incorporation_response'
        international_office_locations:
          maxLength: 255
          minLength: 0
          type: string
          description: "Locations of the business' offices outside the US.\n\nThis field is returned if it exists in the resource."
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
          description: "IP address of the business.\n\nThis field is returned if it exists in the resource."
        last_modified_time:
          type: string
          description: 'Date and time when the business was last modified, in UTC.'
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
          description: "Associates any additional metadata you provide with the business.\n\nMetadata is returned if it exists in the resource."
        notes:
          maxLength: 255
          minLength: 0
          type: string
          description: "Any additional information pertaining to the business.\n\nThis field is returned if it exists in the resource."
        office_location:
          $ref: '#/components/schemas/AddressResponseModel'
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: "Password for the business account on the Marqeta platform.\n\nThis field is returned if it exists in the resource."
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: "10-digit telephone number of the business.\n\nThis field is returned if it exists in the resource."
        primary_contact:
          $ref: '#/components/schemas/PrimaryContactInfoModel'
        proprietor_is_beneficial_owner:
          type: boolean
          description: "Indicates that the proprietor or officer of the business is also a beneficial owner.\n\nThis field is returned if it exists in the resource."
          default: false
        proprietor_or_officer:
          $ref: '#/components/schemas/business_proprietor_response'
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
          description: "Specifies the state of the business on the Marqeta platform.\n\nThis field is returned if it exists in the resource."
        taxpayer_id:
          maxLength: 255
          minLength: 0
          type: string
          description: "Taxpayer identifier of the business.\n\nThis field is returned if it exists in the resource."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business resource.\n\nThis field is always returned."
        website:
          maxLength: 255
          minLength: 0
          type: string
          description: "URL of the business' website.\n\nThis field is returned if it exists in the resource."
    business_card_holder_update:
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Associates the specified account holder group with the business.
        active:
          type: boolean
          description: Specifies if the business is in the `ACTIVE` state on the Marqeta platform.
          default: true
        attestation_consent:
          type: boolean
          description: "Indicates that the attester agrees that the information provided is correct and truthful.\n\nThis field is required for KYC verification (US-based accounts only)."
          default: false
        attestation_date:
          type: string
          description: "Timestamp of the attestation.\n\nThis field is required for KYC verification (US-based accounts only)."
          format: date-time
        attester_name:
          maxLength: 64
          minLength: 0
          type: string
          description: "Name of the attester for KYC verification.\n\nThis field is required for KYC verification (US-based accounts only)."
        attester_title:
          maxLength: 64
          minLength: 0
          type: string
          description: Title of the attester for KYC verification.
        beneficial_owner1:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner2:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner3:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner4:
          $ref: '#/components/schemas/beneficial_owner_request'
        business_name_dba:
          maxLength: 255
          minLength: 0
          type: string
          description: "Fictitious business name (\"Doing Business As\" or DBA).\n\nThis field is required for KYC verification (US-based accounts only).\nIf your business does not use a fictitious business name, enter your legal business name again in this field."
        business_name_legal:
          maxLength: 255
          minLength: 0
          type: string
          description: "Legal name of business.\n\nThis field is required for KYC verification (US-based accounts only)."
        business_type:
          maxLength: 255
          minLength: 0
          type: string
          description: 'Indicates the type of business, for example business-to-business (B2B) or business-to-consumer (B2C).'
        date_established:
          type: string
          description: Date when the business was established.
          format: date-time
        duns_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Data Universal Numbering System (DUNS) number of the business.
        general_business_description:
          maxLength: 255
          minLength: 0
          type: string
          description: General description of the business.
        history:
          maxLength: 255
          minLength: 0
          type: string
          description: History of the business.
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          description: One or more objects containing identifications associated with the business.
        in_current_location_since:
          type: string
          description: Date on which the business office opened in its current location.
          format: date-time
        incorporation:
          $ref: '#/components/schemas/business_incorporation'
        international_office_locations:
          maxLength: 255
          minLength: 0
          type: string
          description: Locations of the business' offices outside the United States.
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
          description: IP address of the business.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the business.
        notes:
          maxLength: 255
          minLength: 0
          type: string
          description: Any additional information pertaining to the business.
        office_location:
          $ref: '#/components/schemas/AddressRequestModel'
        password:
          maxLength: 255
          minLength: 0
          type: string
          description: Password for the business account on the Marqeta platform.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: 10-digit telephone number of business.
        primary_contact:
          $ref: '#/components/schemas/PrimaryContactInfoModel'
        proprietor_is_beneficial_owner:
          type: boolean
          description: "Indicates that the proprietor or officer of the business is also a beneficial owner.\n\nThis field is required for KYC verification in the United States if the business proprietor or officer is also a beneficial owner.\nIf the proprietor or business officer is a beneficial owner, use this field to indicate their beneficial ownership.\nDo not include information about the proprietor or business officer in a `beneficial_owner` object."
          default: false
        proprietor_or_officer:
          $ref: '#/components/schemas/business_proprietor'
        taxpayer_id:
          maxLength: 255
          minLength: 0
          type: string
          description: Taxpayer identifier of the business.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        website:
          maxLength: 255
          minLength: 0
          type: string
          description: URL of the business' website.
    business_cardholder:
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Existing account holder group token that associates the specified account holder group with the business.\nSend a `GET` request to `/accountholdergroups` to retrieve account holder group tokens."
        active:
          type: boolean
          description: Specifies if the business is in the `ACTIVE` state on the Marqeta platform.
          default: true
        attestation_consent:
          type: boolean
          description: "Indicates that the attester agrees that the information provided is correct and truthful.\n\nThis field is required for KYC verification (US-based accounts only)."
          default: false
        attestation_date:
          type: string
          description: "Timestamp of the attestation.\n\nThis field is required for KYC verification (US-based accounts only)."
          format: date-time
        attester_name:
          maxLength: 64
          minLength: 0
          type: string
          description: "Name of the attester for KYC verification.\n\nThis field is required for KYC verification (US-based accounts only)."
        attester_title:
          maxLength: 64
          minLength: 0
          type: string
          description: Title of the attester for KYC verification.
        beneficial_owner1:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner2:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner3:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner4:
          $ref: '#/components/schemas/beneficial_owner_request'
        business_name_dba:
          maxLength: 255
          minLength: 0
          type: string
          description: "Fictitious business name (\"Doing Business As\" or DBA).\n\nThis field is required for KYC verification (US-based accounts only).\nIf your business does not use a fictitious business name, enter your legal business name again in this field."
        business_name_legal:
          maxLength: 255
          minLength: 0
          type: string
          description: "Legal name of business.\n\nThis field is required for KYC verification (US-based accounts only)."
        business_type:
          maxLength: 255
          minLength: 0
          type: string
          description: 'Indicates the type of business, for example B2B (business-to-business) or B2C (business-to-consumer).'
        date_established:
          type: string
          description: Date when the business was established.
          format: date-time
        duns_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Data Universal Numbering System (DUNS) number of the business.
        general_business_description:
          maxLength: 255
          minLength: 0
          type: string
          description: General description of the business.
        history:
          maxLength: 255
          minLength: 0
          type: string
          description: History of the business.
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          description: One or more objects containing identifications associated with the business.
        in_current_location_since:
          type: string
          description: Date on which the business office opened in its current location.
          format: date-time
        incorporation:
          $ref: '#/components/schemas/business_incorporation'
        international_office_locations:
          maxLength: 255
          minLength: 0
          type: string
          description: Locations of the business' offices outside the US.
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
          description: IP address of the business.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the business.
        notes:
          maxLength: 255
          minLength: 0
          type: string
          description: Any additional information pertaining to the business.
        office_location:
          $ref: '#/components/schemas/AddressRequestModel'
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: Password for the business account on the Marqeta platform.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: 10-digit telephone number of business.
        primary_contact:
          $ref: '#/components/schemas/PrimaryContactInfoModel'
        proprietor_is_beneficial_owner:
          type: boolean
          description: "Indicates that the proprietor or officer of the business is also a beneficial owner.\n\nThis field is required for KYC verification if the business proprietor or officer is also a beneficial owner."
          default: false
        proprietor_or_officer:
          $ref: '#/components/schemas/business_proprietor'
        taxpayer_id:
          maxLength: 255
          minLength: 0
          type: string
          description: Taxpayer identifier of the business.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business resource.\n\nIf you do not include a token, the system generates one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        website:
          maxLength: 255
          minLength: 0
          type: string
          description: URL of the business' website.
      description: Contains information about a business.
    business_incorporation:
      type: object
      properties:
        address_registered_under:
          $ref: '#/components/schemas/AddressRequestModel'
        incorporation_type:
          maxLength: 255
          minLength: 0
          enum:
            - LLC
            - CORPORATION
            - SOLE_PROPRIETORSHIP
            - PARTNERSHIP
            - COOPERATIVE
            - OTHER
          type: string
          description: "Organizational structure of the business, such as corporation or sole proprietorship.\n\nThis field is required for KYC verification (US-based accounts only)."
        is_public:
          type: boolean
          description: A value of `true` indicates that the business is publicly held.
          default: false
        name_registered_under:
          maxLength: 255
          minLength: 0
          type: string
          description: Name under which the business is registered.
        state_of_incorporation:
          maxLength: 255
          minLength: 0
          type: string
          description: "State where the business is incorporated.\n\nThis field is required for KYC verification (US-based accounts only)."
        stock_symbol:
          maxLength: 255
          minLength: 0
          type: string
          description: Business stock symbol.
      description: "Contains information about the organizational structure of the business.\n\nThis object is required for KYC verification (US-based accounts only)."
    business_incorporation_response:
      type: object
      properties:
        address_registered_under:
          $ref: '#/components/schemas/AddressResponseModel'
        incorporation_type:
          maxLength: 255
          minLength: 0
          enum:
            - LLC
            - CORPORATION
            - SOLE_PROPRIETORSHIP
            - PARTNERSHIP
            - OTHER
          type: string
          description: "Organizational structure of the business (corporation or sole proprietorship, for example).\n\nThis field is returned if it exists in the resource."
        is_public:
          type: boolean
          description: "A value of `true` indicates that the business is publicly held.\n\nThis field is returned if it exists in the resource."
          default: false
        name_registered_under:
          maxLength: 255
          minLength: 0
          type: string
          description: "Name under which the business is registered.\n\nThis field is returned if it exists in the resource."
        state_of_incorporation:
          maxLength: 255
          minLength: 0
          type: string
          description: "State where the business is incorporated.\n\nThis field is returned if it exists in the resource."
        stock_symbol:
          maxLength: 255
          minLength: 0
          type: string
          description: "Stock symbol associated with the business.\n\nThis field is returned if it exists in the resource."
      description: Contains information about the organizational structure of the business.
    business_metadata:
      type: object
      properties:
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the business.
      description: Contains customer-provided information about the business that funded the transaction.
    business_proprietor:
      required:
        - first_name
        - last_name
      type: object
      properties:
        alternative_names:
          type: string
          description: Alternate names of the business proprietor or officer.
        dob:
          type: string
          description: "Business proprietor or officer's date of birth.\n\nThis field is required for KYC verification (US-based accounts only)."
          format: date-time
        email:
          type: string
          description: Email address of the business proprietor or officer.
        first_name:
          type: string
          description: First name of business proprietor or officer.
        home:
          $ref: '#/components/schemas/AddressRequestModel'
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          description: One or more objects containing personal identifications of the business proprietor or officer.
        last_name:
          type: string
          description: Last name of business proprietor or officer.
        middle_name:
          type: string
          description: Middle name of business proprietor or officer.
        phone:
          type: string
          description: Telephone number of the business proprietor or officer.
        ssn:
          type: string
          description: Social Security Number (SSN) of the business proprietor or officer.
        title:
          type: string
          description: Title of business proprietor or officer.
      description: "Contains information about the proprietor or officer of the business.\n\nThis object is required for KYC verification of proprietors or officers of privately held businesses in the United States.\nThis object is not required for publicly held businesses."
    business_proprietor_response:
      type: object
      properties:
        alternative_names:
          type: string
          description: "Alternate names of the business proprietor or officer.\n\nThis field is returned if it exists in the resource."
        dob:
          type: string
          description: "Business proprietor or officer's date of birth.\n\nThis field is returned if it exists in the resource."
          format: date-time
        email:
          type: string
          description: "Email address of the business proprietor or officer.\n\nThis field is returned if it exists in the resource."
        first_name:
          type: string
          description: "First name of the business proprietor or officer.\n\nThis field is returned if it exists in the resource."
        home:
          $ref: '#/components/schemas/AddressResponseModel'
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationResponseModel'
          description: "One or more objects containing personal identifications of the business proprietor or officer.\n\nThis field is returned if it exists in the resource."
        last_name:
          type: string
          description: "Last name of the business proprietor or officer.\n\nThis field is returned if it exists in the resource."
        middle_name:
          type: string
          description: "Middle name of the business proprietor or officer.\n\nThis field is returned if it exists in the resource."
        phone:
          type: string
          description: "Telephone number of the business proprietor or officer.\n\nThis field is returned if it exists in the resource."
        ssn:
          type: string
          description: "Social Security Number (SSN) of the business proprietor or officer.\n\nThis field is returned if it exists in the resource."
        title:
          type: string
          description: "Title of the business proprietor or officer.\n\nThis field is returned if it exists in the resource."
      description: Contains information about the proprietor or officer of the business.
    card_acceptor_model:
      type: object
      properties:
        address:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        country:
          type: string
        customer_service_phone:
          type: string
        ecommerce_security_level_indicator:
          type: string
        mcc:
          maxLength: 5
          minLength: 0
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
        partial_approval_capable:
          type: boolean
          default: false
        phone:
          type: string
        state:
          type: string
        url:
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
    card_holder_address_model:
      required:
        - address_1
        - city
        - country
        - first_name
        - last_name
        - state
      type: object
      properties:
        active:
          type: boolean
          description: Specifies whether the address is active.
          default: true
        address_1:
          maxLength: 255
          minLength: 0
          type: string
          description: Street name and number of the address.
        address_2:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional address information.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business account holder.\nThis token is required if a `user_token` is not specified."
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: City of the address.
        country:
          maxLength: 40
          minLength: 1
          type: string
          description: Country of the address.
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: First name or given name of the account holder.
        is_default_address:
          type: boolean
          description: "A value of `true` specifies that this address is the default address used by the account holder's funding source.\nIf this is the account holder's only address, it is used as the default regardless of this field's setting."
          default: false
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Last name or family name of the account holder.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: Telephone number of the account holder.
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal code of the address.
        state:
          maxLength: 2
          minLength: 0
          type: string
          description: "Two-character state, province, or territorial abbreviation.\n\nFor a complete list of valid state and province abbreviations, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the address.\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user account holder.\nThis token is required if a `business_token` is not specified."
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: "United States ZIP code.\nThis field is required if `postal_code` is not specified."
    card_holder_address_update_model:
      type: object
      properties:
        active:
          type: boolean
          description: Specifies whether the address is active.
          default: true
        address_1:
          maxLength: 255
          minLength: 0
          type: string
          description: Street name and number of the address.
        address_2:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional address information.
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: City of the address.
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: Country of the address.
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: First name or given name of the account holder.
        is_default_address:
          type: boolean
          description: "A value of `true` specifies that this address is the default address used by the account holder's funding source.\nIf this is the account holder's only address, it is used as the default regardless of this field's setting."
          default: false
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Last name or family name of the account holder.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: Telephone number of the account holder.
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal code of the address.
        state:
          maxLength: 2
          minLength: 0
          type: string
          description: "Two-character state, province, or territorial abbreviation.\n\nFor a complete list, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>."
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: United States ZIP code of the address.
    card_holder_model:
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Associates the specified account holder group with the cardholder.\n\nSend a `GET` request to `/accountholdergroups` to retrieve account holder group tokens."
        active:
          type: boolean
          description: "Specifies if the cardholder is in the `ACTIVE` state on the Marqeta platform.\n\n*NOTE:* Do not set the value of the `user.active` field directly.\nInstead, use the `/usertransitions` endpoints to transition user resources between statuses.\nFor more information on status changes, see <</core-api/user-transitions#postUsertransitions, Create User Transition>>."
          default: true
        address1:
          maxLength: 255
          minLength: 0
          type: string
          description: "Cardholder's address.\n\n*NOTE:* Required for KYC verification (US-based cardholders only).\nCannot perform KYC if set to a PO Box."
        address2:
          maxLength: 255
          minLength: 0
          type: string
          description: "Additional address information for the cardholder.\n\n*NOTE:* Cannot perform KYC if set to a PO Box."
        birth_date:
          type: string
          description: "Cardholder's date of birth.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: "City where the cardholder resides.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        company:
          maxLength: 255
          minLength: 0
          type: string
          description: Company name.
        corporate_card_holder:
          type: boolean
          description: Specifies if the cardholder holds a corporate card.
          default: false
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: "Country where the cardholder resides.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: "Valid email address of the cardholder.\n\nThis value must be unique among users.\n\n*NOTE:* Required for KYC verification by certain banks (US-based cardholders only).\nTo determine if you must provide an email address, contact your Marqeta representative."
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Cardholder's first name.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        gender:
          maxLength: 1
          minLength: 0
          enum:
            - F
            - M
          type: string
          description: Gender of the cardholder.
        honorific:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Cardholder''s title or prefix: Dr., Miss, Mr., Ms., and so on.'
        id_card_expiration_date:
          type: string
          description: Expiration date of the cardholder's identification card.
        id_card_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's identification card number.
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          description: One or more objects containing identifications associated with the cardholder.
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
          description: Cardholder's IP address.
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Cardholder's last name.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
        middle_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's middle name.
        nationality:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's nationality.
        notes:
          maxLength: 255
          minLength: 0
          type: string
          description: Any additional information pertaining to the cardholder.
        parent_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the parent user or business resource.\nSend a `GET` request to `/users` to retrieve user resource tokens or to `/businesses` to retrieve business resource tokens.\n\nRequired if `uses_parent_account = true`.\nThis user or business is configured as the parent of the current user."
        passport_expiration_date:
          type: string
          description: Expiration date of the cardholder's passport.
        passport_number:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's passport number.
        password:
          maxLength: 255
          minLength: 0
          type: string
          description: "Password to the cardholder's user account on the Marqeta platform.\n\n* Must contain at least one numeral +\n* Must contain at least one lowercase letter +\n* Must contain at least one uppercase letter +\n* Must contain at least one of these symbols: `@ # $ % ! ^ & * ( ) \\ _ + ~ ` - = [ ] { } , ; : ' \" , . / < > ?`"
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: "Telephone number of the cardholder (including area code), prepended by the `+` symbol and the 1- to 3-digit country calling code.\nDo not include hyphens, spaces, or parentheses.\n\n*NOTE:* Required for KYC verification by certain banks (US-based cardholders only).\nTo determine if you must provide a phone number, contact your Marqeta representative."
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: "Postal code of the cardholder's address.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        ssn:
          type: string
          description: Cardholder's Social Security Number (SSN).
        state:
          maxLength: 32
          minLength: 0
          type: string
          description: "State or province where the cardholder resides.\n\n*NOTE:* <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid two-character abbreviation>> required for KYC verification (US-based cardholders only)."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the cardholder.\nIf you do not include a token, the system generates one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        uses_parent_account:
          type: boolean
          description: "Indicates whether the child shares balances with the parent (`true`), or the child's balances are independent of the parent (`false`).\n\nIf set to `true`, you must also include a `parent_token` in the request.\nThis value cannot be updated."
          default: false
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
          description: Specifies the status of the cardholder on the Marqeta platform.
      description: Contains information about a cardholder.
    card_life_cycle:
      type: object
      properties:
        activate_upon_issue:
          type: boolean
          description: A value of `true` indicates that cards of this card product type are active once they are issued.
          default: false
        card_service_code:
          type: integer
          description: "Sequence of three digits that defines various services, differentiates card usage in international or domestic interchange, designates personal identification number (PIN) and authorization requirements, and identifies card restrictions.\nThe following values are commonly used:\n\n*First digit*\n\n* *1* — International interchange OK\n* *2* — International interchange, use IC (chip) where feasible\n* *5* — National interchange only except under bilateral agreement\n* *6* — National interchange only except under bilateral agreement, use IC (chip) where feasible\n* *7* — No interchange except under bilateral agreement (closed loop)\n* *9* — Test\n\n*Second digit*\n\n* *0* — Normal\n* *2* — Contact issuer via online means\n* *4* — Contact issuer via online means except under bilateral agreement\n\n*Third digit*\n\n* *0* — No restrictions, PIN required\n* *1* — No restrictions\n* *2* — Goods and services only (no cash)\n* *3* — ATM only, PIN required\n* *4* — Cash only\n* *5* — Goods and services only (no cash), PIN required\n* *6* — No restrictions, use PIN where feasible\n* *7* — Goods and services only (no cash), use PIN where feasible"
          format: int32
          default: 101
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset_with_minimum'
        update_expiration_upon_activation:
          type: boolean
          description: "Normally, the `expiration_offset` is measured from the date of issue.\nSet this field to `true` to measure `expiration_offset` from the date of activation instead."
          default: false
      description: Defines characteristics of the lifecycle of cards of this card product type.
    card_metadata:
      type: object
      properties:
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates customer-injected metadata with the card.
    card_options:
      type: object
      properties:
        billing_address:
          $ref: '#/components/schemas/BillingAddress'
        card_present:
          type: boolean
          default: false
        cvv:
          maxLength: 3
          minLength: 0
          type: string
        expiration:
          maxLength: 4
          minLength: 4
          type: string
    card_personalization:
      required:
        - text
      type: object
      properties:
        carrier:
          $ref: '#/components/schemas/carrier'
        images:
          $ref: '#/components/schemas/images'
        perso_type:
          enum:
            - EMBOSS
            - LASER
            - FLAT
          type: string
          description: Specifies the type of card personalization.
        text:
          $ref: '#/components/schemas/text'
      description: Specifies personalized attributes to be added to the card.
    card_product_config:
      type: object
      properties:
        card_life_cycle:
          $ref: '#/components/schemas/card_life_cycle'
        clearing_and_settlement:
          $ref: '#/components/schemas/clearing_and_settlement'
        digital_wallet_tokenization:
          $ref: '#/components/schemas/digital_wallet_tokenization'
        fulfillment:
          $ref: '#/components/schemas/card_product_fulfillment'
        jit_funding:
          $ref: '#/components/schemas/jit_funding'
        poi:
          $ref: '#/components/schemas/poi'
        selective_auth:
          $ref: '#/components/schemas/selective_auth'
        special:
          $ref: '#/components/schemas/special'
        transaction_controls:
          $ref: '#/components/schemas/transaction_controls'
      description: "Defines the characteristics of the card product.\nConfigurations are conditionally required based on program setup.\n\nFor more information, contact your Marqeta representative."
    card_product_fulfillment:
      required:
        - card_personalization
      type: object
      properties:
        all_zero_card_security_code:
          type: boolean
          description: 'If `true`, an all zero code (000) is allowed as a valid value in an authorization request.'
          default: false
        allow_card_creation:
          type: boolean
          description: "Controls the ability to create cards from this card product; `true` allows and `false` disallows the creation of cards.\n\n*NOTE:* The card product's `active` field has no effect on card creation or the behavior of this field."
          default: true
        bin_prefix:
          type: string
          description: Prefix of the bank identification number.
        bulk_ship:
          type: boolean
          description: Enables bulk ordering of cards of this card product type using the `/bulkissuances` endpoint.
          default: false
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        enable_offline_pin:
          type: boolean
          description: 'Enables offline personal identification number (PIN) verification for Europay Mastercard and Visa (EMV, or "chip-and-PIN") card payments.'
          default: false
        fulfillment_provider:
          enum:
            - PERFECTPLASTIC
            - ARROWEYE
            - IDEMIA
            - IDEMIA_UK
            - IDEMIA_FR
            - IDEMIA_CZ
            - IDEMIA_APAC
            - IDEMIA_PL
            - IDEMIA_AU
            - IDEMIA_LA
            - GEMALTO
            - NITECREST
            - OBERTHUR
            - ALLPAY
          type: string
          description: "Specifies the fulfillment provider.\n\nYou can work with providers located in North America, Europe, South America, and the Asia-Pacific region.\nFor more information, see <</developer-guides/managing-physical-cards#_fulfillment_providers_by_location, Fulfillment providers by location>>.\n\n*NOTE:* Expedited processing is available for cards that are fulfilled by link:https://www.arroweye.com/[Arroweye Solutions, window=\"_blank\"], link:https://www.gi-de.com/[G+D, window=\"_blank\"], link:http://www.idemia.com[IDEMIA, window=\"_blank\"], and link:http://perfectplastic.com/[Perfect Plastic Printing, window=\"_blank\"].\nYou can expedite an order's processing by using the `expedite` field of the <</core-api/cards, card>> or <</core-api/bulk-card-orders, bulkissuance>> object.\nContact your Marqeta representative for information regarding the cost of expedited service."
          default: PERFECTPLASTIC
        package_id:
          maxLength: 50
          minLength: 1
          type: string
          description: Card fulfillment provider's package ID.
          default: '0'
        pan_length:
          type: string
          description: Specifies the length of the primary account number (PAN).
          default: '16'
        payment_instrument:
          enum:
            - PHYSICAL_MSR
            - PHYSICAL_ICC
            - PHYSICAL_CONTACTLESS
            - PHYSICAL_COMBO
            - VIRTUAL_PAN
          type: string
          description: Specifies the physical form cards of this card product type will take.
          default: PHYSICAL_MSR
        shipping:
          $ref: '#/components/schemas/shipping'
        uppercase_name_lines:
          type: boolean
          description: "A value of `true` sets the text in the `fulfillment.card_personalization.text.name_line_1` and `name_line_2` fields to all uppercase letters.\nA value of `false` leaves the text in its original state."
          default: true
      description: 'Determines physical characteristics of a card, along with its bulk shipment information.'
    card_product_request:
      required:
        - name
        - start_date
      type: object
      properties:
        active:
          type: boolean
          description: "Indicates whether the card product is active.\n\n*NOTE:* This field has no effect on the ability to create cards from this card product.\nUse the `config.fulfillment.allow_card_creation` field to allow/disallow card creation."
          default: false
        config:
          $ref: '#/components/schemas/card_product_config'
        end_date:
          type: string
          description: End date of the range over which the card product can be active.
          format: date
        name:
          maxLength: 40
          minLength: 1
          type: string
          description: "Name of the card product.\nMarqeta recommends that you use a unique string."
        start_date:
          type: string
          description: "Date when the card product becomes active.\nIf the start date has passed and the card is set to `active = false`, then the card will not be activated."
          format: date
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the card product.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is required in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    card_product_response:
      required:
        - created_time
        - last_modified_time
        - name
        - start_date
      type: object
      properties:
        active:
          type: boolean
          description: "Indicates whether the card product is active.\n\nThis field is returned if it exists in the resource."
          default: false
        config:
          $ref: '#/components/schemas/card_product_config'
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        end_date:
          type: string
          description: "End date of the range over which the card product can be active.\n\nThis field is returned if it exists in the resource."
          format: date
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last updated, in UTC.'
          format: date-time
        name:
          maxLength: 40
          minLength: 1
          type: string
          description: Name of the card product.
        start_date:
          type: string
          description: Date when the card product becomes active.
          format: date
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card product.
    card_product_update_model:
      type: object
      properties:
        active:
          type: boolean
          description: "Indicates whether the card product is active.\n\n*NOTE:* This field has no effect on the ability to create cards from this card product.\nUse the `config.fulfillment.allow_card_creation` field to allow/disallow card creation."
          default: false
        config:
          $ref: '#/components/schemas/card_product_config'
        end_date:
          type: string
          description: End date of the range over which the card product can be active.
          format: date
        name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Name of the card product.\nMarqeta recommends that you use a unique string."
        start_date:
          type: string
          description: "Date the card product becomes active.\nIf the start date has passed and the card is set to `active = false`, then the card will not be activated."
          format: date
    card_request:
      required:
        - card_product_token
        - user_token
      type: object
      properties:
        activation_actions:
          $ref: '#/components/schemas/activation_actions'
        bulk_issuance_token:
          type: string
          description: "Associates the card with the specified bulk card order.\nThis field cannot be updated."
        card_product_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card product.
        expedite:
          type: boolean
          description: "Set to `true` to request expedited processing of the card by your card fulfillment provider.\n\nThis expedited service is available for cards fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window=\"_blank\"], link:http://www.idemia.com[IDEMIA, window=\"_blank\"], and link:https://www.arroweye.com/[Arroweye Solutions, window=\"_blank\"].\n\n*NOTE:* Contact your Marqeta representative for information regarding the cost of expedited service."
          default: false
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset'
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentRequest'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
        new_pan_from_card_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Reissues the specified card (known as the \"source\" card) with a new primary account number (PAN).\n\nThis field reissues a card with a new PAN from the specified source card.\nThe source card is automatically terminated when the card is reissued with the new PAN.\nUse this field when reissuing a lost or stolen card.\n\nSend a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user."
        reissue_pan_from_card_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Reissues the specified card (known as the \"source\" card).\n\nThis field reissues a card by copying the primary account number (PAN) and personal identification number (PIN) from the specified source card to the newly created card.\nThe reissued card has the same PAN and PIN as the source card but a new expiration date and CVV2 number.\n\nSend a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.\n\n*NOTE:* By default, the source card is automatically terminated when the reissued card is activated.\nHowever, if your program is configured for multiple active cards, you can prevent the source card from being automatically terminated by setting the `activation_actions.terminate_reissued_source_card` field to `false`."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the card.\n\nIf you do not include a token, the system will generate one automatically.\nOther API calls will require this token, so we recommend creating a token that is easy to remember rather than letting the system generate one.\nThis value cannot be updated."
        translate_pin_from_card_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Copies the PIN from the specified card to the newly created card.\n\nBoth cards must belong to the same user.\nPopulating this field will raise an error if `reissue_pan_from_card_token` is also set.\n\nSend a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the authorized user of the card.
    card_response:
      required:
        - barcode
        - card_product_token
        - created_time
        - expiration
        - expiration_time
        - fulfillment_status
        - last_four
        - last_modified_time
        - pan
        - pin_is_set
        - state
        - state_reason
        - token
        - user_token
      type: object
      properties:
        activation_actions:
          $ref: '#/components/schemas/activation_actions'
        barcode:
          type: string
          description: 'Barcode printed on the card, expressed as numerals.'
        bulk_issuance_token:
          type: string
          description: Unique identifier of the bulk card order.
        card_product_token:
          type: string
          description: Unique identifier of the card product.
        chip_cvv_number:
          type: string
          description: Three-digit card verification value (ICVV) stored on the chip of the card.
        contactless_exemption_counter:
          type: integer
          description: "Running count of the contactless transactions successfully completed since the last strong customer authentication (SCA) challenge was issued.\nYou can limit the number of contactless transactions that can be performed without issuing an SCA challenge at the card product level.\n\nFor more information about strong customer authentication, see <</core-api/card-products, Card Products>>."
          format: int32
        contactless_exemption_total_amount:
          type: number
          description: "Running total of the money spent in contactless transactions successfully completed since the last strong customer authentication (SCA) challenge was issued.\nYou can limit the total amount that can be spent in contactless transactions without issuing an SCA challenge at the card product level.\n\nFor more information about strong customer authentication, see <</core-api/card-products, Card Products>>."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        cvv_number:
          type: string
          description: Three-digit card verification value (CVV2 or CVC2) printed on the card.
        expedite:
          type: boolean
          description: A value of `true` indicates that you requested expedited processing of the card from your card fulfillment provider.
          default: false
        expiration:
          type: string
          description: Expiration date in `MMyy` format.
        expiration_time:
          type: string
          description: 'Expiration date and time, in UTC.'
          format: date-time
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentResponse'
        fulfillment_status:
          enum:
            - ISSUED
            - ORDERED
            - REORDERED
            - REJECTED
            - SHIPPED
            - DELIVERED
            - DIGITALLY_PRESENTED
          type: string
          description: "Card fulfillment status:\n\n* *ISSUED:* Initial state of all newly created/issued cards.\n* *ORDERED:* Card ordered through the card fulfillment provider.\n* *REORDERED:* Card reordered through the card fulfillment provider.\n* *REJECTED:* Card rejected by the card fulfillment provider.\n* *SHIPPED:* Card shipped by the card fulfillment provider.\n* *DELIVERED:* Card delivered by the card fulfillment provider.\n* *DIGITALLY_PRESENTED:* Card digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards."
        instrument_type:
          enum:
            - PHYSICAL_MSR
            - PHYSICAL_ICC
            - PHYSICAL_CONTACTLESS
            - PHYSICAL_COMBO
            - VIRTUAL_PAN
          type: string
          description: "Instrument type of the card:\n\n* *PHYSICAL_MSR:* A physical card with a magnetic stripe. This is the default physical card type.\n* *PHYSICAL_ICC:* A physical card with an integrated circuit, or \"chip.\"\n* *PHYSICAL_CONTACTLESS:* A physical card that uses radio frequency identification (RFID) or near-field communication (NFC) to enable payment over a secure radio interface.\n* *PHYSICAL_COMBO:* A physical card with a chip that also supports contactless payments.\n* *VIRTUAL_PAN:* A virtual card with a primary account number (PAN)."
        last_four:
          type: string
          description: Last four digits of the card primary account number (PAN).
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
        new_pan_from_card_token:
          type: string
          description: Reissues the specified card (known as the "source" card) with a new primary account number (PAN).
        pan:
          type: string
          description: Primary account number (PAN) of the card.
        pin_is_set:
          type: boolean
          description: Specifies if the personal identification number (PIN) has been set for the card.
          default: false
        reissue_pan_from_card_token:
          type: string
          description: Reissues the specified card (known as the "source" card).
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNSUPPORTED
            - UNACTIVATED
            - LIMITED
          type: string
          description: Indicates the state of the card.
        state_reason:
          type: string
          description: "Descriptive reason for why the card is in its current state.\nFor example, \"Card activated by cardholder\"."
        token:
          type: string
          description: Unique identifier of the card.
        translate_pin_from_card_token:
          type: string
          description: Copies the personal identification number (PIN) from the specified source card to the newly created card.
        user_token:
          type: string
          description: Unique identifier of the cardholder.
      description: Contains information about the card used in the transaction.
    card_security_code_verification:
      required:
        - response
        - type
      type: object
      properties:
        response:
          $ref: '#/components/schemas/response'
        type:
          enum:
            - CVV1
            - CVV2
            - ICVV
            - DCVV
          type: string
          description: "Indicates the type of security code.\nCan have these possible values:\n\n* *CVV1* – the security code stored in the magnetic stripe on the card.\n* *CVV2* – the security code printed on the card.\n* *ICVV* – the security code stored on the chip of the card.\n* *DCVV* – a dynamic security code used in some contactless payments when a card or device is tapped against the card reader."
      description: Contains information about a verification check performed on the card's security code.
    card_swap_hash:
      required:
        - new_card_token
        - previous_card_token
      type: object
      properties:
        new_card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the new card resource to which the digital wallet tokens are assigned.
        previous_card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the existing card resource that has digital wallet tokens assigned to it.
      description: Contains identifiers for swapping digital wallet tokens between cards.
    card_transition_request:
      required:
        - card_token
        - channel
        - state
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Identifies the card whose state will transition.
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
          description: "The mechanism by which the transition was initiated.\n\n* *ADMIN* - Indicates that the card transition was initiated through the Marqeta Dashboard.\n* *API* - Indicates that the card transition was initiated by you through the Core API.\nUse this value when creating a card transition with an API `POST` request.\n* *FRAUD* - Indicates that either Marqeta or the card network has determined that the card is fraudulent.\n* *IVR* - Indicates that the card transition was initiated through your Interactive Voice Response system.\n* *SYSTEM* - Indicates that the card transition was initiated by Marqeta.\nFor example, Marqeta suspended the card due to excessive failed personal identification number (PIN) entries."
        reason:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional information about the state change.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "Standard code describing the reason for the transition.\n\n*NOTE:* This field is required if your program uses v2 of the `user_card_state_version`, which is a program-specific configuration value that is managed by Marqeta and cannot be accessed via the API.\nTo learn more about the `user_card_state_version` program configuration, contact your Marqeta representative.\n\n* *00:* Object activated for the first time\n* *01:* Requested by you\n* *02:* Inactivity over time\n* *03:* This address cannot accept mail or the addressee is unknown\n* *04:* Negative account balance\n* *05:* Account under review\n* *06:* Suspicious activity was identified\n* *07:* Activity outside the program parameters was identified\n* *08:* Confirmed fraud was identified\n* *09:* Matched with an Office of Foreign Assets Control list\n* *10:* Card was reported lost\n* *11:* Card information was cloned\n* *12:* Account or card information was compromised\n* *13:* Temporary status change while on hold/leave\n* *14:* Initiated by Marqeta\n* *15:* Initiated by issuer\n* *16:* Card expired\n* *17:* Failed KYC\n* *18:* Changed to `ACTIVE` because information was properly validated\n* *19:* Changed to `ACTIVE` because account activity was properly validated\n* *20:* Change occurred prior to the normalization of reason codes\n* *21:* Initiated by a third party, often a digital wallet provider\n* *22:* PIN retry limit reached\n* *23:* Card was reported stolen\n* *24:* Address issue\n* *25:* Name issue\n* *26:* SSN issue\n* *27:* DOB issue\n* *28:* Email issue\n* *29:* Phone issue\n* *30:* Account/fulfillment mismatch\n* *31:* Other reason"
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
          type: string
          description: Specifies the new state.
        sync_state_with_dwts:
          type: boolean
          description: "Set this field to `true` to synchronize the state of the card's associated token(s) with the card's new state.\nThe digital wallet tokens must be in a valid starting state for the given transition, which will reflect the card's state transition.\nFor example, if the card is transitioning from the `ACTIVE` state to the `SUSPENDED` state, only digital wallet tokens in the `ACTIVE` state will be synchronized with the card state transition and therefore be transitioned to the `SUSPENDED` state.\n\nLeave this field blank or set it to `false` to keep the states of the card and its digital wallet tokens independent."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the card transition.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is referenced in other API calls, so we recommend that you define a simple string that is easy to remember.\nThis value cannot be updated."
        validations:
          $ref: '#/components/schemas/ValidationsRequest'
    card_transition_response:
      required:
        - barcode
        - card_product_token
        - card_token
        - channel
        - expiration
        - expiration_time
        - fulfillment_status
        - last_four
        - pan
        - pin_is_set
        - state
        - token
        - type
        - user_token
      type: object
      properties:
        barcode:
          type: string
          description: 'The barcode printed on the card, expressed as digits.'
        bulk_issuance_token:
          type: string
          description: The unique identifier of the bulk card order.
        card:
          $ref: '#/components/schemas/card_metadata'
        card_product_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Unique identifier of the card product.
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card.
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
          description: "The mechanism by which the transition was initiated.\n\n* *ADMIN* - Indicates that the card transition was initiated through the Marqeta Dashboard.\n* *API* - Indicates that the card transition was initiated by you through the Core API.\nUse this value when creating a card transition with an API `POST` request.\n* *FRAUD* - Indicates that either Marqeta or the card network has determined that the card is fraudulent.\n* *IVR* - Indicates that the card transition was initiated through your Interactive Voice Response system.\n* *SYSTEM* - Indicates that the card transition was initiated by Marqeta.\nFor example, Marqeta suspended the card due to excessive failed personal identification number (PIN) entries."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        expedite:
          type: boolean
          description: A value of `true` indicates that you requested expedited processing of the card from your card fulfillment provider.
          default: false
        expiration:
          type: string
          description: Expiration date in `MMyy` format.
        expiration_time:
          type: string
          description: Expiration date and time in UTC format.
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentRequest'
        fulfillment_status:
          enum:
            - ISSUED
            - ORDERED
            - REJECTED
            - SHIPPED
            - DELIVERED
            - DIGITALLY_PRESENTED
          type: string
          description: "Provides status information about the card related to order and delivery.\n\nThe possible fulfillment states are:\n\n* *ISSUED:* Initial state of all newly created/issued cards\n* *ORDERED:* Card ordered through card fulfillment provider\n* *REJECTED:* Card rejected by card fulfillment provider\n* *SHIPPED:* Card shipped by card fulfillment provider\n* *DELIVERED:* Card delivered by the card fulfillment provider.\n* *DIGITALLY_PRESENTED:* Card digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards"
        last_four:
          type: string
          description: Last four digits of the card primary account number (PAN).
        new_pan_from_card_token:
          type: string
          description: Reissues the specified ("source") card with a new primary account number (PAN).
        pan:
          type: string
          description: Primary account number (PAN) of the card.
        pin_is_set:
          type: boolean
          description: Specifies if the personal identification number (PIN) has been set for the card.
          default: false
        reason:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional information about the state change.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "A standard code describing the reason for the transition:\n\n* *00:* Object activated for the first time\n* *01:* Requested by you\n* *02:* Inactivity over time\n* *03:* This address cannot accept mail or the addressee is unknown\n* *04:* Negative account balance\n* *05:* Account under review\n* *06:* Suspicious activity was identified\n* *07:* Activity outside the program parameters was identified\n* *08:* Confirmed fraud was identified\n* *09:* Matched with an Office of Foreign Assets Control list\n* *10:* Card was reported lost\n* *11:* Card information was cloned\n* *12:* Account or card information was compromised\n* *13:* Temporary status change while on hold/leave\n* *14:* Initiated by Marqeta\n* *15:* Initiated by issuer\n* *16:* Card expired\n* *17:* Failed KYC\n* *18:* Changed to `ACTIVE` because information was properly validated\n* *19:* Changed to `ACTIVE` because account activity was properly validated\n* *20:* Change occurred prior to the normalization of reason codes\n* *21:* Initiated by a third party, often a digital wallet provider\n* *22:* PIN retry limit reached\n* *23:* Card was reported stolen\n* *24:* Address issue\n* *25:* Name issue\n* *26:* SSN issue\n* *27:* DOB issue\n* *28:* Email issue\n* *29:* Phone issue\n* *30:* Account/fulfillment mismatch\n* *31:* Other reason"
        reissue_pan_from_card_token:
          type: string
          description: Reissues the specified ("source") card.
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNACTIVATED
          type: string
          description: Indicates the state of the card.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card transition.
        type:
          enum:
            - fulfillment.issued
            - state.activated
            - state.suspended
            - state.reinstated
            - state.terminated
            - state.limited
            - fulfillment.ordered
            - fulfillment.rejected
            - fulfillment.shipped
            - fulfillment.delivered
            - fulfillment.digitally_presented
          type: string
          description: "This field cannot be set directly using the `/cardtransitions` endpoint.\nA card transition's `type` is managed by the Marqeta platform, based on the before and after state of the transition, as specified in the request's `state` field.\n\nThis field appears only when populated by the card fulfillment provider.\nThe `type` field's possible values are:\n\n* *fulfillment.delivered:* Card was delivered by the card fulfillment provider\n* *fulfillment.digitally_presented:* Card was digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards\n* *fulfillment.issued:* Card was created/issued\n* *fulfillment.ordered:* Card was ordered from the card fulfillment provider\n* *fulfillment.rejected:* Card was rejected by the card fulfillment provider\n* *fulfillment.shipped:* Card was shipped by the card fulfillment provider\n* *state.activated:* Card was activated\n* *state.limited:* Card was limited\n* *state.reinstated:* Card was reinstated from a suspended state\n* *state.suspended:* Card was suspended\n* *state.terminated:* Card was terminated\n\n//Also appears in /core-api/event-types#_card_transition_events"
        user:
          $ref: '#/components/schemas/cardholder_metadata'
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the cardholder.
        validations:
          $ref: '#/components/schemas/ValidationsResponse'
    card_update_request:
      required:
        - token
      type: object
      properties:
        expedite:
          type: boolean
          description: "Set to `true` to request expedited processing of the card by your card fulfillment provider.\n\nThis expedited service is available for cards fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window=\"_blank\"], link:http://www.idemia.com[IDEMIA, window=\"_blank\"], and link:https://www.arroweye.com/[Arroweye Solutions, window=\"_blank\"].\n\n*NOTE:* Contact your Marqeta representative for information regarding the cost of expedited service."
          default: false
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentRequest'
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card you want to update.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Specifies the user you want to associate with the card.
    cardholder_authentication_data:
      type: object
      properties:
        acquirer_exemption:
          type: array
          items:
            type: string
          description: "Indicates 3D Secure authentication exemptions from the acquirer.\nThis array is returned if it is included in the transaction data from the card network."
        authentication_method:
          type: string
          description: Specifies the 3D Secure authentication method.
        authentication_status:
          type: string
          description: "Specifies the status of the 3D Secure authentication:\n\n* `ATTEMPTED`: Indicates that 3D Secure authentication was requested and processed by the card network.\n* `DATA_SHARE_EXEMPTION`: Indicates that 3D Secure authentication was for information only and exempted.\n* `EXEMPTED`: Indicates that 3D Secure authentication was requested but the challenge was exempted.\n* `EXEMPTION_CLAIMED`: Indicates that 3D Secure authentication was exempted because acquirer transaction risk analysis (TRA) was already performed.\n* `SCA_EXEMPTION`: Indicates that 3D Secure authentication was exempted because strong customer authentication (SCA) was already performed.\n* `SUCCESSFUL`: Indicates that 3D Secure authentication was successful.\n* `SUCCESSFUL_NON_PAYMENT`: Indicates that 3D Secure non-payment authentication was successful.\n* `THREEDS_REQUESTER_DATA_SHARE_EXEMPTION`: Status is deprecated and will be removed from a future release of the Marqeta platform.\nAfter June 2023, use `DATA_SHARE_EXEMPTION` instead.\n* `THREEDS_REQUESTER_SCA_EXEMPTION`: Status is deprecated and will be removed in a June 2023 release of the Marqeta platform.\nAfter June 2023, use `SCA_EXEMPTION` instead.\n* `THREEDS_REQUESTER_TRA_EXEMPTION`: Status is deprecated and will be removed in a June 2023 release of the Marqeta platform.\nAfter June 2023, use `EXEMPTION_CLAIMED` instead.\n* `UNAVAILABLE`:\n** For Visa transactions, this status indicates that 3D Secure authentication was requested, but Marqeta's access control server (ACS) was not available.\n** For Mastercard transactions, this status indicates that 3D Secure authentication was not available."
        cavv_authentication_amount:
          type: string
          description: "Authentication amount from the cardholder authentication verification value (CAVV) used to validate an authorization.\nThis field is returned if it is included in the transaction data from the card network.\n\nTo enable this field, contact your Marqeta representative."
        electronic_commerce_indicator:
          type: string
          description: "Status of the 3D Secure or digital wallet token transaction authentication attempt, as provided by a transaction participant.\n\n* `authentication_attempted`: Merchant attempted to authenticate, but either the issuer or the cardholder does not participate in 3D Secure or card tokenization.\n* `authentication_successful`: Cardholder authentication successful.\n* `no_authentication`: Non-authenticated e-commerce transaction."
        issuer_exemption:
          type: string
          description: "Indicates a 3D Secure authentication exemption from the issuer.\nThis field is returned if it is included in the transaction data from the card network."
        raw_cavv_data:
          type: string
          description: "Raw cardholder authentication verification value provided by the card network.\nThis field is returned if it is included in the transaction data from the card network.\n\nTo enable this field, contact your Marqeta representative."
        three_ds_message_version:
          type: string
          description: Specifies the 3D Secure message version used for authentication.
        verification_result:
          type: string
          description: "Result of cardholder authentication verification value (CAVV) or accountholder authentication value (AAV) verification performed by the card network.\n\n* `failed`\n* `not_present`\n* `not_provided`\n* `not_verified`\n* `not_verified_authentication_outage`\n* `verified`\n* `verified_amount_checked`\n* `verified_amount_greater_than_20_percent`: For Mastercard AAV verification, indicates that the original authentication amount and final authorization amount are mismatched, and that the final authorization amount exceeds the original authentication amount by more than 20%.\nThis 20% margin falls outside Mastercard's suggested tolerance for what a European cardholder might reasonably expect when the total transaction amount is not known in advance.\n* `verified_amount_less_than_20_percent`: For Mastercard AAV verification, indicates that the original authentication amount and final authorization amount are mismatched, and that the final authorization amount exceeds the original authentication amount by 20% or less.\nThis 20% margin falls within Mastercard's suggested tolerance for what a European cardholder might reasonably expect when the total transaction amount is not known in advance."
        verification_value_created_by:
          type: string
          description: Transaction participant who determined the verification result.
      description: "Contains authentication data for 3D Secure and digital wallet token transactions:\n\n* `electronic_commerce_indicator` – The level of verification performed.\n* `verification_result` – The result of the verification.\n* `verification_value_created_by` – The transaction participant who determined the verification result.\n* `three_ds_message_version` – The 3D Secure message version used for authentication.\n* `authentication_method` – The 3D Secure authentication method.\n* `authentication_status` – The 3D Secure authentication status.\n* `acquirer_exemption` – Indicates a 3D Secure authentication exemption from the acquirer.\n* `issuer_exemption` – Indicates a 3D Secure authentication exemption from the issuer."
    cardholder_balance:
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
      properties:
        available_balance:
          type: number
          description: "Ledger balance minus any authorized transactions that have not yet cleared.\nAlso known as the cardholder's purchasing power.\nWhen using JIT Funding, this balance is usually equal to $0.00."
        balances:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/cardholder_balance'
          description: 'Contains GPA balance information, organized by currency code.'
        cached_balance:
          type: number
          description: Not currently in use.
        credit_balance:
          type: number
          description: Not currently in use.
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        impacted_amount:
          type: number
          description: Balance change based on the amount of the transaction.
        last_updated_time:
          type: string
          description: 'Date and time when the resource was last updated, in UTC.'
          format: date-time
        ledger_balance:
          type: number
          description: "When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.\nWhen using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared."
        pending_credits:
          type: number
          description: 'ACH loads that have been accepted, but for which the funding time has not yet elapsed.'
      description: Returns general purpose account (GPA) balances for a user or business.
    cardholder_balances:
      required:
        - gpa
        - links
      type: object
      properties:
        gpa:
          $ref: '#/components/schemas/cardholder_balance'
        links:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/link'
          description: Array of links to balances of related user GPAs.
      description: "Returns general purpose account (GPA) balances for a user or business.\nThis object includes a link to balances of related user GPAs."
    cardholder_metadata:
      type: object
      properties:
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the cardholder.
      description: Contains customer-provided information about the cardholder that performed the transaction.
    carrier:
      type: object
      properties:
        logo_file:
          type: string
          description: Specifies an image to display on the card carrier.
        logo_thumbnail_file:
          type: string
          description: Specifies a thumbnail-sized rendering of the image specified in the `logo_file` field.
        message_file:
          type: string
          description: Specifies a text file containing a custom message to print on the card carrier.
        message_line:
          type: string
          description: Specifies a custom message that appears on the card carrier.
        template_id:
          type: string
          description: Specifies the card carrier template to use.
      description: Specifies attributes of the card carrier.
    chargeback_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - credit
            - name
          type: object
          properties:
            credit:
              type: boolean
            name:
              type: string
    chargeback_response:
      required:
        - amount
        - channel
        - created_time
        - credit_user
        - last_modified_time
        - network
        - state
        - token
        - transaction_token
      type: object
      properties:
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: Amount of the chargeback.
        channel:
          enum:
            - GATEWAY
            - GATEWAY_AUTOMATED
            - ISSUER
            - ISSUER_AUTOMATED
          type: string
          description: Channel the chargeback came through.
        created_time:
          type: string
          description: "Date and time when the chargeback was created.\nNot returned for transactions when the associated chargeback is in the `INITIATED` state."
          format: date-time
        credit_user:
          type: boolean
          description: Whether to credit the user for the chargeback amount.
          default: false
        last_modified_time:
          type: string
          description: "Date and time when the chargeback was last modified.\nNot returned for transactions when the associated chargeback is in the `INITIATED` state."
          format: date-time
        memo:
          maxLength: 1024
          minLength: 1
          type: string
          description: Additional comments about the chargeback.
        network:
          enum:
            - MARQETA
            - DISCOVER
            - MASTERCARD
            - PULSE
            - VISA
          type: string
          description: Network handling the chargeback.
        network_case_id:
          maxLength: 50
          minLength: 0
          type: string
          description: Network-assigned identifier of the chargeback.
        reason_code:
          type: string
          description: Identifies the standardized reason for the chargeback.
        state:
          enum:
            - INITIATED
            - REPRESENTMENT
            - PREARBITRATION
            - ARBITRATION
            - CASE_WON
            - CASE_LOST
            - NETWORK_REJECTED
            - WITHDRAWN
          type: string
          description: State of the case.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the chargeback.
        transaction_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the transaction being charged back.
      description: Contains the chargeback object associated with this transaction if a chargeback has been initiated.
    clearing_and_settlement:
      type: object
      properties:
        overdraft_destination:
          enum:
            - GPA
            - MSA
            - MERCHANT_CAMPAIGN_ACCOUNT
            - GLOBAL_OVERDRAFT_ACCOUNT
          type: string
          description: "Specifies the destination for overdraft funds.\n\nThis field does not apply if JIT Funding is enabled."
          default: GPA
      description: Specifies the destination for overdraft funds.
    client_access_token_request:
      required:
        - card_token
      type: object
      properties:
        application_token:
          maxLength: 255
          minLength: 1
          type: string
          description: Unique identifier of the `application` object.
        card_token:
          maxLength: 255
          minLength: 1
          type: string
          description: Unique identifier of the card whose sensitive information you want to display.
    client_access_token_response:
      type: object
      properties:
        application:
          $ref: '#/components/schemas/Application'
        card_token:
          type: string
          description: Unique identifier of the card whose sensitive information you want to display.
        created:
          type: string
          description: 'Date and time when the client access token was created, in UTC.'
          format: date-time
        expires:
          type: string
          description: 'Date and time when the client access token expires, in UTC.'
          format: date-time
        token:
          type: string
          description: Value of the client access token to redeem when displaying sensitive card data.
    commando_mode_enables:
      required:
        - program_funding_source
      type: object
      properties:
        auth_controls:
          type: array
          items:
            type: string
          description: Unique identifiers of the authorization controls enabled while in Commando Mode.
        ignore_card_suspended_state:
          type: boolean
          description: "If set to `true`, transactions conducted while Commando Mode is enabled proceed even when the card is suspended.\nIf set to `false`, transactions conducted while Commando Mode is enabled are declined if the card is suspended."
          default: false
        program_funding_source:
          type: string
          description: Unique identifier of the program funding source that substitutes for the program gateway funding source upon Commando Mode enablement.
        use_cache_balance:
          type: boolean
          description: This field is not currently in use.
          default: false
        velocity_controls:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            type: string
          description: "Unique identifiers of the velocity controls enabled while in Commando Mode.\n\nVelocity controls that are enabled in Commando Mode are inactive until a Commando Mode event occurs.\nWhen Commando Mode velocity controls are activated, they conform to the `velocity_window` specified in that velocity control.\nFor example, a `velocity_window` of `DAY` is one calendar day starting at 00:00:00 UTC.\nIf a Commando Mode event occurs at 11:59:59 UTC, the `DAY` window includes all transactions that occurred between 00:00:00 and 11:59:59 on that calendar day."
      description: Defines program behavior when Commando Mode is enabled.
    commando_mode_nested_transition:
      required:
        - channel
        - commando_enabled
      type: object
      properties:
        channel:
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
          description: Mechanism that changed the Commando Mode control set's state.
        commando_enabled:
          type: boolean
          description: "Indicates whether Commando Mode is enabled.\n\n* If `commando_enabled` is `true` and `COMMANDO_MANUAL` is configured, all transactions are processed via Commando Mode.\n* If `commando_enabled` is `true` and `COMMANDO_AUTO` is configured, Commando Mode is ready to intervene only when a transaction times out or encounters an error."
          default: false
        reason:
          type: string
          description: Describes the reason why the current state of the Commando Mode control set was last changed.
        username:
          type: string
          description: Identifies the user who last changed the Commando Mode control set's state.
      description: Describes the Commando Mode control set's `current_state` object.
    commando_mode_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        commando_mode_enables:
          $ref: '#/components/schemas/commando_mode_enables'
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        current_state:
          $ref: '#/components/schemas/commando_mode_nested_transition'
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last updated, in UTC.'
          format: date-time
        program_gateway_funding_source_token:
          type: string
          description: Unique identifier of the associated program gateway funding source.
        real_time_standin_criteria:
          $ref: '#/components/schemas/real_time_standin_criteria'
        token:
          type: string
          description: Unique identifier of the Commando Mode control set.
    commando_mode_transition_response:
      required:
        - created_time
      type: object
      properties:
        commando_mode_token:
          type: string
          description: Unique identifier of the Commando Mode control set.
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        name:
          type: string
          description: Identifies the user who changed the Commando Mode control set's state.
        token:
          type: string
          description: Unique identifier of the Command Mode control set transition object.
        transition:
          $ref: '#/components/schemas/commando_mode_nested_transition'
        type:
          type: string
          description: 'Specifies the type of event that triggered the Commando Mode transition, such as a `connection_error` or `response_timeout`.'
    config:
      type: object
      properties:
        authorization_controls:
          $ref: '#/components/schemas/authorization_controls'
      description: 'Allows for configuration options for this group, including control over the expiration of authorizations and automatic increases to the authorization amount.'
    control_token_request:
      required:
        - card_token
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: The unique identifier of the card for which you want to generate a control token.
        controltoken_type:
          enum:
            - SET_PIN
            - SHOW_PIN
          type: string
          description: "Specifies the type of action completed by this request.\n\n*WARNING:* Sending a request to this endpoint with a `REVEAL_PIN` control token requires PCI DSS compliance.\n\nThe lifespan of the control token depends on the token type:\n\n* *SET_PIN:* 60 minutes\n* *REVEAL_PIN:* 5 minutes"
    control_token_response:
      required:
        - control_token
      type: object
      properties:
        control_token:
          type: string
          description: "Unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.\nThis value cannot be updated."
    currency_conversion:
      type: object
      properties:
        network:
          $ref: '#/components/schemas/network'
      description: Contains information about currency conversion.
    customer_due_diligence_request:
      required:
        - answer
        - question
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    customer_due_diligence_response:
      required:
        - account_token
        - answer
        - bank
        - question
        - token
        - type
      type: object
      properties:
        account_token:
          type: string
        answer:
          type: string
        bank:
          type: string
        question:
          type: string
        token:
          type: string
        type:
          type: string
    customer_due_diligence_update_response:
      type: object
      properties:
        answer:
          type: string
    deposit_account:
      required:
        - account_number
        - routing_number
        - token
      type: object
      properties:
        account_number:
          type: string
        allow_immediate_credit:
          type: boolean
          default: false
        business_token:
          type: string
        routing_number:
          type: string
        token:
          type: string
        user_token:
          type: string
    deposit_account_update_request:
      type: object
      properties:
        allow_immediate_credit:
          type: boolean
          default: false
    device:
      type: object
      properties:
        device_id:
          type: string
          description: Identity number of the device.
        ip_address:
          type: string
          description: Device's IP address.
        language_code:
          type: string
          description: Language the device is configured to use.
        location:
          type: string
          description: Geographic coordinates of the device.
        name:
          type: string
          description: Name of the device.
        phone_number:
          type: string
          description: Device's telephone number.
        token:
          type: string
          description: Unique identifier of the device object.
        type:
          type: string
          description: Type of device being provisioned.
      description: Contains information related to the device being provisioned.
    digital_service_provider:
      type: object
      properties:
        cvm_authentication_indicator:
          type: string
        cvm_authentication_method:
          type: string
        first_authentication_factor:
          type: string
        second_authentication_factor:
          type: string
    digital_wallet_android_pay_provision_request:
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - wallet_account_id
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        device_id:
          maxLength: 24
          minLength: 1
          type: string
          description: 'Unique identifier of the user''s Google device, as provided by Google during the provisioning process.'
        device_type:
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
          description: Type of device into which the digital wallet token will be provisioned.
        provisioning_app_version:
          maxLength: 50
          minLength: 1
          type: string
          description: "Version of the application making the provisioning request.\nUsed for debugging and fraud prevention."
        wallet_account_id:
          maxLength: 50
          minLength: 1
          type: string
          description: 'User''s Google Wallet account ID, as provided by Google during the provisioning process.'
    digital_wallet_android_pay_provision_response:
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
      properties:
        card_token:
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        created_time:
          type: string
          description: 'Date and time when the digital wallet provisioning request was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the digital wallet token provisioning request was last updated, in UTC.'
          format: date-time
        push_tokenize_request_data:
          $ref: '#/components/schemas/android_push_tokenize_request_data'
    digital_wallet_apple_pay_provision_request:
      required:
        - card_token
        - certificates
        - device_type
        - nonce
        - nonce_signature
        - provisioning_app_version
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        certificates:
          type: array
          items:
            type: string
            description: "Base64-encoded leaf and sub-CA certificates provided by Apple.\n\nThe first element of the array should be the leaf certificate followed by the sub-CA."
          description: "Base64-encoded leaf and sub-CA certificates provided by Apple.\n\nThe first element of the array should be the leaf certificate, followed by the sub-CA."
        device_type:
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
          description: Type of device into which the digital wallet token will be provisioned.
        nonce:
          type: string
          description: One-time-use nonce provided by Apple for security purposes.
        nonce_signature:
          type: string
          description: Apple-provided signature to the nonce.
        provisioning_app_version:
          maxLength: 50
          minLength: 1
          type: string
          description: "Version of the application making the provisioning request.\nUsed for debugging and fraud prevention."
    digital_wallet_apple_pay_provision_response:
      required:
        - activation_data
        - card_token
        - created_time
        - encrypted_pass_data
        - ephemeral_public_key
        - last_modified_time
      type: object
      properties:
        activation_data:
          type: string
          description: Cryptographic one-time passcode conforming to the payment network operator or service provider specifications.
        card_token:
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        created_time:
          type: string
          description: 'Date and time when the digital wallet provisioning request was created, in UTC.'
          format: date-time
        encrypted_pass_data:
          type: string
          description: Payload encrypted with a shared key derived from the Apple Public Certificates and the generated ephemeral private key.
        ephemeral_public_key:
          type: string
          description: Ephemeral public key used for the provisioning attempt.
        last_modified_time:
          type: string
          description: 'Date and time when the digital wallet token provisioning request was last updated, in UTC.'
          format: date-time
    digital_wallet_samsung_pay_provision_request:
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - wallet_user_id
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        device_id:
          maxLength: 24
          minLength: 1
          type: string
          description: 'User''s Samsung device unique identifier, as provided by Samsung during the provisioning process.'
        device_type:
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
          description: Type of device into which the digital wallet token will be provisioned.
        provisioning_app_version:
          maxLength: 50
          minLength: 1
          type: string
          description: "Version of the application making the provisioning request.\nUsed for debugging and fraud prevention."
        wallet_user_id:
          maxLength: 50
          minLength: 1
          type: string
          description: 'User''s Samsung Wallet account ID, as provided by Samsung during the provisioning process.'
    digital_wallet_samsung_pay_provision_response:
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
      properties:
        card_token:
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        created_time:
          type: string
          description: 'Date and time when the digital wallet provisioning request was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the digital wallet token provisioning request was last updated, in UTC.'
          format: date-time
        push_tokenize_request_data:
          $ref: '#/components/schemas/samsung_push_tokenize_request_data'
    digital_wallet_token:
      type: object
      properties:
        address_verification:
          $ref: '#/components/schemas/address_verification'
        card_token:
          type: string
          description: Unique identifier of the card.
        created_time:
          type: string
          description: 'Date and time when the digital wallet token object was created, in UTC.'
          format: date-time
        device:
          $ref: '#/components/schemas/device'
        fulfillment_status:
          type: string
          description: "Digital wallet token's provisioning status.\n\nFor fulfillment status descriptions, see <</core-api/digital-wallets-management#postDigitalwallettokentransitions, Create digital wallet token transition>>."
        issuer_eligibility_decision:
          type: string
          description: "The Marqeta platform's decision as to whether the digital wallet token should be provisioned.\n\n* *0000* – The token should be provisioned.\n\n* *token.activation.verification.required* – Provisioning is pending; further action is required for completion.\n\nFor all other values, check the value of the `fulfillment_status` field to definitively ascertain the provisioning outcome.\n\n*NOTE:* The value `invalid.cid` indicates an invalid CVV2 number."
        last_modified_time:
          type: string
          description: 'Date and time when the digital wallet token object was last modified, in UTC.'
          format: date-time
        metadata:
          $ref: '#/components/schemas/digital_wallet_token_metadata'
        state:
          type: string
          description: "State of the digital wallet token.\n\nFor state descriptions, see <</developer-guides/managing-the-digital-wallet-token-lifecycle#_transitioning_token_states, Transitioning Token States>>."
        state_reason:
          type: string
          description: Reason why the digital wallet token transitioned to its current state.
        token:
          type: string
          description: Unique identifier of the digital wallet token.
        token_service_provider:
          $ref: '#/components/schemas/token_service_provider'
        transaction_device:
          $ref: '#/components/schemas/transaction_device'
        user:
          $ref: '#/components/schemas/user_card_holder_response'
        wallet_provider_profile:
          $ref: '#/components/schemas/wallet_provider_profile'
      description: "Contains information about the digital wallet that funded the transaction.\n\nReturned for all transactions funded by a digital wallet or related to digital wallet token provisioning.\n\nFor more on digital wallets, see the <</core-api/digital-wallets-management, Digital Wallets Management>> API reference and <</developer-guides/digital-wallets-and-tokenization, Digital Wallets and Tokenization>> developer guide."
    digital_wallet_token_address_verification:
      type: object
      properties:
        validate:
          type: boolean
          description: Specifies whether or not the address used for address verification is valid.
          default: true
    digital_wallet_token_hash:
      required:
        - token
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the digital wallet token resource.
      description: Contains identifiers of the digital wallet token resource and the card resource.
    digital_wallet_token_metadata:
      type: object
      properties:
        cardproduct_preferred_notification_language:
          type: string
          description: "Language specified in the `config.transaction_controls.notification_language` field of the card product:\n\n* *ces* – Czech\n* *deu* – German\n* *eng* – English\n* *fra* – French\n* *grc* – Greek\n* *ita* – Italian\n* *nld* – Dutch\n* *pol* – Polish\n* *prt* – Portuguese\n* *rou* – Romanian\n* *spa* – Spanish\n* *swe* – Swedish\n\nBy default, notifications are sent in English.\n\nThe ISO maintains the link:https://www.iso.org/iso-3166-country-codes.html[full list of ISO 3166 two- and three-digit numeric country codes, window=\"_blank\"]."
        issuer_product_config_id:
          type: string
          description: Unique identifier of the product configuration on the Marqeta platform.
      description: Contains additional information about the digital wallet token.
    digital_wallet_token_transition_request:
      required:
        - digital_wallet_token
        - state
      type: object
      properties:
        channel:
          enum:
            - TOKEN_SERVICE_PROVIDER
            - TOKEN_SERVICE_PROVIDER_API
            - DIGITAL_WALLET
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
          description: Mechanism by which the transition was initiated.
        digital_wallet_token:
          $ref: '#/components/schemas/digital_wallet_token_hash'
        reason:
          maxLength: 255
          minLength: 0
          type: string
          description: The reason for the transition.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "Standard code describing the reason for the transition.\n\n*NOTE:* This field is required if your program uses v2 of the `user_card_state_version`, which is a program-specific configuration value that is managed by Marqeta and cannot be accessed via the API.\nTo learn more about the `user_card_state_version` program configuration, contact your Marqeta representative.\n\n* *00:* Object activated for the first time\n* *01:* Requested by you\n* *02:* Inactivity over time\n* *03:* This address cannot accept mail or the addressee is unknown\n* *04:* Negative account balance\n* *05:* Account under review\n* *06:* Suspicious activity was identified\n* *07:* Activity outside the program parameters was identified\n* *08:* Confirmed fraud was identified\n* *09:* Matched with an Office of Foreign Assets Control list\n* *10:* Card was reported lost\n* *11:* Card information was cloned\n* *12:* Account or card information was compromised\n* *13:* Temporary status change while on hold/leave\n* *14:* Initiated by Marqeta\n* *15:* Initiated by issuer\n* *16:* Card expired\n* *17:* Failed KYC\n* *18:* Changed to `ACTIVE` because information was properly validated\n* *19:* Changed to `ACTIVE` because account activity was properly validated\n* *20:* Change occurred prior to the normalization of reason codes\n* *21:* Initiated by a third party, often a digital wallet provider\n* *22:* PIN retry limit reached\n* *23:* Card was reported stolen\n* *24:* Address issue\n* *25:* Name issue\n* *26:* SSN issue\n* *27:* DOB issue\n* *28:* Email issue\n* *29:* Phone issue\n* *30:* Account/fulfillment mismatch\n* *31:* Other reason"
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
          type: string
          description: "Specifies the state to which the digital wallet token will transition.\n\nThe original state is `REQUESTED`. You cannot modify the state if its current value is either `REQUEST_DECLINED` or `TERMINATED`."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "The unique identifier of the digital wallet token transition (not the identifier of the digital wallet token itself).\n\nIf you do not include a value for the `token` field, the system will generate one automatically.\nThis value is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        token_reference_id:
          type: string
          description: "The unique identifier of the digital wallet token within the card network.\nThe `token_reference_id` is unique at the card network level."
    digital_wallet_token_transition_response:
      required:
        - channel
        - digital_wallet_token
        - fulfillment_status
        - state
        - token
        - type
      type: object
      properties:
        card_swap:
          $ref: '#/components/schemas/card_swap_hash'
        channel:
          enum:
            - TOKEN_SERVICE_PROVIDER
            - DIGITAL_WALLET
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
            - TOKEN_SERVICE_PROVIDER_API
          type: string
          description: Mechanism by which the transition was initiated.
        created_time:
          type: string
          description: 'Date and time when the digital wallet provisioning request was created, in UTC.'
          format: date-time
        digital_wallet_token:
          $ref: '#/components/schemas/digital_wallet_token_hash'
        fulfillment_status:
          enum:
            - DECISION_RED
            - DECISION_YELLOW
            - DECISION_GREEN
            - REJECTED
            - PROVISIONED
          type: string
          description: Provisioning status of the digital wallet token.
        reason:
          maxLength: 255
          minLength: 0
          type: string
          description: Reason for the transition.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "Standard code describing the reason for the transition:\n\n* *00:* Object activated for the first time\n* *01:* Requested by you\n* *02:* Inactivity over time\n* *03:* This address cannot accept mail or the addressee is unknown\n* *04:* Negative account balance\n* *05:* Account under review\n* *06:* Suspicious activity was identified\n* *07:* Activity outside the program parameters was identified\n* *08:* Confirmed fraud was identified\n* *09:* Matched with an Office of Foreign Assets Control list\n* *10:* Card was reported lost\n* *11:* Card information was cloned\n* *12:* Account or card information was compromised\n* *13:* Temporary status change while on hold/leave\n* *14:* Initiated by Marqeta\n* *15:* Initiated by issuer\n* *16:* Card expired\n* *17:* Failed KYC\n* *18:* Changed to `ACTIVE` because information was properly validated\n* *19:* Changed to `ACTIVE` because account activity was properly validated\n* *20:* Change occurred prior to the normalization of reason codes\n* *21:* Initiated by a third party, often a digital wallet provider\n* *22:* PIN retry limit reached\n* *23:* Card was reported stolen\n* *24:* Address issue\n* *25:* Name issue\n* *26:* SSN issue\n* *27:* DOB issue\n* *28:* Email issue\n* *29:* Phone issue\n* *30:* Account/fulfillment mismatch\n* *31:* Other reason"
        state:
          enum:
            - REQUESTED
            - REQUEST_DECLINED
            - ACTIVE
            - SUSPENDED
            - TERMINATED
          type: string
          description: Specifies the state to which the digital wallet token is transitioning.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: 'Unique identifier of the digital wallet token transition, and not the identifier of the digital wallet token itself.'
        type:
          maxLength: 36
          minLength: 0
          type: string
          description: "Type of digital wallet token transition.\n`state.activated`, for example."
    digital_wallet_tokenization:
      type: object
      properties:
        card_art_id:
          type: string
          description: "Specifies the digital wallet card art identifier for the card product.\nDigital wallets display the card art after the initial token has been provisioned and activated.\nDigital wallet card art is updated for all wallets automatically whenever a tokenized card is reissued or replaced.\n\n* If your card program is Managed by Marqeta, Marqeta populates this field on your behalf.\n* If your card program is Powered by Marqeta, you can obtain the correct card art identifier directly from Visa or Mastercard.\n\nIf this field is left blank, your card product inherits the card art assigned to the account BIN range."
        provisioning_controls:
          $ref: '#/components/schemas/provisioning_controls'
      description: Controls characteristics related to digital wallets.
    digital_wallet_x_pay_provision_request:
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - token_requestor_id
        - wallet_account_id
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        device_id:
          maxLength: 24
          minLength: 1
          type: string
          description: 'Unique identifier of the user''s XPay device, as provided by XPay during the provisioning process.'
        device_type:
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
          description: Type of device into which the digital wallet token will be provisioned.
        provisioning_app_version:
          maxLength: 50
          minLength: 1
          type: string
          description: "Version of the application making the provisioning request.\nUsed for debugging and fraud prevention."
        token_requestor_id:
          maxLength: 11
          minLength: 0
          type: string
          description: "Unique numerical identifier of the digital wallet token requestor within the card network.\nThese ID numbers map to `token_requestor_name` field values as follows:\n\n*Mastercard*\n\n* 50110030273 – `APPLE_PAY`\n* 50120834693 – `ANDROID_PAY`\n* 50139059239 – `SAMSUNG_PAY`\n\n*Visa*\n\n* 40010030273 – `APPLE_PAY`\n* 40010075001 – `ANDROID_PAY`\n* 40010043095 – `SAMSUNG_PAY`\n* 40010075196 – `MICROSOFT_PAY`\n* 40010075338 – `VISA_CHECKOUT`\n* 40010075449 – `FACEBOOK`\n* 40010075839 – `NETFLIX`\n* 40010077056 – `FITBIT_PAY`\n* 40010069887 – `GARMIN_PAY`"
        wallet_account_id:
          maxLength: 50
          minLength: 1
          type: string
          description: 'User''s XPay account identifier, as provided by XPay during the provisioning process.'
    digital_wallet_x_pay_provision_response:
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
      properties:
        card_token:
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        created_time:
          type: string
          description: 'Date and time when the digital wallet provisioning request was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the digital wallet token provisioning request was last updated, in UTC.'
          format: date-time
        push_tokenize_request_data:
          $ref: '#/components/schemas/xpay_push_tokenize_request_data'
    direct_deposit_account_request:
      type: object
      properties:
        allow_immediate_credit:
          type: boolean
          default: false
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Required if 'user_token' is null
        customer_due_diligence:
          type: array
          items:
            $ref: '#/components/schemas/customer_due_diligence_request'
          description: Required if account type = Checking
        token:
          type: string
        type:
          enum:
            - DEPOSIT_ACCOUNT
            - CHECKING
            - SAVINGS
            - INTEREST_BEARING
          type: string
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Required if 'business_token' is null
    direct_deposit_account_response:
      required:
        - account_number
        - allow_immediate_credit
        - business_token
        - created_time
        - last_modified_time
        - routing_number
        - state
        - token
        - user_token
      type: object
      properties:
        account_number:
          maxLength: 17
          minLength: 13
          type: string
        allow_immediate_credit:
          type: boolean
          default: false
        business_token:
          maxLength: 36
          minLength: 36
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        routing_number:
          maxLength: 9
          minLength: 9
          type: string
        state:
          maxLength: 10
          minLength: 6
          type: string
        token:
          maxLength: 36
          minLength: 36
          type: string
        type:
          maxLength: 36
          minLength: 7
          type: string
        user_token:
          maxLength: 36
          minLength: 36
          type: string
    direct_deposit_account_transition_request:
      required:
        - account_token
        - channel
      type: object
      properties:
        account_token:
          maxLength: 36
          minLength: 1
          type: string
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
            - NETWORK
            - PROD_SUPPORT
            - UNSUPPORTED
          type: string
        reason:
          maxLength: 255
          minLength: 1
          type: string
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNSUPPORTED
            - UNACTIVATED
            - LIMITED
          type: string
        token:
          type: string
    direct_deposit_account_transition_response:
      required:
        - account_token
        - business_token
        - channel
        - created_time
        - reason
        - state
        - token
        - user_token
      type: object
      properties:
        account_token:
          maxLength: 36
          minLength: 36
          type: string
        business_token:
          maxLength: 36
          minLength: 36
          type: string
        channel:
          maxLength: 10
          minLength: 6
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        reason:
          maxLength: 255
          minLength: 0
          type: string
        state:
          maxLength: 10
          minLength: 6
          type: string
        token:
          maxLength: 36
          minLength: 36
          type: string
        user_token:
          maxLength: 36
          minLength: 36
          type: string
    direct_deposit_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - name
          type: object
          properties:
            name:
              type: string
    echo_ping_request:
      type: object
      properties:
        payload:
          type: string
          description: Payload of the ping request.
        token:
          type: string
          description: Unique identifier of the ping request.
    echo_ping_response:
      type: object
      properties:
        id:
          type: string
        payload:
          type: string
        success:
          type: boolean
          default: false
    error_message_from_web_push_provisioning_request:
      required:
        - error_code
        - error_message
      type: object
      properties:
        error_code:
          type: string
          description: Code for the error that occurred.
          example: '400401'
        error_message:
          type: string
          description: Descriptive error message.
          example: 'Invalid input(s): invalid user token'
    expiration_offset:
      type: object
      properties:
        unit:
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
          description: Specifies the units for the `value` field in this object.
        value:
          type: integer
          description: "Specifies the number of time units (as defined by the `unit` field in this object) for which the cards are valid.\nIn other words, cards expire `value` x `unit` after the date of issue.\n\nThis number is rounded as follows:\n\n* *YEARS* – Rounds up to the last second of the last day of the month of expiration.\nFor example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.\n\n* *MONTHS* – Rounds up to the last second of the last day of the month of expiration.\nFor example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.\n\n* *DAYS* – Rounds up to the last second of the day of expiration.\n\n* *HOURS*, *MINUTES*, *SECONDS* – No rounding."
          format: int32
      description: Specifies the length of time after the date of issue for which the cards are valid.
    expiration_offset_with_minimum:
      type: object
      properties:
        min_offset:
          $ref: '#/components/schemas/min_offset'
        unit:
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
          description: Specifies the units for the `value` field.
        value:
          type: integer
          description: "Specifies the number of time units (as defined by the `unit` field in this object) for which cards of this card product type are valid.\nIn other words, cards expire `value` x `unit` after the date of issue.\n\nThis number is rounded as follows:\n\n* *YEARS* – Rounds up to the last second of the last day of the month of expiration.\nFor example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.\n\n* *MONTHS* – Rounds up to the last second of the last day of the month of expiration.\nFor example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.\n\n* *DAYS* – Rounds up to the last second of the day of expiration.\n\n* *HOURS*, *MINUTES*, *SECONDS* – No rounding."
          format: int32
      description: Specifies the length of time after the date of issue for which cards of this card product type are valid.
    fee:
      required:
        - amount
        - created_time
        - currency_code
        - last_modified_time
        - name
        - token
      type: object
      properties:
        amount:
          type: number
          description: Amount of the fee.
        created_time:
          type: string
          description: 'Date and time when the `fees` object was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        last_modified_time:
          type: string
          description: 'Date and time when the `fees` object was last modified, in UTC.'
          format: date-time
        name:
          type: string
          description: Name of the fee.
        tags:
          type: string
          description: Descriptive metadata about the fee.
        token:
          type: string
          description: Unique identifier of the `fees` object.
      description: Contains details about the fee.
    fee_attributes:
      type: object
      properties:
        reason:
          type: string
          description: Describes the reason for the fee.
        region:
          type: string
          description: Describes the region in which the fee is assessed.
        status:
          type: string
          description: Describes the status of the fee.
        transaction_type:
          type: string
          description: Specifies the transaction type in which the fee was assessed.
      description: Describes the attributes of a fee.
    fee_detail:
      required:
        - fee
        - token
        - transaction_token
      type: object
      properties:
        fee:
          $ref: '#/components/schemas/fee'
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Additional text that describes the fee transfer.
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: Descriptive metadata about the fee.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the fee.
        transaction_token:
          type: string
          description: Unique identifier of the fee transaction.
      description: Contains details about a fee.
    fee_model:
      required:
        - token
      type: object
      properties:
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Additional text that describes the fee.
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: Descriptive metadata about the fee.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the fee.
      description: "Contains attributes that define characteristics of one or more fees.\nThis array is returned in the response when it is included in the request."
    fee_refund_request:
      type: object
      properties:
        original_fee_transaction_token:
          type: string
          description: "Unique identifier of the fee to be refunded. \n\nYou can find this token in the response of the original `/feecharges` or `/gpaorders` request used to assess the standalone fee or from the webhook corresponding to the original request.\nYou can also send a `GET` request to `/transactions?type=fee.charges` to retrieve a list of fee transactions."
        tags:
          type: string
          description: Descriptive metadata about the fee.
      description: Specifies the fee to refund.
    fee_request:
      required:
        - amount
        - currency_code
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the fee is active.
          default: true
        amount:
          type: number
          description: Amount of the fee.
        category:
          enum:
            - STANDALONE
            - REALTIME
          type: string
          description: Specifies if the fee is a standalone fee or a real-time fee.
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fee_attributes:
          $ref: '#/components/schemas/fee_attributes'
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the fee request.
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Descriptive metadata about the fee.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the fee.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so Marqeta recommends that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        type:
          enum:
            - FLAT
            - PERCENTAGE
          type: string
          description: Specifies if the fee is a flat fee or a percentage of the transaction amount.
    fee_response:
      required:
        - active
        - amount
        - created_time
        - currency_code
        - last_modified_time
        - name
        - token
      type: object
      properties:
        active:
          type: boolean
          description: Specifies whether the fee is active.
        amount:
          type: number
          description: Amount of the fee.
        category:
          type: string
          description: Specifies if the fee is a standalone fee or a real-time fee.
        created_time:
          type: string
          description: 'Date and time when the `fees` object was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fee_attributes:
          $ref: '#/components/schemas/fee_attributes'
        last_modified_time:
          type: string
          description: 'Date and time when the `fees` object was last modified, in UTC.'
          format: date-time
        name:
          type: string
          description: Name of the fee.
        tags:
          type: string
          description: Descriptive metadata about the fee.
        token:
          type: string
          description: Unique identifier of the `fees` object.
        type:
          type: string
          description: Specifies if the fee is a flat fee or a percentage of the transaction amount.
      description: Contains details about the fee.
    fee_transfer_request:
      required:
        - business_token
        - fees
        - user_token
      type: object
      properties:
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the business account holder to which the fee applies.\n\nPass either `business_token` or `user_token`, not both."
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_model'
          description: Contains attributes that define characteristics of one or more fees.
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: Metadata about the transfer.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the fee transfer.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the user account holder to which the fee applies.\n\nPass either `user_token` or `business_token`, not both."
    fee_transfer_response:
      required:
        - business_token
        - created_time
        - fees
        - token
        - user_token
      type: object
      properties:
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Specifies the business account holder to which the fee applies.
        created_time:
          type: string
          description: 'Date and time when the `fee_charge` object was created, in UTC.'
          format: date-time
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_detail'
          description: Contains attributes that define characteristics of one or more fees.
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: "Metadata about the fee charge.\n\nThis field is returned if it exists in the resource."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the fee transfer.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Specifies the user account holder to which the fee applies.
      description: 'Contains information about a fee charge, including the amount, currency code, and user or business token.'
    fee_update_request:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the fee is active.
          default: true
        amount:
          type: number
          description: Amount of the fee.
        category:
          enum:
            - STANDALONE
            - REALTIME
          type: string
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fee_attributes:
          $ref: '#/components/schemas/fee_attributes'
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the fee request.
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Descriptive metadata about the fee.
        type:
          enum:
            - FLAT
            - PERCENTAGE
          type: string
    fileMapResponse:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FileResponse'
    financial_request_model:
      required:
        - amount
        - card_acceptor
        - card_token
        - mid
      type: object
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        cash_back_amount:
          type: number
        is_pre_auth:
          type: boolean
          default: false
        mid:
          maxLength: 50
          minLength: 1
          type: string
        pin:
          maxLength: 15
          minLength: 1
          type: string
        transaction_options:
          $ref: '#/components/schemas/transaction_options'
        webhook:
          $ref: '#/components/schemas/webhook'
    fraud_view:
      type: object
      properties:
        issuer_processor:
          $ref: '#/components/schemas/issuer_fraud_view'
        network:
          $ref: '#/components/schemas/network_fraud_view'
        network_account_intelligence_score:
          $ref: '#/components/schemas/network_account_intelligence_score'
      description: Contains one or more fraud determinations by the card network that apply to either the transaction or the cardholder's account.
    fulfillment_address_request:
      type: object
      properties:
        address1:
          maxLength: 255
          minLength: 0
          type: string
          description: Number and street of the address.
        address2:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional address information.
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: City of the address.
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: Country of the address.
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: First name of the addressee.
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Last name of the addressee.
        middle_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Middle name of the addressee.
        phone:
          maxLength: 20
          minLength: 0
          type: string
          description: Telephone number of the addressee.
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal code of the address.
        state:
          maxLength: 32
          minLength: 0
          type: string
          description: State of the address.
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: United States ZIP code of the address.
      description: Specifies a fulfillment shipping or return address.
    funding:
      required:
        - source
      type: object
      properties:
        amount:
          type: number
          description: Amount of funds loaded into the GPA.
        gateway_log:
          $ref: '#/components/schemas/gateway_log_model'
        source:
          $ref: '#/components/schemas/funding_source_model'
        source_address:
          $ref: '#/components/schemas/CardholderAddressResponse'
      description: 'Contains funding information for the transaction, including funding amount, type, and time.'
    funding_account_response_model:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        account_suffix:
          type: string
          description: "Account identifier appended to the bank account number.\nThis field is returned if it exists in the resource."
        account_type:
          type: string
          description: "Type of account.\nThis field is returned if it exists in the resource."
        active:
          type: boolean
          description: "Specifies whether the account is active.\nThis field is returned if it exists in the resource."
          default: false
        business_token:
          type: string
          description: "Unique identifier of the business account holder.\nThis token is returned if a `user_token` is not specified."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        date_sent_for_verification:
          type: string
          description: "Date and time in UTC when either the request for account validation was sent to the third-party partner, or when the funding source was verified by microdeposits.\n\nThis field is returned if it exists in the resource."
          format: date-time
        date_verified:
          type: string
          description: "Date and time when the account was verified, in UTC.\nThis field is returned if it exists in the resource."
          format: date-time
        exp_date:
          type: string
          description: "Payment card expiration date.\nThis field is returned if it exists in the resource."
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source.\n\nThis field is returned if it exists in the resource."
          default: false
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        link_partner_account_reference_token:
          type: string
        name_on_account:
          type: string
          description: "Name on the account.\nThis field is returned if it exists in the resource."
        partner:
          type: string
          description: "Name of the partner who validated the account holder.\nReturned when a third-party partner was used for account validation."
        partner_account_link_reference_token:
          type: string
          description: "Supplied by the account validation partner, this value is a reference to the account holder's details, such as the account number and routing number.\nReturned when a third-party partner was used for account validation."
        token:
          type: string
          description: "Unique identifier of the funding source.\nThis field is returned if it exists in the resource."
        type:
          type: string
          description: Funding source type.
        user_token:
          type: string
          description: "Unique identifier of the user account holder.\nThis token is returned if a `business_token` is not specified."
        verification_notes:
          type: string
          description: "Free-form text field for holding notes about verification.\nThis field is returned only if `verification_override = true`."
        verification_override:
          type: boolean
          description: "Allows the ACH funding source to be used regardless of its verification status.\n\n*NOTE:* When using `PLAID` to validate a funding source, this field is always set to `true`."
          default: false
        verification_status:
          type: string
          description: "Account verification status.\nThis field is returned if it exists in the resource."
    funding_source_model:
      required:
        - active
        - created_time
        - is_default_account
        - last_modified_time
        - token
        - type
      type: object
      properties:
        active:
          type: boolean
          description: Whether the funding source is active.
          default: false
        created_time:
          type: string
          description: 'Date and time when the funding source was created, in UTC.'
          format: date-time
        is_default_account:
          type: boolean
          description: Whether the GPA order unload's funding source is the default funding account.
          default: false
        last_modified_time:
          type: string
          description: 'Date and time when the funding source was last modified, in UTC.'
          format: date-time
        token:
          type: string
          description: Unique identifier of the funding source.
        type:
          type: string
          description: Funding type of the funding source.
      description: 'Contains funding source information for the transaction, including the funding type and time.'
      discriminator:
        propertyName: type
        mapping:
          bankaccount: '#/components/schemas/bank_account_funding_source_model'
          chargeback: '#/components/schemas/chargeback_funding_source_model'
          directdeposit: '#/components/schemas/direct_deposit_funding_source_model'
          paymentcard: '#/components/schemas/payment_card_funding_source_model'
          program: '#/components/schemas/program_funding_source_model'
          programgateway: '#/components/schemas/program_gateway_funding_source_model'
    gateway_log_model:
      required:
        - message
        - order_number
        - transaction_id
      type: object
      properties:
        duration:
          type: integer
          description: Length of time in milliseconds that the gateway took to respond to a funding request.
          format: int64
        message:
          type: string
          description: "Message about the status of the funding request.\nUseful for determining whether it was approved and completed successfully, declined by the gateway, or timed out."
        order_number:
          type: string
          description: 'Customer order number, same value as `transaction.token`.'
        response:
          $ref: '#/components/schemas/gateway_response'
        timed_out:
          type: boolean
          description: Whether the gateway sent a response (`true`) or timed out (`false`).
          default: false
        transaction_id:
          type: string
          description: Customer-defined identifier for the transaction.
      description: Contains information from the JIT Funding gateway in response to a funding request.
    gateway_program_custom_header_update_request:
      type: object
      properties:
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: "Additional custom information included in the HTTP header. \nFor example, this might contain security information, along with Basic Authentication, when making a JIT Funding request. \nCustom headers also appear in the associated webhook's notifications. "
    gateway_program_funding_source_request:
      required:
        - basic_auth_password
        - basic_auth_username
        - name
        - url
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the program gateway funding source is active.
        basic_auth_password:
          maxLength: 100
          minLength: 20
          type: string
          description: Password for authenticating your environment.
        basic_auth_username:
          maxLength: 50
          minLength: 1
          type: string
          description: Username for authenticating your environment.
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: "Additional custom information included in the HTTP header.\nFor example, this might contain security information, along with Basic Authentication, when making a JIT Funding request.\nCustom headers also appear in the associated webhook's notifications."
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program gateway funding source.
        timeout_millis:
          maximum: 7000
          minimum: 1000
          type: integer
          description: Total timeout in milliseconds for gateway processing.
          format: int64
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the program gateway funding source.\nIf you do not include a token, the system will generate one automatically.\nAs this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.\nThis value cannot be updated."
        url:
          maxLength: 250
          minLength: 0
          type: string
          description: 'URL of the gateway endpoint hosted in your environment, to which `POST` requests are submitted by the Marqeta platform.'
        use_mtls:
          type: boolean
          description: Specifies whether or not to use mutual transport layer security (mTLS) authentication for the funding request.
          default: false
    gateway_program_funding_source_response:
      required:
        - account
        - basic_auth_password
        - basic_auth_username
        - created_time
        - custom_header
        - last_modified_time
        - name
        - timeout_millis
        - token
        - url
        - use_mtls
        - version
      type: object
      properties:
        account:
          type: string
          description: Bank account number.
        active:
          type: boolean
          description: "Indicates whether the program gateway funding source is active.\nThis field is returned if it exists in the resource."
        basic_auth_password:
          type: string
          description: Password for authenticating your environment.
        basic_auth_username:
          type: string
          description: Username for authenticating your environment.
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: Additional custom information included in the HTTP header.
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program gateway funding source.
        timeout_millis:
          type: integer
          description: Total timeout in milliseconds for gateway processing.
          format: int64
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the program gateway funding source.
        url:
          type: string
          description: 'URL of the gateway endpoint hosted in your environment, to which `POST` requests are submitted by the Marqeta platform.'
        use_mtls:
          type: boolean
          description: Specifies whether or not to use mutual transport layer security (mTLS) authentication for the funding request.
          default: false
        version:
          type: string
          description: Program gateway funding source object version.
    gateway_program_funding_source_update_request:
      required:
        - basic_auth_password
        - basic_auth_username
        - url
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the program gateway funding source is active.
        basic_auth_password:
          maxLength: 100
          minLength: 20
          type: string
          description: Password for authenticating your environment.
        basic_auth_username:
          maxLength: 50
          minLength: 1
          type: string
          description: Username for authenticating your environment.
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: "Additional custom information included in the HTTP header.\nFor example, this might contain security information, along with Basic Authentication, when making a JIT Funding request.\nCustom headers also appear in the associated webhook's notifications."
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program gateway funding source.
        timeout_millis:
          maximum: 7000
          minimum: 1000
          type: integer
          description: Total timeout in milliseconds for gateway processing.
          format: int64
        url:
          maxLength: 250
          minLength: 0
          type: string
          description: 'URL of the gateway endpoint hosted in your environment, to which `POST` requests are submitted by the Marqeta platform.'
        use_mtls:
          type: boolean
          description: Specifies whether or not to use mutual transport layer security (mTLS) authentication for the funding request.
          default: false
    gateway_response:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: Code received from the gateway.
        data:
          $ref: '#/components/schemas/jit_program_response'
      description: Contains information from the gateway in response to a funding request.
    gpa:
      required:
        - reload_amount
        - trigger_amount
      type: object
      properties:
        reload_amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: "Available balance on the card after the reload has completed.\n\nThis value must be greater than or equal to the value of `trigger_amount`.\nNote that this is not the same as the amount added to the card, which will vary from reload to reload."
        trigger_amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: "Threshold that determines when the reload happens.\n\nThe reload is triggered when the card balance falls below this amount."
      description: Defines the type of order.
    gpa_request:
      required:
        - amount
        - currency_code
        - funding_source_token
      type: object
      properties:
        amount:
          type: number
          description: Amount to fund.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business.\n\nPass either a `business_token` or a `user_token`, not both.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_model'
          description: List of fees associated with the funding transaction.
        funding_source_address_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source address to use for this order.\nIf your funding source is an ACH account, then a funding source address is not required. If your funding source is a payment card, you must have at least one funding source address in order to create a GPA order.\nSend a `GET` request to `/fundingsources/addresses/user/{token}` to retrieve addresses for a specific user."
        funding_source_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source to use for this order.\n\nYou do not have to supply a funding source token value in this call if you have a default funding source set up (verify the funding source's `is_default_account` field).\nIf you have only one funding source, then this source is used as the default.\nIf you have multiple funding sources and none are configured as the default, then an error is returned.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve funding source tokens for a business."
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Additional descriptive text.
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Comma-delimited list of tags describing the GPA order.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the GPA order.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user.\n\nPass either a `user_token` or a `business_token`, not both.\n\nSend a `GET` request to `/users` to retrieve business tokens."
    gpa_response:
      required:
        - amount
        - created_time
        - currency_code
        - funding
        - funding_source_token
        - last_modified_time
        - response
        - state
        - token
        - transaction_token
      type: object
      properties:
        amount:
          type: number
          description: Amount funded.
        business_token:
          type: string
          description: "Unique identifier of the business.\n\nThis field is returned if it exists in the resource."
        created_time:
          type: string
          description: 'Date and time when the GPA order was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_detail'
          description: "List of fees associated with the funding transaction.\n\nThis array is returned if it exists in the resource."
        funding:
          $ref: '#/components/schemas/funding'
        funding_source_address_token:
          type: string
          description: Unique identifier of the funding source address to use for this order.
        funding_source_token:
          type: string
          description: Unique identifier of the funding source to use for this order.
        gateway_message:
          type: string
          description: "Message about the status of the funding request.\nUseful for determining whether it was approved and completed successfully, declined by the gateway, or timed out.\n\nThis field is returned if it exists in the resource."
        gateway_token:
          type: integer
          description: "Unique identifier of the JIT Funding request and response.\n\nThis field is returned if it exists in the resource."
          format: int64
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
        last_modified_time:
          type: string
          description: 'Date and time when the GPA order was last modified, in UTC.'
          format: date-time
        memo:
          type: string
          description: "Additional descriptive text.\n\nThis field is returned if it exists in the resource."
        response:
          $ref: '#/components/schemas/response'
        state:
          type: string
          description: Current status of the funding transaction.
        tags:
          type: string
          description: "Comma-delimited list of tags describing the GPA order.\n\nThis field is returned if it exists in the resource."
        token:
          type: string
          description: Unique identifier of the GPA order.
        transaction_token:
          type: string
          description: Unique identifier of the transaction being funded.
        user_token:
          type: string
          description: "Unique identifier of the user resource.\n\nThis field is returned if it exists in the resource."
      description: "Contains information about a GPA order, including fees, funding sources, and addresses.\nSee <</core-api/gpa-orders, GPA Orders>> for more information."
    gpa_returns:
      required:
        - amount
        - created_time
        - funding
        - funding_source_token
        - last_modified_time
        - response
        - state
        - token
        - transaction_token
      type: object
      properties:
        amount:
          type: number
          description: Amount of funds returned to the funding source.
        created_time:
          type: string
          description: 'Date and time when the GPA unload order was created, in UTC.'
          format: date-time
        funding:
          $ref: '#/components/schemas/funding'
        funding_source_address_token:
          type: string
          description: Identifies the funding source used for this order.
        funding_source_token:
          type: string
          description: Identifies the funding source used for this order.
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
        last_modified_time:
          type: string
          description: 'Date and time when the GPA unload order was last modified, in UTC.'
          format: date-time
        memo:
          type: string
          description: Additional descriptive text.
        original_order_token:
          type: string
          description: Identifies the original GPA order.
        response:
          $ref: '#/components/schemas/response'
        state:
          type: string
          description: Current status of the GPA unload order.
        tags:
          type: string
          description: Comma-delimited list of tags describing the GPA order.
        token:
          type: string
          description: Unique identifier of the GPA unload order.
        transaction_token:
          type: string
          description: Unique identifier of the transaction.
      description: Contains information about a GPA unload order.
    hold_increase:
      required:
        - type
        - value
      type: object
      properties:
        type:
          enum:
            - AMOUNT
            - PERCENT
            - UP_TO_LIMIT
          type: string
          description: Controls whether the `value` field represents a fixed amount or a percentage of the authorization amount.
          default: AMOUNT
        value:
          type: number
          description: "Specifies the amount of the automatic increase to the authorization amount.\n\nThe `type` field controls whether this amount is a fixed amount or a percentage."
      description: Controls automatic increases to the authorization amount for MCCs specified in this group.
    images:
      type: object
      properties:
        card:
          $ref: '#/components/schemas/images_card'
        carrier:
          $ref: '#/components/schemas/ImagesCarrier'
        carrier_return_window:
          $ref: '#/components/schemas/images_carrier_return_window'
        signature:
          $ref: '#/components/schemas/images_signature'
      description: Specifies personalized images that appear on the card.
    images_card:
      type: object
      properties:
        name:
          type: string
          description: Specifies a PNG image to display on the card.
        thermal_color:
          type: string
          description: Specifies the color of the image displayed on the card.
      description: Specifies personalized images that appear on the card.
    images_carrier_return_window:
      type: object
      properties:
        name:
          type: string
          description: Specifies a PNG image to display in the return address window of envelopes used for sending cards to cardholders.
      description: Specifies a custom image to display in the return address window of the card carrier envelope.
    images_signature:
      type: object
      properties:
        name:
          type: string
          description: Specifies a PNG image of the cardholder's signature.
      description: Specifies an image of the cardholder's signature.
    in_app_provisioning:
      type: object
      properties:
        address_verification:
          $ref: '#/components/schemas/digital_wallet_token_address_verification'
        enabled:
          type: boolean
          description: Specifies if in-app provisioning is enabled.
          default: false
    issuer_fraud_view:
      type: object
      properties:
        fraud_score_reasons:
          type: array
          items:
            type: string
        recommended_action:
          type: string
          description: The action recommended based on the fraud score.
        risk_level:
          type: string
          description: 'The fraud rating, or level of risk associated with the transaction.'
        riskcontrol_tags:
          type: array
          items:
            $ref: '#/components/schemas/riskcontrol_tags'
          description: The RiskControl tags that were triggered by the transaction.
        rule_violations:
          type: array
          items:
            type: string
          description: The rules violated by the transaction.
        score:
          type: integer
          description: "The risk score generated by RiskControl.\nThis is either the Mastercard Decision Intelligence or Visa Advance Authorization transaction risk score."
          format: int32
        triggered_rules:
          type: array
          items:
            $ref: '#/components/schemas/triggered_rule'
          description: 'Provides a list of rules triggered by a fraud event, along with the information on tags and rule characteristics.'
      description: Contains one or more fraud determinations by the card network that apply to either the transaction or the cardholder's account.
    jit_account_name_verification:
      type: object
      properties:
        gateway:
          $ref: '#/components/schemas/account_name_verification_source'
        issuer:
          $ref: '#/components/schemas/account_name_verification_source'
        request:
          $ref: '#/components/schemas/ani_information_1'
      description: "Contains account name verification data used to make JIT Funding decisions from one of the following objects:\n\n* The `gateway` object contains account name verification data from your JIT Funding gateway.\n* The `issuer` object contains account name verification data from the Marqeta platform.\n* The `request` object contains account name verification data as it appears in a JIT Funding request."
    jit_address_verification:
      type: object
      properties:
        gateway:
          $ref: '#/components/schemas/address_verification_source'
        issuer:
          $ref: '#/components/schemas/address_verification_source'
        request:
          $ref: '#/components/schemas/avs_information'
      description: Contains address verification data used to make JIT Funding decisions.
    jit_funding:
      type: object
      properties:
        paymentcard_funding_source:
          $ref: '#/components/schemas/jit_funding_paymentcard_funding_source'
        program_funding_source:
          $ref: '#/components/schemas/jit_funding_program_funding_source'
        programgateway_funding_source:
          $ref: '#/components/schemas/jit_funding_programgateway_funding_source'
      description: Governs the behavior of JIT Funding.
    jit_funding_api:
      required:
        - amount
        - method
        - token
        - user_token
      type: object
      properties:
        account_name_verification:
          $ref: '#/components/schemas/jit_account_name_verification'
        acting_user_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "User who conducted the transaction.\n\nCan be a child user configured to share its parent's account balance."
        address_verification:
          $ref: '#/components/schemas/jit_address_verification'
        amount:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: Requested amount of funding.
        balances:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/cardholder_balance'
          description: Contains the GPA's balance details.
        business_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Holder of the business account that was funded.
        decline_reason:
          enum:
            - INVALID_AMOUNT
            - INSUFFICIENT_FUNDS
            - TRANSACTION_NOT_PERMITTED
            - SUSPECTED_FRAUD
            - AMOUNT_LIMIT_EXCEEDED
            - TRANSACTION_COUNT_LIMIT_EXCEEDED
            - DUPLICATE_TRANSACTION
            - INVALID_MERCHANT
            - INVALID_CARD
            - NO_CREDIT_ACCOUNT
            - EXPIRED_CARD
            - NO_CHECKING_ACCOUNT
            - NO_SAVINGS_ACCOUNT
            - STOP_PAYMENT
            - REVOCATION_AUTHORIZATION_ORDER
            - REVOCATION_ALL_AUTHORIZATION_ORDER
            - SOFT_DECLINE_AUTHENTICATION_REQUIRED
            - CLOSED_ACCOUNT
            - SOFT_DECLINE_PIN_REQUIRED
            - CARD_NOT_ACTIVE
            - CARDHOLDER_NOT_ACTIVE
          type: string
          description: Reason why the transaction was declined.
        incremental_authorization_jit_funding_tokens:
          type: array
          items:
            type: string
          description: "Array of tokens referencing the JIT Funding tokens of all previous associated incremental authorization JIT Funding requests.\nUseful for ascertaining the final transaction amount when the original amount was incremented."
        jit_account_name_verification:
          $ref: '#/components/schemas/jit_account_name_verification'
        memo:
          maxLength: 99
          minLength: 0
          type: string
          description: Additional information that describes the JIT Funding transaction.
        method:
          enum:
            - pgfs.authorization
            - pgfs.authorization.clearing
            - pgfs.authorization.advice
            - pgfs.authorization.incremental
            - pgfs.authorization.capture
            - pgfs.authorization.reversal
            - pgfs.authorization.cashback
            - pgfs.balanceinquiry
            - pgfs.auth_plus_capture
            - pgfs.refund
            - pgfs.refund.authorization
            - pgfs.refund.authorization.reversal
            - pgfs.refund.authorization.clearing
            - pgfs.force_capture
            - pgfs.authorization.capture.chargeback
            - pgfs.authorization.capture.chargeback.reversal
            - pgfs.pindebit
            - pgfs.pindebit.chargeback
            - pgfs.pindebit.chargeback.reversal
            - pgfs.pindebit.cashback
            - pgfs.pindebit.refund
            - pgfs.pindebit.authorization
            - pgfs.pindebit.authorization.clearing
            - pgfs.pindebit.authorization.reversal
            - pgfs.pindebit.atm.withdrawal
            - pgfs.pindebit.balanceinquiry
            - pgfs.pindebit.quasi.cash
            - pgfs.dispute.credit
            - pgfs.dispute.debit
            - pgfs.directdeposit.credit
            - pgfs.directdeposit.debit
            - pgfs.directdeposit.credit.reversal
            - pgfs.directdeposit.debit.reversal
            - pgfs.adjustment.credit
            - pgfs.adjustment.debit
            - pgfs.auth_plus_capture.standin
            - pgfs.authorization.standin
            - pgfs.network.load
            - pgfs.original.credit.authorization
            - pgfs.original.credit.auth_plus_capture
            - pgfs.original.credit.authorization.clearing
            - pgfs.original.credit.authorization.reversal
            - pgfs.billpayment
            - pgfs.billpayment.capture
            - pgfs.billpayment.reversal
            - pgfs.atm.withdrawal
            - pgfs.atm.clearing.withdrawal
            - pgfs.authorization.quasi.cash
            - pgfs.authorization.clearing.quasi.cash
            - pgfs.authorization.account_verification
          type: string
          description: "JIT Funding response type.\nSee <</core-api/gateway-jit-funding-messages#_the_jit_funding_object, The jit_funding object>> for the purpose, funding event type, and description of each method."
        original_jit_funding_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Unique identifier of the first associated JIT Funding message.\nUseful for correlating related JIT Funding messages (that is, those associated with the same GPA order).\nNot included in the first of any set of related messages."
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: Customer-defined tags related to the JIT Funding transaction.
        token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Existing JIT Funding token matching the `funding.gateway_log.transaction_id` field of the associated GPA order.\n\n*NOTE:* The `transaction_id` field updates if a subsequent JIT Funding message associated with that GPA order is sent.\nIf multiple JIT Funding messages are associated with the same GPA order, the `transaction_id` field matches the token of the most recent message."
        user_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Holder of the user account that was funded.
      description: "Contains information about the JIT Funding load event, in which funds are loaded into an account.\n\nThis object is returned if your program uses JIT Funding."
    jit_funding_paymentcard_funding_source:
      type: object
      properties:
        enabled:
          type: boolean
          description: "Specifies whether JIT Funding is enabled or disabled for the payment card funding source.\nA value of `true` indicates that the payment card funding source is enabled and will be debited when swipes occur."
          default: false
        refunds_destination:
          maxLength: 50
          minLength: 0
          enum:
            - GATEWAY
            - GPA
            - WATERFALL
          type: string
          description: Specifies the return destination for refunds in the case of a transaction reversal.
    jit_funding_program_funding_source:
      type: object
      properties:
        enabled:
          type: boolean
          description: "Specifies whether JIT Funding is enabled or disabled for the program funding source.\nA value of `true` indicates that the program funding source is enabled and will be debited when swipes occur."
          default: false
        funding_source_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Unique identifier of the already existing funding source.\nRequired if JIT Funding is enabled."
        refunds_destination:
          maxLength: 50
          minLength: 0
          enum:
            - PROGRAM_FUNDING_SOURCE
            - GPA
            - WATERFALL
          type: string
          description: "Specifies the return destination for refunds in the case of a transaction reversal.\n`PROGRAM_FUNDING_SOURCE` returns funds to the program funding source.\n`GPA` returns the funds to the user's GPA."
    jit_funding_programgateway_funding_source:
      type: object
      properties:
        always_fund:
          type: boolean
          description: 'If set to `true`, this card product is always funded from this program gateway funding source.'
          default: false
        enabled:
          type: boolean
          description: "Specifies whether JIT Funding is enabled or disabled for the program gateway funding source.\nA value of `true` indicates that the program gateway funding source is enabled and will be debited when swipes occur."
          default: false
        funding_source_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Unique identifier of the already existing funding source.\nRequired if JIT Funding is enabled."
        refunds_destination:
          maxLength: 50
          minLength: 0
          enum:
            - GATEWAY
            - GPA
            - WATERFALL
          type: string
          description: "Specifies the return destination for refunds in the case of a transaction reversal.\nIn most cases, you should set the value to `GATEWAY`, which returns funds to the program gateway funding source.\nSetting to `GPA` returns the funds to the user's GPA, which creates a positive account balance and introduces the potential of a transaction being authorized without a JIT Funding request being sent to the gateway."
    jit_program_response:
      required:
        - jit_funding
      type: object
      properties:
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
        network_metadata:
          $ref: '#/components/schemas/network_metadata'
      description: Contains the gateway's information about the JIT Funding transaction.
    kyc_request:
      type: object
      properties:
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the business account holder on which to perform the identity check.\nDo not pass this field if your request includes the `user_token` field.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        manual_override:
          type: boolean
          description: "Set to `true` to designate a user account holder as having passed a verification check without Marqeta performing the check through one of its KYC providers.\n\nUse this override when you perform verification through another mechanism, such as an alternative KYC provider or directly with the account holder.\n\nYou must obtain explicit, written approval from Marqeta before using the `manual_override` field for KYC verification.\nThis feature is only available to programs that are enabled to perform their own Customer Identification Program (CIP) KYC verification.\nConsult your Marqeta representative for more information."
          default: false
        notes:
          maxLength: 255
          minLength: 0
          type: string
          description: "Notes pertaining to a manual override.\nThis field is returned in the response only when the `manual_override` field is set to `true`."
        reference_id:
          maxLength: 32
          minLength: 0
          type: string
          description: "Can be specified only if `manual_override=true`.\nIf you verified a user account holder's identity by performing a KYC verification outside of the Marqeta platform, you can use the `reference_id` field to store the reference number returned by that KYC provider.\n\n*NOTE:* When you submit a KYC verification request with `manual_override=false`, the Marqeta platform performs the verification through one of its KYC providers.\nIf the KYC provider responds with a reference identifier, that identifier is passed to you by way of this field in the response."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "The unique identifier of the identity check.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the user account holder on which to perform the identity check.\nDo not pass this field if your request includes the `business_token` field.\n\nSend a `GET` request to `/users` to retrieve user tokens."
    kyc_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        business_token:
          type: string
          description: The business account holder on which the identity check was performed.
        created_time:
          type: string
          description: Time when the KYC verification was performed.
          format: date-time
        last_modified_time:
          type: string
          description: Time when the KYC verification was last updated.
          format: date-time
        manual_override:
          type: boolean
          description: "If `true`, the user account holder is designated as having passed a verification check without Marqeta performing the check.\n\nThis override is used when verification is performed through another mechanism, such as an alternative KYC provider or directly with the account holder."
          default: false
        notes:
          type: string
          description: "Notes pertaining to a manual override.\nThis field is included in the response only when the `manual_override` field is set to `true`."
        reference_id:
          type: string
          description: "If you verified the account holder's identity by performing a KYC verification outside of the Marqeta platform, you can use the `reference_id` field to store the reference number returned by that KYC provider.\nThis field is included in the response only when the `manual_override` field is set to `true`.\n\n*NOTE:* When you submit a KYC verification request with `manual_override=false`, the Marqeta platform performs the verification through one of its KYC providers.\nIf the KYC provider responds with a reference identifier, that identifier is passed to you by way of this field in the response."
        result:
          $ref: '#/components/schemas/result'
        token:
          type: string
          description: The unique identifier of the identity check.
        user_token:
          type: string
          description: The user account holder on which the identity check was performed.
    link:
      required:
        - href
        - method
        - rel
      type: object
      properties:
        href:
          type: string
          description: URL of the requested `/balances` resource.
        method:
          type: string
          description: The HTTP method of the link.
        rel:
          type: string
          description: Specifies the relationship between the current resource and the linked resource.
      description: Link to balances of related user GPAs.
    login_request_model:
      type: object
      properties:
        email:
          type: string
          description: Cardholder email address.
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: Password to the cardholder's user account on the Marqeta platform.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Identifies the cardholder to log in.\n\nSend a `GET` request to `/users` to retrieve user tokens."
    login_response_model:
      type: object
      properties:
        access_token:
          $ref: '#/components/schemas/access_token_response'
        user:
          $ref: '#/components/schemas/user_card_holder_response'
    manual_entry:
      type: object
      properties:
        address_verification:
          $ref: '#/components/schemas/digital_wallet_token_address_verification'
        enabled:
          type: boolean
          description: Specifies if manual entry is enabled.
          default: false
    mcc_group_model:
      required:
        - mccs
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the group is active or inactive.
          default: false
        config:
          $ref: '#/components/schemas/config'
        mccs:
          maxItems: 500
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
          description: "The set of merchant category codes that you want to include in this group.\nFor each element, valid characters are 0-9, and the length must be 4 digits.\nYou can also specify a range like \"9876-9880\".\nAn MCC can belong to more than one group."
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: The name of the group.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "The unique identifier of the group.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    mcc_group_update_model:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the MCC group is active or inactive.
          default: false
        config:
          $ref: '#/components/schemas/config'
        mccs:
          maxItems: 500
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
          description: "The set of merchant category codes that you want to include in this group.\nFor each element, valid characters are 0-9, and the length must be 4 digits.\nYou can also specify a range like \"9876-9880\".\nAn MCC can belong to more than one group.\n\nUpdating the merchant category codes for the group completely replaces the group's existing codes.\nFor example, if the current MCC group is `[\"1234\"]` and you want to add the 2345 code (while retaining the existing code), you must specify `[\"1234\", \"2345\"]` in this field."
        name:
          type: string
          description: The name of the MCC group.
    merchant_group_request:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the merchant group is active or not.
          default: false
        mids:
          maxItems: 4000
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
          description: "Comma-separated list of alphanumeric merchant identifiers.\nYou can include merchant identifiers in multiple merchant groups."
        name:
          maxLength: 40
          minLength: 1
          type: string
          description: Name of the merchant group.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the group.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    merchant_group_response:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the merchant group is active or not.
          default: false
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        mids:
          type: array
          items:
            type: string
          description: Comma-separated list of alphanumeric merchant identifiers.
        name:
          type: string
          description: Name of the merchant group.
        token:
          type: string
          description: Unique identifier of the merchant group.
    merchant_group_update_request:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the merchant group is active or not.
          default: false
        mids:
          maxItems: 4000
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
          description: "Comma-separated list of alphanumeric merchant identifiers.\nYou can include merchant identifiers in multiple merchant groups."
        name:
          maxLength: 40
          minLength: 1
          type: string
          description: Name of the merchant group.
    merchant_response_model:
      required:
        - created_time
        - last_modified_time
        - name
      type: object
      properties:
        active:
          type: boolean
          default: true
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        name:
          maxLength: 40
          minLength: 0
          type: string
        partial_auth_flag:
          type: boolean
          default: true
        phone:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 2
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: The unique identifier of the merchant
        zip:
          maxLength: 10
          minLength: 0
          type: string
    merchant_scope:
      type: object
      properties:
        mcc:
          maxLength: 4
          minLength: 1
          type: string
          description: "Merchant Category Code (MCC).\nIdentifies the type of products or services provided by the merchant.\n\nEnter a value to control spending on a particular type of product or service."
        mcc_group:
          maxLength: 36
          minLength: 1
          type: string
          description: "Token identifying a group of MCCs.\nEnter a value to control spending on a group of product or service types.\n\nSend a `GET` request to `/mccgroups` to retrieve MCC group tokens."
        mid:
          maxLength: 36
          minLength: 1
          type: string
          description: "Merchant identifier (MID).\nIdentifies a specific merchant.\n\nEnter a value to control spending with a particular merchant."
      description: "Defines the group of merchants to which the velocity control applies.\n\nPopulate no more than one field of the `merchant_scope` object.\nIf no fields are populated, the velocity control applies to all merchants."
    min_offset:
      type: object
      properties:
        unit:
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
          description: Specifies the time unit of the `value` field.
        value:
          type: integer
          description: "Specifies the number of time units (as defined by the `unit` field) for which cards of this card product type are valid.\nCards expire `value` x `unit` after the date of issue.\n\nThis number is rounded as follows:\n\n* *YEARS* – Rounds up to the last second of the last day of the month of expiration.\nFor example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.\n\n* *MONTHS* – Rounds up to the last second of the last day of the month of expiration.\nFor example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.\n\n* *DAYS* – Rounds up to the last second of the day of expiration.\n\n* *HOURS*, *MINUTES*, *SECONDS* – No rounding."
          format: int32
      description: Specifies the minimum length of time after the date of issue for which the cards are valid.
    money_in_transaction:
      type: object
      properties:
        include_credits_types:
          type: array
          items:
            type: string
          description: Specifies the types of credits to include in the original credit transaction (OCT).
        include_network_load_types:
          type: array
          items:
            type: string
          description: Indicates whether or not cash and check network load transactions will be subject to velocity control.
      description: "Defines the original credit transaction (OCT) types that are subject to velocity control.\nYour request can contain either a `money_in_transaction` object or the `include_credits` field, not both."
    msa:
      required:
        - campaign_token
        - reload_amount
        - trigger_amount
      type: object
      properties:
        campaign_token:
          type: string
        reload_amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        trigger_amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
    msa_aggregated_balances:
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
      properties:
        available_balance:
          type: number
        balances:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/msa_aggregated_balances'
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          type: string
          format: date-time
        ledger_balance:
          type: number
        pending_credits:
          type: number
    msa_balances:
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
      properties:
        available_balance:
          type: number
        balances:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/msa_balances'
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          type: string
          format: date-time
        ledger_balance:
          type: number
        pending_credits:
          type: number
    msa_returns:
      required:
        - active
        - aggregated_balances
        - amount
        - campaign_token
        - created_time
        - currency_code
        - funding
        - last_modified_time
        - last_transaction_date
        - order_balances
        - original_order_token
        - reward_amount
        - reward_trigger_amount
        - transaction_token
      type: object
      properties:
        active:
          type: boolean
          default: false
        aggregated_balances:
          $ref: '#/components/schemas/msa_aggregated_balances'
        amount:
          type: number
        business_token:
          type: string
        campaign_token:
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        currency_code:
          type: string
        end_date:
          type: string
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
        funding:
          $ref: '#/components/schemas/funding'
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        last_transaction_date:
          type: string
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
        order_balances:
          $ref: '#/components/schemas/msa_balances'
        original_order_token:
          type: string
        reward_amount:
          type: number
        reward_trigger_amount:
          type: number
        start_date:
          type: string
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
        token:
          type: string
        transaction_token:
          type: string
        unloaded_amount:
          type: number
        user_token:
          type: string
    network:
      type: object
      properties:
        conversion_rate:
          type: number
          description: "Conversion rate between the origination currency and the settlement currency.\n\nReturned when the transaction currency is different from the origination currency."
        dynamic_currency_conversion:
          type: boolean
          description: Indicates whether currency conversion was performed dynamically at the point of sale.
          default: false
        original_amount:
          type: number
          description: Amount of the transaction in the currency in which it originated.
        original_currency_code:
          type: string
          description: Currency type of the origination currency.
        settlement_data:
          $ref: '#/components/schemas/settlement_data'
      description: 'Contains information from the card network about currency conversion, including the original currency of the transaction, the amount of the transaction in the original currency, and the conversion rate.'
    network_account_intelligence_score:
      type: object
      properties:
        name:
          type: string
          description: 'The name, as provided by the Mastercard network.'
        service_type:
          type: string
          description: 'The service type, as provided by the Mastercard network.'
        value:
          type: string
          description: 'The value, as provided by the Mastercard network.'
      description: 'Account intelligence score information, as provided by the Mastercard network.'
    network_fee_model:
      type: object
      properties:
        amount:
          type: number
          description: The amount of the network fee.
        credit_debit:
          enum:
            - C
            - D
          type: string
          description: "Indicates whether the fee is a credit or a debit.\n\n* *C* indicates a credit\n* *D* indicates a debit"
        type:
          enum:
            - ISSUER_FEE
            - SWITCH_FEE
            - PINDEBIT_ASSOC_FEE
            - ACQUIRER_FEE
            - INTERCHANGE_FEE
            - CUR_CONV_CARDHOLDER_FEE
            - CUR_CONV_ISSUER_FEE
            - CROSS_BORDER_ISSUER_FEE
          type: string
          description: The type of fee assessed by the card network.
      description: Contains card network fees assessed against the cardholder.
    network_fraud_view:
      type: object
      properties:
        account_risk_score:
          type: string
          description: "_(Visa only)_ Account holder risk condition code evaluated by the card network.\nA higher score indicates a greater likelihood that the card number is compromised."
        account_risk_score_reason_code:
          type: string
          description: _(Visa only)_ Unique code that describes the main driver of the `account_risk_score`.
        transaction_risk_score:
          type: integer
          description: "Network-provided risk score for the transaction.\nA higher score indicates higher risk.\nUseful for making authorization decisions."
          format: int32
        transaction_risk_score_reason_code:
          type: string
          description: _(Mastercard only)_ Unique code that describes the main driver of the `transaction_risk_score`.
        transaction_risk_score_reason_description:
          type: string
          description: _(Mastercard only)_ Description of the `transaction_risk_score_reason_code`.
      description: Contains network-provided information about fraud determinations.
    network_metadata:
      type: object
      properties:
        account_identification_1:
          type: string
        incoming_response_code:
          type: string
          description: 'Visa Risk Management esponse code `59`, indicating suspected fraud.'
        product_id:
          type: string
          description: "Product identification value assigned by the card network to each card product.\nCan be used to track card-level activity by individual account number for premium card products."
        program_id:
          type: string
          description: Program identification number used with `product_id` that identifies the programs associated with a card within a program registered by the issuer with the card network.
        spend_qualifier:
          type: string
          description: Indicates whether or not the base spend-assessment threshold defined by the card network has been met.
        surcharge_free_atm_network:
          type: string
          description: Name of the surcharge-free ATM network used to complete the transaction.
      description: "Contains network-related metadata for the transaction, including details about the card program and the card product.\nReturned if provided by the card network"
    one_time_request_model:
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: "Cardholder email address.\n\nRequired when neither the user token nor the admin access token is provided as the Basic Authentication password (case #3)."
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: "Password to the cardholder's user account on the Marqeta platform.\n\nRequired when neither the user token nor the admin access token is provided as the Basic Authentication password (case #3)."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Identifies the cardholder whose data is accessed.\nSend a `GET` request to `/users` to retrieve cardholder tokens.\n\nRequired when the Basic Authentication password is set to an admin access token (case #2)."
    order_scope:
      type: object
      properties:
        gpa:
          $ref: '#/components/schemas/gpa'
        msa:
          $ref: '#/components/schemas/msa'
      description: Defines the balance threshold and reload amounts.
    original_credit:
      type: object
      properties:
        deferred_hold_by:
          enum:
            - absent
            - visa
            - originator
          type: string
        fast_funds_enabled:
          type: boolean
          description: "Indicates that Fast Funds are enabled for dual-message original credit transactions.\nIf the value of this field is `true`, you must make the funds available to your cardholder within 30 minutes of the transaction."
        funding_source:
          enum:
            - CREDIT
            - DEBIT
            - PREPAID
            - DEPOSIT_ACCOUNT
            - CASH
            - MOBILE_MONEY_ACCOUNT
            - NON_VISA_CREDIT
            - CHECK
            - ACH
          type: string
          description: Sender's account from which the OCT draws funds.
        screening_score:
          type: string
          description: "Sanctions screening score to assist with meeting Anti-Money Laundering (AML) obligations.\n\nHigher scores indicate that the sender's data more closely resembles an entry on the regulatory watchlist.\n\nA value of 999 means that no screening score is available."
        sender_account_type:
          enum:
            - OTHER
            - RTN_BANK_ACCOUNT
            - IBAN
            - CARD_ACCOUNT
            - EMAIL
            - PHONE_NUMBER
            - BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE
            - WALLET_ID
            - SOCIAL_NETWORK_ID
          type: string
          description: The type of account from which the OCT draws funds.
        sender_address:
          type: string
          description: Sender's street address.
        sender_city:
          type: string
          description: Sender's city.
        sender_country:
          type: string
          description: Sender's country.
        sender_name:
          type: string
          description: Full name of the sender.
        sender_state:
          type: string
          description: Sender's state.
        transaction_purpose:
          type: string
          description: The purpose of the original credit transaction.
        transaction_type:
          enum:
            - account_to_account
            - person_to_person
            - wallet_transfer
            - money_transfer_by_bank
            - business_to_business
            - disbursement
            - government_disbursement
            - gambling_payout
            - loyalty
            - merchant_disbursement
            - online_gambling_payout
            - pension_disbursement
            - prepaid_loads
            - card_bill_payment
            - bill_payment
            - cash_claim
            - cash_in
            - cash_out
            - mobile_air_time_payment
            - money_transfer_by_merchant
            - face_to_face_merchant_payment
            - government_payment
            - payments_goods_services
            - funds_transfer
            - general_business_to_business_transfer
            - business_to_business_transfer
            - cash_deposit
            - purchase_repayment
          type: string
          description: Type of original credit transaction.
      description: 'Contains information about an original credit transaction (OCT), which enables the cardholder to receive funds on the specified card from an external source via the card network.'
    original_credit_sender_data:
      required:
        - funding_source
      type: object
      properties:
        deferred_hold_by:
          enum:
            - absent
            - visa
            - originator
          type: string
        fast_funds_enabled:
          type: boolean
        funding_source:
          enum:
            - credit
            - debit
            - prepaid
            - deposit_account
            - cash
            - mobile_money_payment
            - non_visa_credit
            - check
            - ach
          type: string
        sender_account_number:
          type: string
        sender_account_type:
          enum:
            - other
            - rtn_bank_account
            - iban
            - card_account
            - email
            - phone_number
            - bank_account_number_and_identification_code
            - wallet_id
            - social_network_id
          type: string
        sender_address:
          type: string
        sender_city:
          type: string
        sender_country:
          type: string
        sender_name:
          type: string
        sender_reference_number:
          type: string
        sender_state:
          type: string
        transaction_purpose:
          enum:
            - family_support
            - labor_transfers
            - travel
            - education
            - medical_treatment
            - emergency_need
            - savings
            - gifts
            - other
            - salary
            - lending
            - crypto_currency
          type: string
        unique_transaction_reference_number:
          maxLength: 17
          minLength: 1
          type: string
        visa_transaction_purpose:
          type: string
    orignalcredit_request_model:
      required:
        - amount
        - card_token
        - mid
        - type
      type: object
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        screening_score:
          type: string
        sender_data:
          $ref: '#/components/schemas/original_credit_sender_data'
        transactionPurpose:
          type: string
        type:
          enum:
            - account_to_account
            - person_to_person
            - prepaid
            - wallet_transfer
            - money_transfer_by_bank
            - business_to_business
            - disbursement
            - government_disbursement
            - gambling_payout
            - loyalty
            - merchant_disbursement
            - online_gambling_payout
            - pension_disbursement
            - prepaid_loads
            - card_bill_payment
            - bill_payment
            - cash_claim
            - cash_in
            - cash_out
            - mobile_air_time_payment
            - money_transfer_by_merchant
            - face_to_face_merchant_payment
            - government_payment
            - payments_goods_services
            - purchase_repayment
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
    other_poi:
      type: object
      properties:
        allow:
          type: boolean
          description: "If set to `true`, card transactions at points of interaction other than e-commerce or ATMs are allowed.\nThis group includes points of sale (POS)."
          default: true
        card_presence_required:
          type: boolean
          description: 'If set to `true`, cards of this card product type are required to be present during the transaction, such as in IVR scenarios.'
          default: false
        cardholder_presence_required:
          type: boolean
          description: 'If set to `true`, the cardholder is required to be present during the transaction, such as in a restaurant where the card is present but the cardholder might not be present when the card is swiped.'
          default: false
        track1_discretionary_data:
          type: string
        track2_discretionary_data:
          type: string
        use_static_pin:
          type: boolean
          default: false
      description: 'Allows for configuration of points of interaction other than ecommerce or ATMs, such as points of sale (POS).'
    pan_request:
      required:
        - pan
      type: object
      properties:
        cvv_number:
          type: string
          description: "Three-digit card verification value (CVV2) included on the back of the card.\n\nThis value cannot be updated."
        expiration:
          type: string
          description: Card expiration date.
        pan:
          type: string
          description: "Primary account number (PAN) of the card whose information you want to retrieve.\n\nSend a `GET` request to `/cards/{token}/showpan` to retrieve the PAN for a specific card."
    pan_response:
      required:
        - card_token
        - created_time
        - last_modified_time
        - user_token
      type: object
      properties:
        card_token:
          type: string
          description: Unique identifier of the card.
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        user_token:
          type: string
          description: Unique identifier of the cardholder.
    password_update_model:
      required:
        - current_password
        - new_password
      type: object
      properties:
        current_password:
          maxLength: 255
          minLength: 1
          type: string
          description: Current password to the cardholder's user account on the Marqeta platform.
        new_password:
          maxLength: 255
          minLength: 1
          type: string
          description: "New password to the cardholder's user account on the Marqeta platform.\n\n* Must contain at least one numeral +\n* Must contain at least one lowercase letter +\n* Must contain at least one uppercase letter +\n* Must contain at least one of these symbols: `@ # $ % ! ^ & * ( ) \\ _ + ~ ` - = [ ] { } , ; : ' \" , . / < > ?`"
    payment_card_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - account_suffix
            - account_type
            - exp_date
          type: object
          properties:
            account_suffix:
              type: string
            account_type:
              type: string
            business_token:
              type: string
              description: Required if 'user_token' is null
            exp_date:
              type: string
            user_token:
              type: string
              description: Required if 'business_token' is null
    payment_card_response_model:
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - exp_date
        - is_default_account
        - last_modified_time
        - token
        - type
      type: object
      properties:
        account_suffix:
          type: string
          description: Account identifier appended to the payment card number.
        account_type:
          type: string
          description: Type of payment card account.
        active:
          type: boolean
          description: Specifies whether the account is active.
          default: false
        business_token:
          type: string
          description: "Unique identifier of the business account holder.\nThis token is returned if a `user_token` is not specified."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        exp_date:
          type: string
          description: Payment card expiration date.
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        token:
          type: string
          description: Unique identifier of the funding source.
        type:
          type: string
          description: Funding source type.
        user_token:
          type: string
          description: "Unique identifier of the user account holder.\nThis token is returned if a `business_token` is not specified."
    peer_transfer_request:
      required:
        - amount
        - currency_code
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transfer.
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Additional descriptive text about the transfer.
        recipient_business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the business account holder that receives funds.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        recipient_user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the user account holder that receives funds.\n\nSend a `GET` request to `/users` to retrieve user tokens."
        sender_business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the business account holder that sends funds.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        sender_user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the user account holder that sends funds.\n\nSend a `GET` request to `/users` to retrieve user tokens."
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Metadata about the peer transfer.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the peer transfer request.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    peer_transfer_response:
      required:
        - amount
        - created_time
        - currency_code
        - token
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transfer.
        created_time:
          type: string
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        memo:
          type: string
          description: Additional descriptive text about the peer transfer.
        recipient_business_token:
          type: string
          description: Specifies the business account holder that receives funds.
        recipient_user_token:
          type: string
          description: Specifies the user account holder that receives funds.
        sender_business_token:
          type: string
          description: Specifies the business account holder that sends funds.
        sender_user_token:
          type: string
          description: Specifies the user account holder that sends funds.
        tags:
          type: string
          description: Metadata about the peer transfer.
        token:
          type: string
          description: Unique identifier of the peer transfer request.
      description: 'Contains information about a peer transfer, including sender and recipient tokens, transfer amount, and currency code.'
    pin_request:
      required:
        - control_token
        - pin
      type: object
      properties:
        control_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.\nThis value cannot be updated."
        pin:
          type: string
          description: Four-digit number to associate with the card.
    pin_reveal_request:
      required:
        - cardholder_verification_method
        - control_token
      type: object
      properties:
        cardholder_verification_method:
          enum:
            - BIOMETRIC_FACE
            - BIOMETRIC_FINGERPRINT
            - LOGIN
            - EXP_CVV
            - OTP_CVV
            - OTP
            - OTHER
          type: string
          description: "The supplemental method used to verify the cardholder's identity before revealing the card's personal identification number (PIN).\n\nThe possible cardholder verification methods are:\n\n* *BIOMETRIC_FACE:* In-app authentication via facial recognition\n* *BIOMETRIC_FINGERPRINT:* In-app authentication via biometric fingerprint\n* *EXP_CVV:* In-app authentication by entering the card's expiration date and card verification value (CVV)\n* *LOGIN:* In-app authentication by re-entering the app password\n* *OTP:* Two-factor authentication involving a one-time password (OTP)\n* *OTP_CVV:* Two-factor authentication involving the card's CVV and an OTP\n* *OTHER:* Authentication that relies on other secure methods"
        control_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.\nThis value cannot be updated."
    ping_response:
      type: object
      properties:
        env:
          type: string
        id:
          type: string
        revision:
          type: string
        success:
          type: boolean
        timestamp:
          type: string
        version:
          type: string
    poi:
      type: object
      properties:
        atm:
          type: boolean
          description: 'If set to `true`, cards can be used for withdrawing cash at an ATM and for receiving cash back at a point of sale (POS).'
          default: false
        ecommerce:
          type: boolean
          description: 'If set to `true`, cards can be used for online purchases.'
          default: true
        other:
          $ref: '#/components/schemas/other_poi'
      description: Governs the point of interaction.
    pos:
      type: object
      properties:
        card_data_input_capability:
          enum:
            - UNKNOWN
            - NO_TERMINAL
            - MAG_STRIPE
            - MAG_STRIPE_CONTACTLESS
            - MAG_STRIPE_KEY_ENTRY
            - CHIP
            - CHIP_CONTACTLESS
            - CHIP_MAG_STRIPE
            - CHIP_MAG_STRIPE_KEY_ENTRY
            - KEY_ENTRY
            - OCR
            - MICR
            - BAR_CODE
          type: string
          description: How the terminal accepts card data.
        card_holder_presence:
          type: boolean
          description: Whether the cardholder was present during the transaction.
          default: false
        card_presence:
          type: boolean
          description: Whether the card was present during the transaction.
          default: false
        cardholder_authentication_method:
          enum:
            - UNSPECIFIED
            - NON_AUTHENTICATED
            - SIGNATURE
            - PIN
            - ID_VERIFIED
          type: string
          description: Method used to authenticate the cardholder.
        country_code:
          type: string
          description: Country code of the card acceptor or terminal.
        is_installment:
          type: boolean
          description: Whether the transaction is an installment payment.
          default: false
        is_recurring:
          type: boolean
          description: Whether the transaction is recurring.
          default: false
        pan_entry_mode:
          enum:
            - UNKNOWN
            - MANUAL
            - MAG_STRIPE
            - MAG_STRIPE_CONTACTLESS
            - BAR_CODE
            - OCR
            - MICR
            - CHIP
            - CHIP_CONTACTLESS
            - CARD_ON_FILE
            - CHIP_FALLBACK
            - OTHER
          type: string
          description: Method used for capturing the card primary account number (PAN) during the transaction.
        partial_approval_capable:
          type: boolean
          description: Indicates whether the card acceptor or terminal supports partial-approval transactions.
          default: false
        pin_entry_mode:
          enum:
            - UNKNOWN
            - 'TRUE'
            - 'FALSE'
            - DEFECTIVE
          type: string
          description: "Indicates whether the card acceptor or terminal can capture card personal identification numbers (PINs).\n\n*NOTE:* This field does not indicate whether a PIN was entered."
        pin_present:
          type: boolean
          description: Indicates whether the cardholder entered a PIN during the transaction.
          default: false
        purchase_amount_only:
          type: boolean
          description: Indicates whether the card acceptor or terminal supports purchase-only approvals.
          default: false
        special_condition_indicator:
          enum:
            - UNSPECIFIED
            - CRYPTOCURRENCY_PURCHASE
            - QUASI_CASH
            - DEBT_PAYMENT
          type: string
          description: "Indicates a higher-risk operation, such as a quasi-cash or cryptocurrency transaction.\n\nThese transactions typically involve non-financial institutions."
        terminal_attendance:
          enum:
            - UNSPECIFIED
            - ATTENDED
            - UNATTENDED
            - NO_TERMINAL
          type: string
          description: Whether the card acceptor/terminal was attended.
        terminal_id:
          type: string
          description: Card acceptor or terminal identification number.
        terminal_location:
          enum:
            - ON_PREMISE
            - OFF_PREMISE_MERCHANT
            - OFF_PREMISE_CARDHOLDER
            - NO_TERMINAL
          type: string
          description: Location of the card acceptor/terminal.
        terminal_type:
          enum:
            - AUTO_DISPENSER_WITH_PIN
            - SELF_SERVICE
            - LIMITED_AMOUNT
            - IN_FLIGHT
            - ECOMMERCE
            - TRANSPONDER
          type: string
          description: Type of card acceptor/terminal.
        transaction_initiated_by:
          type: string
          description: Specifies whether the transaction was initiated by a cardholder or a merchant.
        zip:
          type: string
          description: United States ZIP code of the card acceptor or terminal.
      description: "Contains information about the point of sale, including details on how the card was presented.\n\nReturned if provided by the card network, and the request uses Transaction Model v2 of the Marqeta Core API.\nNot returned for Transaction Model v1 requests."
    pre_kyc_controls:
      type: object
      properties:
        balance_max:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: Specifies the maximum ledger balance allowed for members of the account holder group.
        cash_access_enabled:
          type: boolean
          description: "If set to `false`, this control prohibits an account holder's cards from being used at an ATM.\n\n*NOTE:* If a card product's `config.poi.atm` field is set to `false`, associated cards are prohibited from being used at an ATM regardless of this control's setting."
          default: false
        enable_non_program_loads:
          type: boolean
          description: "If set to `true`, funds can only be loaded from a program funding source.\n\nThis restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments."
          default: false
        international_enabled:
          type: boolean
          description: "If set to `false`, this control prohibits an account holder from conducting transactions with a non-domestic country code.\n\n*NOTE:* If a card product is configured to prohibit non-domestic transactions, its associated cards are prohibited from such transactions regardless of this control's setting."
          default: false
        is_reloadable_pre_kyc:
          type: boolean
          description: "If set to `false`, this control prohibits an account holder's account from being reloaded with funds after an initial load.\n\nThis restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments."
          default: false
      description: "Contains configuration fields for a number of controls.\n\n*NOTE:* These controls are in effect only if `kyc_required` is `ALWAYS` or `CONDITIONAL` and the account holder has not yet passed KYC."
    preceding_transaction:
      type: object
      properties:
        amount:
          type: number
          description: Amount of the preceding transaction.
        token:
          type: string
          description: Unique identifier of the preceding transaction.
      description: "Returned for `authorization.clearing` transaction types following a financial advice.\n\nContains information about the preceding transaction."
    program:
      required:
        - long_code
        - program_id
        - short_code
      type: object
      properties:
        long_code:
          type: string
          description: The program long code on the Marqeta platform.
        program_id:
          type: string
          description: The program identifier on the Marqeta platform.
        short_code:
          type: string
          description: The program short code on the Marqeta platform.
      description: Information about the program on the Marqeta platform.
    program_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - name
          type: object
          properties:
            name:
              type: string
    program_funding_source_request:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the program funding source is active.
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program funding source.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source.\nIf you do not include a token, the system will generate one automatically.\nAs this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.\nThis value cannot be updated."
    program_funding_source_response:
      required:
        - account
        - created_time
        - last_modified_time
        - name
        - token
      type: object
      properties:
        account:
          type: string
          description: Account identifier.
        active:
          type: boolean
          description: "Indicates whether the program funding source is active.\nThis field is returned if it exists in the resource."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program funding source.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the funding source.
    program_funding_source_update_request:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the program funding source is active.
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program funding source.
    program_gateway_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - name
          type: object
          properties:
            name:
              type: string
    program_reserve_account_balance:
      type: object
      properties:
        available_balance:
          type: number
          description: "Ledger balance, minus any authorized transactions that have not yet cleared.\nWhen using JIT Funding, this balance is usually equal to $0.00."
        balances:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/program_reserve_account_balance'
          description: "Contains program reserve account balance information, organized by currency code.\nSometimes referred to as a _program funding account_."
        credit_balance:
          type: number
          description: Not currently in use.
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        ledger_balance:
          type: number
          description: "When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.\nWhen using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared."
        pending_credits:
          type: number
          description: 'ACH loads that have been accepted, but for which the funding time has not yet elapsed.'
    program_reserve_transaction_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the program reserve account credit or debit.\nSometimes referred to as a _program funding account_."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        is_collateral:
          type: boolean
        last_modified_time:
          type: string
          description: 'The date and time when the resource was last modified, in UTC.'
          format: date-time
        memo:
          type: string
          description: Memo or note describing the transaction.
        state:
          enum:
            - PENDING
            - COMPLETE
          type: string
          description: Transaction state.
        tags:
          type: string
          description: Comma-delimited list of tags describing the transaction.
        token:
          type: string
          description: The unique identifier of the transaction response.
        transaction_token:
          type: string
          description: Unique identifier of the transaction.
        type:
          enum:
            - CREDIT
            - DEBIT
            - PENDING_CREDIT
            - PENDING_DEBIT
          type: string
          description: Transaction type.
    program_transfer:
      required:
        - amount
        - currency_code
        - type_token
      type: object
      properties:
        amount:
          type: number
          description: Amount of program transfer.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business.\nPass either a `business_token` or a `user_token`, not both.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_model'
          description: "Contains attributes that define characteristics of one or more fees.\nThis array is returned in the response when it is included in the request."
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Memo or note describing the program transfer.
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Comma-delimited list of tags describing the program transfer.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the program transfer.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        type_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the program transfer type.\n\nSend a `GET` request to `/programtransfers/types` to retrieve program transfer type tokens."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user.\nPass either a `user_token` or a `business_token`, not both.\n\nSend a `GET` request to `/users` to retrieve business tokens."
    program_transfer_response:
      required:
        - amount
        - currency_code
        - transaction_token
        - type_token
      type: object
      properties:
        amount:
          type: number
          description: Amount of program transfer.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business account holder.\nReturned if `user_token` is not specified."
        created_time:
          type: string
          description: 'Date and time when the program transfer object was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_detail'
          description: Contains attributes that define characteristics of one or more fees.
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Additional description of the program transfer.
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Comma-delimited list of tags describing the program transfer.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the program transfer.
        transaction_token:
          type: string
          description: Unique identifier of the transaction.
        type_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the program transfer type.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user account holder.\nReturned if `business_token` is not specified."
      description: 'Contains information about a program transfer, which moves funds from an account holder''s GPA to a program funding source.'
    program_transfer_type_request:
      required:
        - memo
        - program_funding_source_token
      type: object
      properties:
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Memo or note describing the program transfer type.
        program_funding_source_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the program funding source to which program transfers will be credited.\n\nSend a `GET` request to `/fundingsources/program` to retrieve program funding source tokens."
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Comma-delimited list of tags describing the program transfer type.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the program transfer type.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    program_transfer_type_response:
      required:
        - program_funding_source_token
        - token
      type: object
      properties:
        created_time:
          type: string
          description: 'The date and time when the program transfer type object was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the program transfer type object was last modified, in UTC.'
          format: date-time
        memo:
          type: string
          description: Memo or note describing the program transfer type.
        program_funding_source_token:
          type: string
          description: Unique identifier of the program funding source to which program transfers will be credited.
        tags:
          type: string
          description: Comma-delimited list of tags describing the program transfer type.
        token:
          type: string
          description: Unique identifier of the program transfer type request object.
    provisioning_controls:
      type: object
      properties:
        dwt_use_card_status_during_auth:
          type: boolean
        dwt_verify_atc_during_auth:
          type: boolean
        enable_discretionary_data_during_tar:
          type: boolean
        force_yellow_path_for_card_product:
          type: boolean
          description: A value of `true` requires identity verification set-up for all digital wallets at the card product level.
        in_app_provisioning:
          $ref: '#/components/schemas/in_app_provisioning'
        manual_entry:
          $ref: '#/components/schemas/manual_entry'
        wallet_provider_card_on_file:
          $ref: '#/components/schemas/wallet_provider_card_on_file'
        web_push_provisioning:
          $ref: '#/components/schemas/web_push_provisioning'
    push_to_card_disburse_request:
      required:
        - amount
        - currency_code
        - payment_instrument_token
      type: object
      properties:
        amount:
          maximum: 50000
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        currency_code:
          type: string
        memo:
          maxLength: 99
          minLength: 1
          type: string
        payment_instrument_token:
          maxLength: 36
          minLength: 1
          type: string
        soft_descriptor:
          $ref: '#/components/schemas/PTCSoftDescriptor'
        tags:
          maxLength: 255
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    push_to_card_disbursement_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        amount:
          type: number
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        currency_code:
          type: string
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        memo:
          maxLength: 99
          minLength: 1
          type: string
        payment_instrument_token:
          maxLength: 36
          minLength: 1
          type: string
        status:
          type: string
        tags:
          maxLength: 255
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    push_to_card_request:
      required:
        - address_1
        - city
        - country
        - cvv
        - exp_date
        - name_on_card
        - pan
        - postal_code
        - state
        - user_token
      type: object
      properties:
        address_1:
          maxLength: 255
          minLength: 1
          type: string
        address_2:
          maxLength: 255
          minLength: 1
          type: string
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          type: string
        cvv:
          type: string
        exp_date:
          type: string
        name_on_card:
          maxLength: 50
          minLength: 1
          type: string
        pan:
          maxLength: 19
          minLength: 14
          type: string
        postal_code:
          maxLength: 10
          minLength: 1
          type: string
        state:
          maxLength: 2
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          maxLength: 36
          minLength: 1
          type: string
    push_to_card_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        address_1:
          maxLength: 255
          minLength: 1
          type: string
        address_2:
          maxLength: 255
          minLength: 1
          type: string
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        exp_date:
          type: string
        fast_fund_transfer_eligible:
          type: boolean
          default: false
        gambling_fund_transfer_eligible:
          type: boolean
          default: false
        last_four:
          type: string
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        last_name:
          type: string
        name_on_card:
          type: string
        postal_code:
          maxLength: 10
          minLength: 1
          type: string
        state:
          maxLength: 2
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    real_time_fee_group:
      required:
        - active
        - name
        - token
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the real-time fee group is active.
          default: false
        created_time:
          type: string
          description: 'Date and time when the real-time fee group was created, in UTC.'
          format: date-time
        fee_tokens:
          uniqueItems: true
          type: array
          items:
            type: string
          description: Specifies the fees in this real-time fee group.
        last_modified_time:
          type: string
          description: 'Date and time when the real-time fee group was last modified, in UTC.'
          format: date-time
        name:
          type: string
          description: Descriptive name for the real-time fee group.
        token:
          type: string
          description: Unique identifier of the real-time fee group.
      description: Contains information about a real-time fee group.
    real_time_fee_group_create_request:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the real-time fee group is active.
          default: true
        fee_tokens:
          uniqueItems: true
          type: array
          items:
            type: string
          description: "Unique identifiers of the fees in this real-time fee group.\nSend a `GET` request to `/fees` to retrieve fee resource tokens.\n\nNo two fees in the group can be applicable to the same transaction type (in other words, each fee must have a different value for its `real_time_assessment.transaction_type` field)."
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Descriptive name for the real-time fee group.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the real-time fee group.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    real_time_fee_group_request:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the real-time fee group is active.
          default: true
        fee_tokens:
          uniqueItems: true
          type: array
          items:
            type: string
          description: "Specifies the fees in this real-time fee group.\nSend a `GET` request to `/fees` to retrieve fee resources tokens.\n\nNo two fees in the group can be applicable to the same transaction type (in other words, each fee must have a different value for its `real_time_assessment.transaction_type` field)."
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Descriptive name for the real-time fee group.
    real_time_standin_criteria:
      type: object
      properties:
        enabled:
          type: boolean
          description: "If set to `true`, Commando Mode is automatically enabled by events defined in the `real_time_standin_criteria` object.\nIf set to `false`, Auto Commando Mode is not enabled."
          default: false
        include_application_errors:
          type: boolean
          description: 'If set to `true`, an application error (any non-connection, non-timeout error) automatically enables Commando Mode when `real_time_standin_criteria.enabled` is also `true`.'
          default: false
        include_connection_errors:
          type: boolean
          description: 'If set to `true`, a non-timeout connection error automatically enables Commando Mode when `real_time_standin_criteria.enabled` is also `true`.'
          default: false
        include_response_timeouts:
          type: boolean
          description: 'If set to `true`, a gateway response slower than 3000ms automatically enables Commando Mode when `real_time_standin_criteria.enabled` is also `true`.'
          default: false
      description: Specifies which event types automatically enable Commando Mode.
    request_for_apple_pay_wpp_JWT:
      required:
        - card_token
      type: object
      properties:
        card_token:
          type: string
          description: Unique identifier of the card resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
        req-sys-id:
          type: string
          description: Random pseudo-unique value used for troubleshooting between multiple parties.
    reset_user_password_email_model:
      required:
        - email
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: Cardholder email address.
    reset_user_password_model:
      required:
        - new_password
        - user_token
      type: object
      properties:
        new_password:
          maxLength: 255
          minLength: 1
          type: string
          description: New password to the cardholder's user account on the Marqeta platform.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the cardholder.
    response:
      required:
        - code
        - memo
      type: object
      properties:
        additional_information:
          type: string
          description: "Information about the velocity control applied to the transaction.\n\n*NOTE:* This field is returned only in transaction response objects.\nIt is not returned in address verification or card security verification response objects."
        code:
          type: string
          description: "Four-digit response code for address verification, card security code verification, or transactions.\n\nFor account name verification, the four digits correspond with assertions that the first, middle, last, and full name of the cardholder on the Marqeta platform match the data provided by the cardholder.\n`0` indicates no validation was performed, `1` indicates the match was unsuccessful (unmatched), `2` indicates the match was partial, and `3` indicates the match was exact.\nFor example:\n\n[cols=\"2,3,3,3,3\"]\n!===\n! Code ! First Name ! Middle Name ! Last Name ! Full Name\n\n! 0000\n! Not validated\n! Not validated\n! Not validated\n! Not validated\n\n! 1111\n! Unmatched\n! Unmatched\n! Unmatched\n! Unmatched\n\n! 3333\n! Exact match\n! Exact match\n! Exact match\n! Exact match\n\n! 1232\n! Unmatched\n! Partial match\n! Exact match\n! Partial match\n!===\n\nFor address verification responses, the code is an assertion by the Marqeta platform as to whether its address verification data matches that provided by the cardholder:\n\n[cols=\"2,3,3\"]\n!===\n! Code ! Address ! Postal Code\n\n! 0000\n! Match\n! Match\n\n! 0001\n! Match\n! Unmatched\n\n! 0100\n! Unmatched\n! Match\n\n! 0101\n! Unmatched\n! Unmatched\n\n! 0200\n! Data not present\n! Match\n\n! 0201\n! Data not present\n! Unmatched\n\n! 0002\n! Match\n! Data not present\n\n! 0102\n! Unmatched\n! Data not present\n\n! 0303\n! Not validated\n! Not validated\n!===\n\nFor card security verification, the code indicates whether the verification check passed and can have these possible values:\n\n* 0000 – passed\n* 0001 – did not pass\n\nFor a transaction, the code describes the outcome of the attempted transaction.\nFor the full list of transaction codes, see <</developer-guides/about-transactions#_transaction_response_codes, Transaction response codes>>."
        memo:
          type: string
          description: Additional text that describes the response.
      description: 'Response codes and memos for account name verification, address verification, card security verification, and transactions.'
    result:
      type: object
      properties:
        codes:
          type: array
          items:
            $ref: '#/components/schemas/result_code'
          description: An array of KYC verification result code objects.
        status:
          type: string
          description: KYC verification status.
      description: Contains information about the KYC verification result.
    result_code:
      type: object
      properties:
        code:
          type: string
          description: 'For any `PENDING` or `FAILURE` outcome, see the <<user_kyc_failure_codes, User KYC failure codes>> table, the <<outcome_reasons_for_the_business, Outcome reasons for the business>> table, or the <<outcome_reasons_for_individuals_associated_with_a_business, Outcome reasons for individuals associated with a business>> table.'
        message:
          type: string
          description: Result code description.
      description: Contains the KYC result code and a descriptive message about that codes.
    risk_assessment:
      type: object
      properties:
        score:
          type: string
          description: Wallet provider's decision as to whether the digital wallet token should be provisioned.
        version:
          type: string
          description: Wallet provider's risk assessment version.
      description: Contains the digital wallet provider's risk assessment for provisioning the digital wallet token.
    riskcontrol_tags:
      type: object
      properties:
        rule_name:
          type: string
          description: 'Name of the rule, as defined in the Real-Time Decisioning dashboard, that was triggered.'
        tag:
          type: string
          description: Tag name defined in the rule definition in the Real-Time Decisioning dashboard.
        values:
          type: array
          items:
            type: string
          description: Value associated with the tag.
      description: The RiskControl tags that were triggered by the transaction.
    samsung_push_tokenize_request_data:
      type: object
      properties:
        card_type:
          type: string
          description: Specifies the type of card.
        display_name:
          type: string
          description: "Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).\n`Visa 5678`, for example."
        extra_provision_payload:
          type: string
          description: Encrypted card or cardholder details.
        last_digits:
          type: string
          description: Last four digits of the primary account number of the physical or virtual card.
        network:
          type: string
          description: Specifies the card network of the physical or virtual card.
        token_service_provider:
          type: string
          description: 'Specifies the network that provides the digital wallet token service, as determined by the Samsung Wallet library.'
      description: Contains details about a card tokenization push request.
    selective_auth:
      type: object
      properties:
        dmd_location_sensitivity:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          type: integer
          description: "Determines what type of merchant information is required for a match (authorization).\nNot relevant if `enable_regex_search_chain = false`.\n\n* *0* – Requires exact match on card acceptor name and postal code to existing entry in Marqeta Merchant database (most restrictive).\n* *1* – Partial match on card acceptor name (least restrictive).\n* *2* – Partial match on card acceptor name; exact match on card acceptor city.\n* *3* – Partial match on card acceptor name; exact match on card acceptor postal code.\n* *4* – Partial match on card acceptor name; exact match on street address 1 and postal code."
          format: int32
          default: 0
        enable_regex_search_chain:
          type: boolean
          description: Set to `true` to perform regular expression checking on the description received in the authorization.
          default: false
        sa_mode:
          enum:
            - 0
            - 1
            - 2
          type: integer
          description: "Specifies the selective authorization mode.\n\n* *0* — Inactive\n* *1* — Active (attempts to authorize a merchant that does not have a recognized MID by matching other pieces of information)\n* *2* — Logging and notification (checks the transaction and logs results, but does not authorize)\n\nSelective authorization applies to transactions that are limited to specific merchants.\nMatching requirements for authorization are set by the `dmd_location_sensitivity` field."
          format: int32
          default: 1
      description: Contains information about authorization decisions.
    sending_provisioning_data_to_google_pay_backend_request:
      required:
        - card_setting
        - card_token
        - client_session_id
        - integrator_id
        - public_device_id
        - public_wallet_id
        - server_session_id
        - token_setting
      type: object
      properties:
        card_setting:
          enum:
            - 0
            - 1
          type: integer
          description: "Indicates if the Funding Primary Account Number (FPAN) will be attempted.\n\n* *1* - FPAN save will be attempted.\n* *0* - FPAN save will not be attempted."
          format: int32
          example: 0
        card_token:
          type: string
          description: Unique identifier of the card resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
        client_session_id:
          type: string
          description: String provided by Google Wallet that identifies the client session.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
        integrator_id:
          type: string
          description: Google-assigned string that uniquely identifies both the integrator that is initiating the session and the issuer of the card.
          example: ACMEISSUER_1
        public_device_id:
          type: string
          description: String provided by Google Wallet that identifies the Android device that will receive the digital wallet token.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
        public_wallet_id:
          type: string
          description: String provided by Google Wallet that identifies the device-scoped wallet that receives the digital wallet token.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
        server_session_id:
          type: string
          description: String provided by Google Wallet that identifies the backend session.
          example: 8c84fab9-889c-4cb7-a330-accac5799ea5
        token_setting:
          enum:
            - 0
            - 1
          type: integer
          description: "Indicates if tokenization will be attempted.\n\n* *1* - Tokenization will be attempted.\n* *0* - Tokenization will not be attempted."
          format: int32
          example: 0
    settlement_data:
      type: object
      properties:
        amount:
          type: number
          description: The settled amount.
        conversion_rate:
          type: number
          description: "Returned when the transaction currency is different from the origination currency.\n\nConversion rate between the origination currency and the settlement currency."
        currency_code:
          type: string
          description: The ISO 4217 code of the currency used in the transaction.
      description: 'Contains information from the card network about currency conversion at the time of settlement, including the original currency of the transaction, the amount of the transaction in the original currency, and the conversion rate.'
    shipping:
      type: object
      properties:
        care_of_line:
          type: string
          description: "Adds the specified value as a care of (C/O) line to the mailing carrier.\n\n*NOTE:* This field can be specified on cards, card products, and bulk card orders.\nIf you specify this field at multiple levels, the order of precedence is: card, bulk card order, card product."
        method:
          enum:
            - LOCAL_MAIL
            - LOCAL_MAIL_PACKAGE
            - GROUND
            - TWO_DAY
            - OVERNIGHT
            - INTERNATIONAL
            - INTERNATIONAL_PRIORITY
            - LOCAL_PRIORITY
            - FEDEX_EXPEDITED
            - FEDEX_REGULAR
            - UPS_EXPEDITED
            - UPS_REGULAR
            - USPS_EXPEDITED
            - USPS_REGULAR
          type: string
          description: Specifies the shipping service.
        recipient_address:
          $ref: '#/components/schemas/fulfillment_address_request'
        return_address:
          $ref: '#/components/schemas/fulfillment_address_request'
      description: Specifies shipping details for the order.
    simulation_response_model:
      type: object
      properties:
        raw_iso8583:
          type: object
          additionalProperties:
            type: object
        transaction:
          $ref: '#/components/schemas/transaction_model'
    special:
      type: object
      properties:
        merchant_on_boarding:
          type: boolean
          description: 'If set to `true`, cards of this card product type can be used for merchant onboarding.'
          default: false
      description: Contains information about merchant onboarding.
    spend_control_association:
      type: object
      properties:
        card_product_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the card product.\n\nPass either `card_product_token` or `user_token`, not both."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the cardholder.\n\nPass either `card_product_token` or `user_token`, not both."
      description: Defines the group of users to which the velocity control applies.
    ssn_response_model:
      type: object
      properties:
        nin:
          type: string
          description: National Identification Number (NIN).
        sin:
          type: string
          description: Social Insurance Number (SIN).
        ssn:
          type: string
          description: United States Social Security Number (SSN).
        tin:
          type: string
          description: Taxpayer Identification Number (TIN).
      description: Contains tax identification information.
    store_response_model:
      required:
        - address1
        - city
        - created_time
        - last_modified_time
        - merchant_token
        - mid
        - name
        - state
      type: object
      properties:
        active:
          type: boolean
          default: true
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        keyed_auth_cvv_enforced:
          type: boolean
          default: false
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        merchant_token:
          maxLength: 36
          minLength: 0
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        name:
          maxLength: 40
          minLength: 0
          type: string
        network_mid:
          maxLength: 50
          minLength: 1
          type: string
        partial_approval_capable:
          type: boolean
          default: false
        partial_auth_flag:
          type: boolean
          description: 1 char max
          default: true
        phone:
          maxLength: 10
          minLength: 0
          type: string
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 255
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: The unique identifier of the merchant
        zip:
          maxLength: 10
          minLength: 0
          type: string
    strong_customer_authentication_limits:
      type: object
      properties:
        cavv_authentication_amount_incremental_percentage:
          type: string
          description: "If you have enabled CAVV authentication amount validation, the value of this field specifies the maximum allowable variance between the authorization amount and the 3D Secure authentication amount.\nExpressed as a percentage."
        enable_cavv_authentication_amount_validation:
          type: boolean
          description: "If set to `true`, Marqeta validates the amount in the authorization transaction against the amount in the 3D Secure authentication attempt.\nIf the authorization amount is greater than the 3D Secure authentication amount, Marqeta rejects the transaction.\nYou can specify an allowable variance for the 3D Secure authentication amount in the `cavv_authentication_amount_incremental_percentage` field."
        sca_contactless_cumulative_amount_limit:
          type: number
          description: "Specifies the cumulative limit of transactions the cardholder can perform before receiving an SCA challenge.\n\nA value of `0` in this field means that the cumulative amount spent in contactless POS transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served."
        sca_contactless_transaction_limit:
          type: number
          description: "Specifies the maximum allowable amount for a single contactless point-of-sale (POS) transaction, above which the cardholder receives a strong customer authentication (SCA) challenge.\n\nA value of `0` in this field means that the amount of any single contactless POS transaction performed by the cardholder does not impact the decision of whether or not an SCA challenge is served."
        sca_contactless_transactions_count_limit:
          type: integer
          description: "Specifies the number of contactless POS transactions the cardholder can perform before receiving an SCA challenge.\n\nA value of `0` in this field means that the number of contactless POS transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served."
          format: int32
        sca_contactless_transactions_currency:
          type: string
          description: "Specifies the currency type for contactless POS transactions.\n\nThis field is required if either the `sca_contactless_transaction_limit` field or the `sca_contactless_cumulative_amount_limit` field in this object contains a value, even if that value is `0`."
        sca_lvp_cumulative_amount_limit:
          type: number
          description: "Specifies the cumulative limit of LVP e-commerce transactions the cardholder can perform before receiving an SCA challenge.\n\nFor example, if you set the value of this field to `100.00`, your cardholder can perform two transactions for `30.00` and two transactions for `20.00` before receiving an SCA challenge.\n\nIf you leave this field blank, the cumulative amount spent in LVP e-commerce transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served."
        sca_lvp_transaction_limit:
          type: number
          description: "Specifies the maximum allowable amount for a single low-value payment (LVP) e-commerce transaction, above which the cardholder receives a strong customer authentication (SCA) challenge.\n\nIf you leave this field blank, the amount of any single LVP e-commerce transaction performed by the cardholder does not impact the decision of whether or not an SCA challenge is served."
        sca_lvp_transactions_count_limit:
          type: integer
          description: "Specifies the number of LVP e-commerce transactions the cardholder can perform before receiving an SCA challenge.\n\nIf you leave this field blank, the total number of LVP e-commerce transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served."
          format: int32
        sca_lvp_transactions_currency:
          type: string
          description: "Specifies the currency type for LVP e-commerce transaction limits.\n\nThis field is required if any one of the `sca_lvp_transaction_limit`, `sca_lvp_cumulative_amount_limit`, or `sca_lvp_transactions_count_limit` fields in this object contains a value, even if that value is `0`."
        sca_tra_exemption_amount_limit:
          type: number
          description: "Specifies the maximum allowable amount for a single low-value payment (LVP) e-commerce transaction with transaction risk analysis (TRA) exemption sent by the merchant or acquirer.\nIf the transaction amount exceeds the specified limit, then the transaction is either approved or it receives a strong customer authentication (SCA) challenge based on `sca_lvp_transaction_limit` and `sca_lvp_transactions_currency`."
      description: Contains information about Strong Customer Authentication (SCA) behavior for contactless point-of-sale (POS) and low-value payment (LVP) e-commerce transactions.
    tag:
      type: object
      properties:
        name:
          type: string
          description: Name of the tag.
        value:
          type: string
          description: Value of the tag.
    terminal_model:
      type: object
      properties:
        card_presence:
          type: string
          description: Indicates whether the card was present during the transaction.
        cardholder_presence:
          type: string
          description: Indicates whether the cardholder was present during the transaction.
        partial_approval_capable:
          type: string
          description: Indicates whether the card acceptor or terminal supports partial-approval transactions.
        pin_present:
          type: string
          description: Indicates whether the cardholder entered a PIN during the transaction.
        special_condition_indicator:
          enum:
            - UNSPECIFIED
            - CRYPTOCURRENCY_PURCHASE
            - QUASI_CASH
            - DEBT_PAYMENT
          type: string
          description: "Indicates a higher-risk operation, such as a quasi-cash or cryptocurrency transaction.\n\nThese transactions typically involve non-financial institutions."
        tid:
          type: string
          description: Card acceptor or terminal identification number.
        transaction_initiated_by:
          type: string
          description: Specifies whether the transaction was initiated by a cardholder or a merchant.
      description: "Contains information about the point of sale, including details on how the card was presented.\n\nReturned if provided by the card network, and the request uses Transaction Model v1 of the Marqeta Core API.\nNot returned for Transaction Model v2 requests."
    text:
      required:
        - name_line_1
      type: object
      properties:
        name_line_1:
          $ref: '#/components/schemas/text_value'
        name_line_2:
          $ref: '#/components/schemas/text_value'
        name_line_3:
          $ref: '#/components/schemas/text_value'
      description: Specifies personalized text that appears on the card.
    text_value:
      type: object
      properties:
        value:
          type: string
          description: Line of personalized text printed on the card.
    token_request:
      required:
        - account_number
        - cvv_number
        - exp_date
      type: object
      properties:
        account_number:
          type: string
          description: Payment card account number.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business account holder.\nThis token is required if the `user_token` is not included.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        cvv_number:
          maxLength: 4
          minLength: 3
          type: string
          description: Payment card CVV2 number.
        exp_date:
          type: string
          description: Payment card expiration date.
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        postal_code:
          type: string
          description: Postal code of the account holder (user or business).
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding account.\nIf you do not include a token, the system will generate one automatically.\nAs this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user account holder.\nThis token is required if the `business_token` is not included.\n\nSend a `GET` request to `/users` to retrieve user tokens."
        zip:
          type: string
          description: United States ZIP code of the account holder (user or business).
    token_service_provider:
      required:
        - pan_reference_id
      type: object
      properties:
        correlation_id:
          type: string
          description: Unique value representing a tokenization request (Mastercard only).
        pan_reference_id:
          type: string
          description: Unique identifier of the digital wallet token primary account number (PAN) within the card network.
        token_assurance_level:
          type: string
          description: _(Mastercard only)_ Represents the confidence level in the digital wallet token.
        token_eligibility_decision:
          type: string
          description: Digital wallet's decision as to whether the digital wallet token should be provisioned.
        token_expiration:
          type: string
          description: Expiration date of the digital wallet token.
        token_pan:
          type: string
          description: Primary account number (PAN) of the digital wallet token.
        token_reference_id:
          type: string
          description: Unique identifier of the digital wallet token within the card network.
        token_requestor_id:
          type: string
          description: "Unique numerical identifier of the token requestor within the card network.\nThese ID numbers map to `token_requestor_name` field values as follows:\n\n*Mastercard*\n\n* 50110030273 – `APPLE_PAY`\n* 50120834693 – `ANDROID_PAY`\n* 50139059239 – `SAMSUNG_PAY`\n\n*Visa*\n\n* 40010030273 – `APPLE_PAY`\n* 40010075001 – `ANDROID_PAY`\n* 40010043095 – `SAMSUNG_PAY`\n* 40010075196 – `MICROSOFT_PAY`\n* 40010075338 – `VISA_CHECKOUT`\n* 40010075449 – `FACEBOOK`\n* 40010075839 – `NETFLIX`\n* 40010077056 – `FITBIT_PAY`\n* 40010069887 – `GARMIN_PAY`"
        token_requestor_name:
          type: string
          description: "Name of the token requestor within the card network.\n\n*NOTE:* The list of example values for this field is maintained by the card networks and is subject to change."
        token_score:
          type: string
          description: Token score assigned by the digital wallet.
        token_type:
          type: string
          description: Type of the digital wallet token.
      description: Contains information held and provided by the token service provider (card network).
    token_update_request:
      required:
        - exp_date
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the card funding source is active.
          default: true
        exp_date:
          type: string
          description: Expiration date for the payment card.
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
    transaction_card_acceptor:
      type: object
      properties:
        address:
          type: string
          description: "Card acceptor's address.\nMay be returned if the request uses Transaction Model v1 of the Marqeta Core API.\nNot returned for Transaction Model v2 requests."
        city:
          type: string
          description: Card acceptor's city.
        country_code:
          type: string
          description: "Card acceptor's country code.\nMay be returned if the request uses Transaction Model v2 of the Marqeta Core API.\nNot returned for Transaction Model v1 requests."
        country_of_origin:
          type: string
          description: "The merchant's country of origin.\n\nA merchant's country of origin can be different from the country in which the merchant is located.\nFor example, embassies are physically located in countries that are not their country of origin: a Mexican embassy might be physically located in Singapore, but the country of origin is Mexico.\n\nThis field is included when the cardholder conducts a transaction with a government-controlled merchant using a Marqeta-issued card."
        customer_service_phone:
          type: string
        independent_sales_organization_id:
          type: string
        mcc:
          type: string
          description: Merchant category code (MCC).
        mcc_groups:
          type: array
          items:
            type: string
          description: An array of `mcc_groups`.
        merchant_tax_id:
          type: string
        mid:
          type: string
          description: The merchant identifier.
        name:
          type: string
          description: Card acceptor's name.
        network_assigned_id:
          type: string
        network_mid:
          type: string
          description: The merchant identifier on the card network.
        payment_facilitator_id:
          type: string
        payment_facilitator_name:
          type: string
          description: "The name of the payment facilitator, including the sub-merchant identifier, of an original credit transaction.\nThis field is returned when a payment facilitator participates in the transaction."
        phone:
          type: string
        poi:
          $ref: '#/components/schemas/terminal_model'
        postal_code:
          type: string
          description: Card acceptor's postal code.
        special_merchant_id:
          type: string
        state:
          type: string
          description: "Two-character state, province, or territorial abbreviation.\n\nFor a complete list of valid state and province abbreviations, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.\n\n*Note*: Non-US merchants may return more than 2 char for this field."
        sub_merchant_id:
          type: string
        transfer_service_provider_name:
          type: string
          description: "The name of the transfer service provider of a money transfer original credit transaction.\nThis field is included when a transfer service provider participates in the transaction."
        url:
          type: string
      description: Contains information about the merchant.
    transaction_controls:
      type: object
      properties:
        accepted_countries_token:
          type: string
          description: "Set to `accept_us_only` to allow transactions only within the US.\n\nSet to `decline_ofac_countries` to allow international transactions except with countries that the Financial Action Task Force (FATF) and Office of Foreign Assets Control (OFAC) have identified as high risk.\n\nUsers with the Admin role can create and update additional lists of accepted countries for transactions at the `/acceptedcountries` endpoint.\nSee <</core-api/accepted-countries, Accepted Countries>>."
        address_verification:
          $ref: '#/components/schemas/avs_controls'
        allow_chip_fallback:
          type: boolean
          description: Indicates whether to allow transactions where a Europay Mastercard and Visa (EMV) chip-enabled card was processed using the magstripe as fallback.
          default: false
        allow_first_pin_set_via_financial_transaction:
          type: boolean
          description: "*WARNING:* This field is deprecated and will be unsupported in a future release.\n\nAllows cardholders to define a personal identification number (PIN) as they complete their first PIN-debit transaction."
          default: false
        allow_gpa_auth:
          type: boolean
          description: "If set to `true`, transactions can be authorized using GPA funds.\n\n*NOTE:* For most programs, this field should be set to `true`."
          default: false
        allow_mcc_group_authorization_controls:
          type: boolean
          description: "The <</core-api/mcc-groups, MCC group>> `authorization_controls` object allows you to automatically increase authorization holds and to specify authorization expiration times based on merchant type.\nBy default, these settings apply to all cards in your program.\nYou can, however, exempt cards associated with a particular card product by setting this field to `false`.\n\n*NOTE:* Partial authorizations are disallowed if this field is set to `true`."
          default: false
        allow_network_load:
          type: boolean
          description: "Indicates whether card network loads are allowed.\nThe associated card's state must be `ACTIVE` or the load will be rejected."
          default: false
        allow_network_load_card_activation:
          type: boolean
          description: "Indicates whether card network loads are allowed.\nSets the associated card's state to `ACTIVE` if its current state is `INACTIVE`."
          default: false
        allow_quasi_cash:
          type: boolean
          description: "Indicates whether quasi-cash transactions are allowed.\nIn a quasi-cash transaction, the cardholder purchases an item that can be directly converted to cash, such as traveler's checks, money orders, casino chips, or lottery tickets."
          default: false
        always_require_icc:
          type: boolean
          description: 'If set to `true`, cards of this card product type require an Integrated Circuit Card.'
          default: false
        always_require_pin:
          type: boolean
          description: 'If set to `true`, cards of this card product type require a personal identification number (PIN).'
          default: false
        enable_credit_service:
          type: boolean
          default: false
        enable_partial_auth_approval:
          type: boolean
          description: "Set to `true` to enable partial authorizations.\n\nWhen this setting is `false` and the requested authorization amount exceeds available funds, the transaction is declined.\nWhen this setting is `true` and the requested authorization amount exceeds available funds, the transaction is authorized for the amount of available funds."
          default: false
        ignore_card_suspended_state:
          type: boolean
          description: "Allows transactions to be approved even if the card's `state = SUSPENDED`.\nWhen this field is set to `true`, the card behaves as if its `state = ACTIVE`."
          default: false
        notification_language:
          type: string
          description: "Specifies the language for 3D Secure and digital wallet token notifications sent to cardholders under this card program.\n\nYou can send notifications to your cardholders in the following languages:\n\n* *ces* – Czech\n* *deu* – German\n* *eng* – English\n* *fra* – French\n* *grc* – Greek\n* *ita* – Italian\n* *nld* – Dutch\n* *pol* – Polish\n* *prt* – Portuguese\n* *rou* – Romanian\n* *spa* – Spanish\n* *swe* – Swedish\n\nBy default, notifications are sent in English.\n\nTo specify the language for OTP notifications at the user level, see <</core-api/users, Users>>.\nLanguages set at the user level take precedence over the language set at the card product level."
        quasi_cash_exempt_merchant_group_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "The token of the merchant group that you want to exempt from quasi-cash transaction authorization control, allowing your cardholders to conduct quasi-cash transactions.\nIn a quasi-cash transaction, the cardholder purchases an item that can be directly converted to cash, such as traveler's checks, money orders, casino chips, or lottery tickets.\n\nYou can specify a merchant group token in addition to whatever merchant identifiers you listed in the `quasi_cash_exempt_mids` field, if any.\nFor more information, see <</core-api/merchant-groups, Merchant Groups>>."
        quasi_cash_exempt_mids:
          type: string
          description: "Comma-separated list of merchant identifiers that you want to exempt from quasi-cash transaction authorization control, allowing your cardholders to conduct quasi-cash transactions.\nIn a quasi-cash transaction, the cardholder purchases an item that can be directly converted to cash, such as traveler's checks, money orders, casino chips, or lottery tickets."
        require_card_not_present_card_security_code:
          type: boolean
          description: 'A value of `true` indicates that if `card_presence_required` is `true`, the card''s security code is required.'
          default: false
        strong_customer_authentication_limits:
          $ref: '#/components/schemas/strong_customer_authentication_limits'
      description: Controls transactional characteristics of card usage.
    transaction_device:
      type: object
      properties:
        binding_id:
          type: string
          description: Unique identifier of the data component bound to the credential.
        ip_address:
          type: string
          description: "IP address of the device.\nThe presence of the IP address helps determine if the transaction was initiated from an unusual network, helping establish a pattern of safe device usage that further confirms the authenticity of the consumer who initiated the transaction."
        location:
          type: string
          description: "Geographic coordinates of the device.\nContains the latitude and longitude of the device used when the cardholder was authenticated during checkout.\nThis field helps to determine if the transaction was initiated from an unexpected location."
        phone_number:
          type: string
          description: "Telephone number of the device.\nContains the phone number that was used to authenticate the consumer during checkout, or the consumer's preferred phone number.\nThe presence of the phone number helps establish the consumer's authenticity when matching the phone number provided during checkout to a list of known phone numbers for the consumer."
      description: "Contains information about the device used in the transaction to enhance the risk decisioning process.\nUse this data to improve fraud prevention and dispute resolution."
    transaction_metadata:
      type: object
      properties:
        airline:
          $ref: '#/components/schemas/airline'
        authorization_life_cycle:
          type: integer
          description: Number of days the pre-authorization is in effect.
          format: int32
        cross_border_transaction:
          type: boolean
          description: 'Whether the transaction is cross-border, i.e., when the merchant and the cardholder are located in two different countries.'
          default: false
        is_deferred_authorization:
          type: boolean
          description: 'Indicates an offline authorization made during an interruption of card network connectivity, such as a purchase on a flight.'
        is_lodging_auto_rental:
          type: boolean
          description: Whether the transaction is a lodging or vehicle rental.
          default: false
        lodging_auto_rental_start_date:
          type: string
          description: Date and time when the lodging check-in or vehicle rental began.
          format: date-time
        moto_indicator:
          enum:
            - UNKNOWN
            - MANUAL
            - RECURRING
            - INSTALLMENT
            - OTHERS
          type: string
          description: Indicates the type of mail or telephone order transaction.
        one_leg_out:
          type: boolean
        payment_channel:
          enum:
            - OTHER
            - ATM
            - ECOMMERCE
            - MAIL
            - PHONE
            - MOTO
            - EU_MOTO_NON_SECURE
          type: string
          description: Channel from which the transaction was originated.
        special_purchase_id:
          type: string
        transaction_category:
          enum:
            - RETAIL_SALE
            - BILL_PAY
            - HOTEL
            - HEALTH_CARE
            - RESTAURANT
            - AUTO_RENTAL
            - AIRLINE
            - PAYMENT
            - HOSPITALIZATION_COLLEGE
            - PHONE_MAIL_ECOMMERCE
            - ATM
            - TRANSIT
            - EXTENDED_AUTHORIZATION
          type: string
          description: Industry for which the transaction was originated.
        transit:
          $ref: '#/components/schemas/transit'
      description: "Contains merchant-provided metadata related to the transaction, including details about lodging- and transit-related purchases.\n\nMay be returned if the request uses Transaction Model v2 of the Marqeta Core API.\nNot returned for Transaction Model v1 requests."
    transaction_model:
      title: Transaction object
      required:
        - acting_user_token
        - amount
        - state
        - token
        - type
      type: object
      properties:
        account_funding:
          $ref: '#/components/schemas/account_funding'
        account_name_verification:
          $ref: '#/components/schemas/account_name_verification_model'
        acquirer:
          $ref: '#/components/schemas/acquirer'
        acquirer_fee_amount:
          type: number
          description: "Indicates the amount of the acquirer fee.\nAccount holders are sometimes charged an acquirer fee for card use at ATMs, fuel dispensers, and so on."
        acquirer_reference_data:
          type: string
        acquirer_reference_id:
          type: string
          description: "Acquirer-assigned unique identifier of the transaction.\nUseful for settlement and reconciliation."
        acting_user_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Unique identifier of the user who conducted the transaction.\nThis might be a child user configured to share its parent's account balance."
        address_verification:
          $ref: '#/components/schemas/address_verification_model'
        advice_reason_code:
          type: string
        advice_reason_details:
          type: string
        amount:
          type: number
          description: Amount of the transaction.
        amount_to_be_released:
          type: number
          description: "Amount of original authorization to be released.\nThis field appears in final clearing transactions where the clearing amount is lower than the authorization amount."
        approval_code:
          type: string
          description: 'Unique identifier assigned to an authorization, printed on the receipt at point of sale.'
        atc_information:
          $ref: '#/components/schemas/atc_information'
        auto_reload:
          $ref: '#/components/schemas/auto_reload_model'
        bank_transfer_token:
          type: string
        batch_number:
          type: string
          description: The batch number of the transaction.
        billpay:
          $ref: '#/components/schemas/BillPayResponse'
        business:
          $ref: '#/components/schemas/business_metadata'
        business_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Unique identifier of the business that owns the account that funded the transaction.
        card:
          $ref: '#/components/schemas/card_response'
        card_acceptor:
          $ref: '#/components/schemas/transaction_card_acceptor'
        card_holder_model:
          $ref: '#/components/schemas/user_card_holder_response'
        card_product_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Unique identifier of the card product.
        card_security_code_verification:
          $ref: '#/components/schemas/card_security_code_verification'
        card_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Unique identifier of the card.\nUseful when a single account holder has multiple cards."
        cardholder_authentication_data:
          $ref: '#/components/schemas/cardholder_authentication_data'
        cash_back_amount:
          type: number
          description: "Amount of cash back requested by the cardholder during the transaction.\nIncluded in the total transaction amount."
        chargeback:
          $ref: '#/components/schemas/chargeback_response'
        clearing_record_sequence_number:
          type: string
          description: A sequence number that identifies a specific clearing message among multiple clearing messages for an authorization.
        created_time:
          type: string
          description: "Date and time when the Marqeta platform created the transaction entry, in UTC format.\nFor example, when Marqeta processed the clearing record for a refund."
          format: date-time
        currency_code:
          type: string
          description: Currency type of the transaction.
        currency_conversion:
          $ref: '#/components/schemas/currency_conversion'
        deferred_settlement_days:
          type: string
        digital_wallet_token:
          $ref: '#/components/schemas/digital_wallet_token'
        digital_wallet_token_transaction_service_provider_info:
          $ref: '#/components/schemas/digital_service_provider'
        direct_deposit:
          $ref: '#/components/schemas/DepositDepositResponse'
        dispute:
          $ref: '#/components/schemas/DisputeModel'
        duration:
          type: integer
          description: 'Duration of the transaction on Marqeta''s servers, in milliseconds.'
          format: int32
        enhanced_data_token:
          type: string
          description: The enhanced commercial card data token for the transaction.
        fee:
          $ref: '#/components/schemas/fee'
        fee_transfer:
          $ref: '#/components/schemas/fee_transfer_response'
        fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
          description: "List of fees associated with the transaction.\n\nThis array is returned if it exists in the resource."
        fraud:
          $ref: '#/components/schemas/fraud_view'
        from_account:
          type: string
          description: Specifies the account type for ATM transactions.
        gpa:
          $ref: '#/components/schemas/cardholder_balance'
        gpa_order:
          $ref: '#/components/schemas/gpa_response'
        gpa_order_unload:
          $ref: '#/components/schemas/gpa_returns'
        identifier:
          type: string
          description: Sequential identifier of the transaction.
        incremental_authorization_transaction_tokens:
          type: array
          items:
            type: string
          description: An array of incremental authorization transaction tokens.
        interchange_rate_descriptor:
          type: string
        is_final_clearing:
          type: boolean
          description: "Indicates the final clearing event for an authorization.\nIf the final cleared amount is lower than the authorized amount, you must release the hold on the funds per the value in the `amount_to_be_released` field."
        is_preauthorization:
          type: boolean
          description: Indicates if the transaction is a pre-authorization.
          default: false
        isaIndicator:
          enum:
            - MULTI_CURRENCY
            - SINGLE_CURRENCY
            - REBATE_CANCELLED
            - MULTI_CURRENCY_NON_US_COUNTRIES
            - SINGLE_CURRENCY_PAID_BY_ISSUER
            - NO_CHARGE_ASSESSED
          type: string
          description: The international service assessment indicator indicates if an ISA fee is applicable to the transaction.
        issuer_interchange_amount:
          type: number
          description: The amount of interchange charged by the card issuer.
        issuer_payment_node:
          type: string
          description: Unique identifier of the Marqeta platform server that received the transaction from the card network.
        issuer_received_time:
          type: string
          description: 'Date and time when the Marqeta platform received the transaction from the card network, in UTC.'
        local_transaction_date:
          type: string
          description: "Indicates the local time of the transaction at the card acceptor's location.\nYou can use this field to determine the correct time of the transaction when filing a dispute."
          format: date-time
        merchant:
          $ref: '#/components/schemas/merchant_response_model'
        merchant_initiated_original_trace_id:
          type: string
          description: Unique network identification value formed by combining the 6- to 9-character Mastercard Banknet Reference Number and the 4-digit settlement date for recurring payments and other merchant-initiated transactions.
        msa_order_unload:
          $ref: '#/components/schemas/msa_returns'
        multi_clearing_sequence_count:
          type: string
          description: "If an authorization has multiple clearing transactions, this field displays their total number.\nFor example, if an authorization has four clearing transactions, the sequence count is `04`."
        multi_clearing_sequence_number:
          type: string
          description: "If an authorization has multiple clearing transactions, this field displays the sequence number for the clearing transaction.\nFor example, if this is the second clearing transaction of four, the sequence number is `02`."
        national_net_cpd_of_original:
          type: string
        network:
          type: string
          description: Indicates which card network was used to complete the transactions.
        network_metadata:
          $ref: '#/components/schemas/network_metadata'
        network_reference_id:
          type: string
          description: "Network-assigned unique identifier of the transaction.\nUseful for settlement and reconciliation."
        original_credit:
          $ref: '#/components/schemas/original_credit'
        peer_transfer:
          $ref: '#/components/schemas/peer_transfer_response'
        polarity:
          enum:
            - CREDIT
            - DEBIT
            - PENDING_CREDIT
            - PENDING_DEBIT
          type: string
          description: Indicates whether the transaction is credit or debit.
        pos:
          $ref: '#/components/schemas/pos'
        preceding_related_transaction_token:
          type: string
          description: "Returned for final transaction types.\n\nUnique identifier of the preceding related transaction.\nUseful for identifying the transaction that preceded the current one.\n\nFor example, `authorization`, a temporary transaction type, precedes and is completed by `authorization.clearing`, a final transaction type.\nIn this case, the `authorization` token is returned with this field.\nFor which transaction types are temporary or final, see <</core-api/event-types#_transaction_events, Transaction events in Event Types>>."
        preceding_transaction:
          $ref: '#/components/schemas/preceding_transaction'
        program:
          $ref: '#/components/schemas/program'
        program_transfer:
          $ref: '#/components/schemas/program_transfer_response'
        real_time_fee_group:
          $ref: '#/components/schemas/real_time_fee_group'
        request_amount:
          type: number
          description: 'Merchant-requested amount, including any fees.'
        response:
          $ref: '#/components/schemas/response'
        settlement_date:
          type: string
          description: "Date and time when funds were moved for a transaction, in UTC.\nFor example, in the case of a refund, when funds were credited to the cardholder."
          format: date-time
        settlement_indicator:
          type: string
          description: Indicates the settlement service used for the transaction.
        standin_approved_by:
          type: string
          description: "Indicates which party approved a transaction: the card network using stand-in processing, or Marqeta using Commando Mode.\nReturned only when a transaction is approved."
        standin_by:
          type: string
          description: 'Indicates which party approved a transaction: the card network using stand-in processing, or Marqeta using Commando Mode.'
        standin_reason:
          type: string
          description: Indicates why the card network handled a transaction requiring stand-in processing.
        state:
          enum:
            - PENDING
            - CLEARED
            - COMPLETION
            - DECLINED
            - ERROR
          type: string
          description: "Current state of the transaction.\nFor more information about the `state` field, see <</developer-guides/about-transactions#_the_transaction_lifecycle, The transaction lifecycle>>."
        store:
          $ref: '#/components/schemas/store_response_model'
        subnetwork:
          type: string
          description: "Indicates which subnetwork was used to complete the transaction.\nPossible values include the following:\n\n* *VISANET* – Used for VisaNet signature-based transactions.\n* *VISANETDEBIT* – Used for VisaNet Debit PIN-based transaction.\n* *VISAINTERLINK* – Used for Visa Interlink PIN-based transactions.\n* *VISAPLUS* – Used for ATM withdrawals on Visa.\n* *MAESTRO* – Used for PIN-based transactions on Mastercard.\n* *CIRRUS* – Used for ATM withdrawals on Mastercard.\n* *MASTERCARDDEBIT* – Used for signature-based transactions on Mastercard.\n* *GATEWAY_JIT* – Used for Gateway JIT Funding transactions.\n* *MANAGED_JIT* – Used for Managed JIT Funding transactions or for transactions that occur while Commando Mode is enabled."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the transaction, formatted as a UUID.\n\n*NOTE:* For subsequent related transactions, this token value appears as the `preceding_related_transaction_token`."
        transaction_attributes:
          type: object
          additionalProperties:
            type: string
          description: Additional transaction attributes.
        transaction_metadata:
          $ref: '#/components/schemas/transaction_metadata'
        type:
          enum:
            - gpa.credit
            - gpa.credit.pending
            - gpa.credit.pending.reversal
            - gpa.credit.reversal
            - gpa.credit.networkload
            - gpa.credit.networkload.reversal
            - gpa.debit.networkload
            - gpa.debit
            - gpa.debit.pending
            - gpa.debit.pending.reversal
            - gpa.grant
            - gpa.credit.issueroperator
            - gpa.debit.issueroperator
            - gpa.credit.chargeback
            - gpa.credit.chargeback.reversal
            - gpa.credit.billpayment
            - gpa.credit.authorization.billpayment
            - gpa.credit.authorization.billpayment.reversal
            - msa.credit.pending
            - msa.credit.pending.reversal
            - msa.credit.reversal
            - msa.credit
            - msa.debit.pending
            - msa.debit.pending.reversal
            - msa.debit
            - msa.credit.chargeback
            - msa.credit.chargeback.reversal
            - authorization
            - authorization.advice
            - authorization.reversal
            - authorization.clearing
            - authorization.reversal.issuerexpiration
            - dispute.credit
            - dispute.debit
            - authorization.clearing.chargeback
            - authorization.clearing.chargeback.reversal
            - refund
            - pindebit.atm.withdrawal
            - pindebit.balanceinquiry
            - pindebit.cashback
            - pindebit.checkavs
            - pindebit
            - programreserve.credit
            - programreserve.debit
            - fee.charge.pending
            - fee.charge
            - fee.charge.refund
            - fee.charge.reversal
            - funds.expire
            - reward.earn
            - transfer.peer
            - transfer.fee
            - account.funding.authorization
            - account.funding.authorization.reversal
            - account.funding.authorization.clearing
            - account.funding.auth_plus_capture
            - account.funding.auth_plus_capture.reversal
            - account.credit
            - account.debit
            - balanceinquiry
            - authorization.atm.withdrawal
            - authorization.pin.change
            - authorization.pin.unblock
            - authorization.clearing.atm.withdrawal
            - authorization.cashback
            - authorization.clearing.cashback
            - transfer.program
            - authorization.quasi.cash
            - authorization.clearing.quasi.cash
            - authorization.incremental
            - gpa.credit.authorization
            - gpa.credit.authorization.reversal
            - gpa.debit.authorization
            - gpa.debit.reversal
            - original.credit.authorization
            - original.credit.authorization.reversal
            - original.credit.authorization.clearing
            - original.credit.auth_plus_capture
            - original.credit.auth_plus_capture.reversal
            - refund.authorization
            - refund.authorization.advice
            - refund.authorization.clearing
            - refund.authorization.reversal
            - token.activation-request
            - token.advice
            - pindebit.authorization
            - pindebit.authorization.clearing
            - pindebit.authorization.reversal
            - pindebit.authorization.reversal.issuerexpiration
            - authorization.standin
            - authorization.clearing.chargeback.completed
            - authorization.clearing.chargeback.provisional.credit
            - authorization.clearing.chargeback.provisional.debit
            - authorization.clearing.chargeback.writeoff
            - directdeposit.credit
            - directdeposit.credit.pending
            - directdeposit.credit.reject
            - directdeposit.credit.pending.reversal
            - directdeposit.credit.reversal
            - directdeposit.debit
            - directdeposit.debit.pending
            - directdeposit.debit.reject
            - directdeposit.debit.reversal
            - pin.change.reversal
            - pin.change.reversal.advice
            - directdeposit.debit.pending.reversal
            - pindebit.chargeback
            - pindebit.chargeback.completed
            - pindebit.chargeback.provisional.credit
            - pindebit.chargeback.provisional.debit
            - pindebit.chargeback.reversal
            - pindebit.chargeback.writeoff
            - pindebit.pin.change
            - pindebit.pin.unblock
            - pindebit.credit.adjustment
            - pindebit.quasicash
            - pindebit.quasi.cash
            - pindebit.refund
            - pindebit.refund.reversal
            - pindebit.reversal
            - pindebit.transfer
            - pushtocard.debit
            - pushtocard.reversal
            - credit.adjustment
            - debit.adjustment
            - pin.change.via.api
            - unknown
            - authorization.clearing.representment
            - billpayment
            - billpayment.clearing
            - billpayment.reversal
            - fee.charge.pending.refund
            - transaction.unknown
            - address.verification
          type: string
          description: "Transaction event type.\nFor more information about the `type` field, see <</core-api/event-types#_transaction_events, Transaction events>>."
        user:
          $ref: '#/components/schemas/cardholder_metadata'
        user_token:
          maxLength: 36
          minLength: 0
          type: string
          description: 'Unique identifier of the user who owns the account that funded the transaction; subsequent related transactions retain the same `user_token`, even if the card used to complete the transaction moves to another user.'
        user_transaction_time:
          type: string
          description: "Date and time when the user initiated the transaction, in UTC.\nFor example, when a merchant performed the original authorization for a refund."
          format: date-time
      description: "Transactions are represented by the `transaction` object.\nThe Marqeta platform creates a separate `transaction` object for each transaction message received from the card network.\nThe attributes of a given `transaction` object depend on the transaction type.\n\nThis section documents all fields that might be included in a `transaction` object."
    transaction_options:
      type: object
      properties:
        additional_data:
          type: string
        card_expiration_date_yymm:
          type: string
        database_transaction_timeout:
          type: integer
          format: int32
        encryption_key_id:
          type: string
        is_async:
          type: boolean
          default: false
        pre_auth_time_limit:
          type: string
        send_expiration_date:
          type: boolean
          default: false
        send_track_data:
          type: boolean
          default: false
        transaction_timeout_threshold_seconds:
          type: integer
          format: int64
        transaction_token:
          type: string
    transit:
      type: object
      properties:
        transaction_type:
          enum:
            - PRE_FUNDED
            - REAL_TIME_AUTHORIZED
            - POST_AUTHORIZED_AGGREGATED
            - AUTHORIZED_AGGREGATED_SPLIT_CLEARING
            - OTHER
            - DEBIT_RECOVERY
          type: string
          description: Type of transit transaction.
        transportation_mode:
          enum:
            - BUS
            - TRAIN
            - WATER_BORNE_VEHICLE
            - TOLL
            - PARKING
            - TAXI
            - PARA_TRANSIT
            - SELF_DRIVE_VEHICLE
            - COACH
            - LOCOMOTIVE
            - POWERED_MOTOR_VEHICLE
            - TRAILER
            - INTER_CITY
            - CABLE_CAR
          type: string
          description: Mode of transportation.
      description: 'Contains merchant-provided, transit-related metadata related to the transaction.'
    triggered_rule:
      type: object
      properties:
        alert:
          type: boolean
          description: Indicates if the rule triggered an alert.
        entity_type:
          type: string
          description: The entity type where the triggered rule was defined.
        rule_name:
          type: string
          description: 'Name of the rule, as defined in the Real-Time Decisioning dashboard that was triggered.'
        suppress_alert:
          type: boolean
          description: Indicates if the triggered rule has `suppress_alert` in the definition.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/tag'
          description: All the tags defined in the triggered rule.
      description: 'Provides a list of rules triggered by a fraud event, along with the information on tags and rule characteristics.'
    unload_request_model:
      required:
        - amount
        - original_order_token
      type: object
      properties:
        amount:
          type: number
          description: Amount of funds to return to the funding source.
        funding_source_address_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source to use for this GPA unload order.\n\nSend a `GET` request to `/fundingsources/addresses/user/{token}` to retrieve addresses for a specific user."
        memo:
          maxLength: 99
          minLength: 0
          type: string
          description: Additional descriptive text about the GPA unload.
        original_order_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the original GPA order.
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: Comma-delimited list of tags describing the GPA unload order.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the GPA unload order.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    user_association:
      type: object
      properties:
        single_inventory_user:
          type: boolean
          description: "Set to `true` to associate all cards with the same user.\nSet to `false` to associate each card with a different user.\nWhen set to `false`, users are generated automatically and associated with the cards."
          default: false
        single_inventory_user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "If `single_inventory_user=true`, use this field to specify the token of an existing user.\nAll cards in the order will be associated with this user."
          default: 'false'
      description: Associates each card with a user.
    user_card_holder_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Associates the specified account holder group with the cardholder.
        active:
          type: boolean
          description: Specifies if the cardholder is in the `ACTIVE` state on the Marqeta platform.
          default: false
        address1:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's address.
        address2:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional address information for the cardholder.
        authentication:
          $ref: '#/components/schemas/Authentication'
        birth_date:
          type: string
          description: Cardholder's date of birth.
        business_token:
          type: string
          description: Unique identifier of the business resource.
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: City where the cardholder resides.
        company:
          maxLength: 255
          minLength: 0
          type: string
          description: Company name.
        corporate_card_holder:
          type: boolean
          description: Specifies if the cardholder holds a corporate card.
          default: false
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: Country where the cardholder resides.
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: Valid email address of the cardholder.
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's first name.
        gender:
          maxLength: 1
          minLength: 0
          enum:
            - F
            - M
          type: string
          description: Gender of the cardholder.
        honorific:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Cardholder''s title or prefix: Dr., Miss, Mr., Ms., and so on.'
        id_card_expiration_date:
          type: string
          description: Expiration date of the cardholder's identification.
        id_card_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's identification card number.
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationResponseModel'
          description: One or more objects containing identifications associated with the cardholder.
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
          description: Cardholder's IP address.
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last updated, in UTC.'
          format: date-time
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's last name.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
        middle_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's middle name.
        nationality:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's nationality.
        notes:
          maxLength: 255
          minLength: 0
          type: string
          description: Any additional information pertaining to the cardholder.
        parent_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the parent user or business resource.
        passport_expiration_date:
          type: string
          description: Expiration date of the cardholder's passport.
        passport_number:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's passport number.
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: Password to the cardholder's user account on the Marqeta platform.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's telephone number.
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal code of the cardholder's address.
        ssn:
          type: string
          description: Cardholder's Social Security Number (SSN).
        state:
          maxLength: 2
          minLength: 0
          type: string
          description: State or province where the cardholder resides.
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
          description: Specifies the status of the cardholder on the Marqeta platform.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the cardholder.
        uses_parent_account:
          type: boolean
          description: 'Indicates whether the child shares balances with the parent (`true`), or the child''s balances are independent of the parent (`false`).'
          default: false
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: United States ZIP code of the cardholder's address.
      description: Contains information about a cardholder.
    user_card_holder_search_model:
      type: object
      properties:
        dda:
          type: string
          description: "Performs a match on the specified deposit account number.\nSend a `GET` request to `/directdeposits/accounts/{user_token}` to retrieve the deposit account number for a specific cardholder."
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: 'Performs a non-case-sensitive, exact match on the cardholder''s `email` field.'
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Performs a non-case-sensitive match on the cardholder's `first_name` field.\nMatching is partial on the beginning of the name.\nFor example, a match on \"Alex\" returns both \"Alex\" and \"Alexander\"."
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Performs a non-case-sensitive match on the cardholder's `last_name` field.\nMatching is partial on the beginning of the name.\nFor example, a match on \"Smith\" returns both \"Smith\" and \"Smithfield\"."
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: Performs a match on the cardholder's `phone` field.
        ssn:
          type: string
          description: Performs a match on the cardholder's identification number.
    velocity_control_balance_response:
      required:
        - amount_limit
        - available
        - currency_code
        - velocity_window
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the velocity control is active.
        amount_limit:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: Maximum monetary sum that can be cleared within the time period defined by the `velocity_window` field.
        approvals_only:
          type: boolean
          description: 'If set to `true`, only approved transactions are subject to control.'
        association:
          $ref: '#/components/schemas/spend_control_association'
        available:
          $ref: '#/components/schemas/available'
        currency_code:
          type: string
          description: Three-character ISO 4217 currency code.
        include_cashback:
          type: boolean
          description: 'If set to `true`, the cashback components of point-of-sale transactions are subject to control.'
        include_credits:
          type: boolean
          description: 'If set to `true`, original credit transactions (OCT) are subject to control.'
        include_purchases:
          type: boolean
          description: "If set to `true`, the following transactions are subject to control:\n\n* *Account funding:* All account funding transactions\n* *Cashback:* Only the purchase component of cashback transactions\n* *Purchase transactions:* All authorizations, PIN debit transactions, and incremental transactions\n* *Quasi-cash:* All quasi-cash transactions\n* *Refunds:* All refund transactions (see <</developer-guides/controlling-spending#_controls_to_limit_amount_and_frequency_of_spending, Controls to limit amount and frequency of spending>> for more information)\n* *Reversals:* All reversal transactions"
        include_transfers:
          type: boolean
          description: "If set to `true`, account-to-account transfers are subject to control.\nAccount-to-account transfers are not currently supported."
        include_withdrawals:
          type: boolean
          description: 'If set to `true`, ATM withdrawals are subject to control.'
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: 'Description of how the velocity control restricts spending, for example, "Max spend of $500 per day" or "Max spend of $5000 per month for non-exempt employees".'
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the velocity control.
        usage_limit:
          minimum: -1
          type: integer
          description: Maximum number of times a card can be used within the time period defined by the `velocity_window` field.
          format: int32
        velocity_window:
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
          description: "Defines the time period to which the `amount_limit` and `usage_limit` fields apply:\n\n* *DAY* – one day; days begin at 00:00:00 UTC.\n* *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.\n* *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.\n* *LIFETIME* – forever; time period never expires.\n* *TRANSACTION* – a single transaction."
    velocity_control_request:
      required:
        - amount_limit
        - currency_code
        - velocity_window
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the velocity control is active.
        amount_limit:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: Maximum monetary sum that can be cleared within the time period defined by the `velocity_window` field.
        approvals_only:
          type: boolean
          description: 'If set to `true`, only approved transactions are subject to control.'
        association:
          $ref: '#/components/schemas/spend_control_association'
        currency_code:
          type: string
          description: Three-character ISO 4217 currency code.
        include_cashback:
          type: boolean
          description: 'If set to `true`, the cashback components of point-of-sale transactions are subject to control.'
        include_credits:
          type: boolean
          description: "If set to `true`, original credit transactions (OCT) are subject to control.\nYour request can contain either a `money_in_transaction` object or the `include_credits` field, not both."
        include_purchases:
          type: boolean
          description: "If set to `true`, the following transactions are subject to control:\n\n* *Account funding:* All account funding transactions\n* *Cashback:* Only the purchase component of cashback transactions\n* *Purchase transactions:* All authorizations, PIN debit transactions, and incremental transactions\n* *Quasi-cash:* All quasi-cash transactions\n* *Refunds:* All refund transactions (see <</developer-guides/controlling-spending#_controls_to_limit_amount_and_frequency_of_spending, Controls to limit amount and frequency of spending>> for more information)\n* *Reversals:* All reversal transactions"
        include_transfers:
          type: boolean
          description: "If set to `true`, account-to-account transfers are subject to control.\nAccount-to-account transfers are not currently supported."
        include_withdrawals:
          type: boolean
          description: 'If set to `true`, ATM withdrawals are subject to control.'
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: "Description of how the velocity control restricts spending, for example, \"Max spend of $500 per day\" or \"Max spend of $5000 per month for non-exempt employees\".\n\nEnsure that the description you provide here adequately captures the kind of restriction exerted by this velocity control, because the Marqeta platform will send this information to you in a webhook in the event that the transaction authorization attempt is declined by the velocity control.\n\n*NOTE:* This field is very important.\nIf your program has multiple velocity controls in place, it is not always clear which one prevented the transaction from being approved.\nAdding specific details to this field gives you more contextual information when debugging or monitoring declined authorization attempts."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the velocity control.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        usage_limit:
          minimum: -1
          type: integer
          description: "Maximum number of times a card can be used within the time period defined by the `velocity_window` field.\n\nIf `velocity_window` is set to `TRANSACTION`, do not include a `usage_limit` in your request.\n\nSet to `-1` to indicate that the card can be used an unlimited number of times."
          format: int32
        velocity_window:
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
          description: "Defines the time period to which the `amount_limit` and `usage_limit` fields apply:\n\n* *DAY* – one day; days begin at 00:00:00 UTC.\n* *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.\n* *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.\n* *LIFETIME* – forever; time period never expires.\n* *TRANSACTION* – a single transaction.\n\n// (2023-05-03): This statement was validated by Processing, as part of a customer inquiry.\n*NOTE:* If set to `DAY`, `WEEK`, or `MONTH`, the velocity control takes effect retroactively from the beginning of the specified period.\nThe amount and usage data already collected within the first period is counted toward the limits.\n\n// (2023-05-03): Commenting this note out, as it is untrue in testing as reported by customers and confirmed by transaction engine team\n//*NOTE:* Editing any of the following fields on a velocity control resets its usage and amount count to 0:\n\n//* `merchant_scope.mcc`\n//* `merchant_scope.mid`\n//* `merchant_scope.mcc_group`\n//* `association.user_token`\n//* `association.card_product_token`"
    velocity_control_response:
      required:
        - amount_limit
        - currency_code
        - velocity_window
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the velocity control is active.
        amount_limit:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: Maximum monetary sum that can be cleared within the time period defined by the `velocity_window` field.
        approvals_only:
          type: boolean
          description: 'If set to `true`, only approved transactions are subject to control.'
        association:
          $ref: '#/components/schemas/spend_control_association'
        currency_code:
          type: string
          description: Three-character ISO 4217 currency code.
        include_cashback:
          type: boolean
          description: 'If set to `true`, the cashback components of point-of-sale transactions are subject to control.'
        include_credits:
          type: boolean
          description: 'If set to `true`, original credit transactions (OCT) are subject to control.'
        include_purchases:
          type: boolean
          description: "If set to `true`, the following transactions are subject to control:\n\n* *Account funding:* All account funding transactions\n* *Cashback:* Only the purchase component of cashback transactions\n* *Purchase transactions:* All authorizations, PIN debit transactions, and incremental transactions\n* *Quasi-cash:* All quasi-cash transactions\n* *Refunds:* All refund transactions (see <</developer-guides/controlling-spending#_controls_to_limit_amount_and_frequency_of_spending, Controls to limit amount and frequency of spending>> for more information)\n* *Reversals:* All reversal transactions"
        include_transfers:
          type: boolean
          description: "If set to `true`, account-to-account transfers are subject to control.\nAccount-to-account transfers are not currently supported."
        include_withdrawals:
          type: boolean
          description: 'If set to `true`, ATM withdrawals are subject to control.'
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: "Description of how the velocity control restricts spending.\nFor example, \"Max spend of $500 per day\" or \"Max spend of $5000 per month for non-exempt employees\"."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the velocity control.
        usage_limit:
          minimum: -1
          type: integer
          description: Maximum number of times a card can be used within the time period defined by the `velocity_window` field.
          format: int32
        velocity_window:
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
          description: "Defines the time period to which the `amount_limit` and `usage_limit` fields apply:\n\n* *DAY* – one day; days begin at 00:00:00 UTC.\n* *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.\n* *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.\n* *LIFETIME* – forever; time period never expires.\n* *TRANSACTION* – a single transaction."
    velocity_control_update_request:
      required:
        - token
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the velocity control is active.
        amount_limit:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: Maximum monetary sum that can be cleared within the time period defined by the `velocity_window` field.
        approvals_only:
          type: boolean
          description: 'If set to `true`, only approved transactions are subject to control.'
        association:
          $ref: '#/components/schemas/spend_control_association'
        currency_code:
          type: string
          description: Three-character ISO 4217 currency code.
        include_cashback:
          type: boolean
          description: 'If set to `true`, the cashback components of point-of-sale transactions are subject to control.'
        include_credits:
          type: boolean
          description: "If set to `true`, original credit transactions are subject to control.\nYour request can contain either a `money_in_transaction` object or the `include_credits` field, not both."
        include_purchases:
          type: boolean
          description: "If set to `true`, the following transactions are subject to control:\n\n* *Account funding:* All account funding transactions\n* *Cashback:* Only the purchase component of cashback transactions\n* *Purchase transactions:* All authorizations, PIN debit transactions, and incremental transactions\n* *Quasi-cash:* All quasi-cash transactions\n* *Refunds:* All refund transactions (see <</developer-guides/controlling-spending#_controls_to_limit_amount_and_frequency_of_spending, Controls to limit amount and frequency of spending>> for more information)\n* *Reversals:* All reversal transactions"
        include_transfers:
          type: boolean
          description: "If set to `true`, account-to-account transfers are subject to control.\nAccount-to-account transfers are not currently supported."
        include_withdrawals:
          type: boolean
          description: 'If set to `true`, ATM withdrawals are subject to control.'
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: "Description of how the velocity control restricts spending.\nFor example, \"Max spend of $500 per day\" or \"Max spend of $5000 per month for non-exempt employees\".\n\nEnsure that the description you provide here adequately captures the kind of restriction exerted by this velocity control, because the Marqeta platform will send this information to you in a webhook in the event that the transaction authorization attempt is declined by the velocity control.\n\n*NOTE:* This field is very important.\nIf your program has multiple velocity controls in place, it is not always clear which one prevented the transaction from being approved.\nAdding specific details to this field gives you more contextual information when debugging or monitoring declined authorization attempts."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the velocity control resource.
        usage_limit:
          minimum: -1
          type: integer
          description: "Maximum number of times a card can be used within the time period defined by the `velocity_window` field.\n\nIf `velocity_window` is set to `TRANSACTION`, do not include a `usage_limit` in your request."
          format: int32
        velocity_window:
          enum:
            - DAY
            - WEEK
            - MONTH
            - QUARTER
            - YEAR
            - LIFETIME
            - TRANSACTION
          type: string
          description: "Defines the time period to which the `amount_limit` and `usage_limit` fields apply:\n\n* *DAY* – one day; days begin at 00:00:00 UTC.\n* *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.\n* *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.\n* *LIFETIME* – forever; time period never expires.\n* *TRANSACTION* – a single transaction.\n\n// (2023-05-03): This statement was validated by Processing, as part of a customer inquiry.\n*NOTE:* If set to `DAY`, `WEEK`, or `MONTH`, the velocity control takes effect retroactively from the beginning of the specified period.\nThe amount and usage data already collected within the first period is counted toward the limits.\n\n// (2023-05-03): Commenting this note out, as it is untrue in testing as reported by customers and confirmed by transaction engine team\n//*NOTE:* Editing any of the following fields on a velocity control resets its usage and amount count to 0:\n\n//* `merchant_scope.mcc`\n//* `merchant_scope.mid`\n//* `merchant_scope.mcc_group`\n//* `association.user_token`\n//* `association.card_product_token`"
    wallet_provider_card_on_file:
      type: object
      properties:
        address_verification:
          $ref: '#/components/schemas/digital_wallet_token_address_verification'
        enabled:
          type: boolean
          description: Specifies if the card on file is enabled.
          default: false
    wallet_provider_profile:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/account'
        device_score:
          type: string
          description: Score from the device.
        pan_source:
          type: string
          description: Source from which the digital wallet provider obtained the card primary account number (PAN).
        reason_code:
          type: string
          description: "Reason for the wallet provider's provisioning decision.\n\n* *01* – Cardholder's wallet account is too new relative to launch.\n* *02* – Cardholder's wallet account is too new relative to provisioning request.\n* *03* – Cardholder's wallet account/card pair is newer than date threshold.\n* *04* – Changes made to account data within the account threshold.\n* *05* – Suspicious transactions linked to this account.\n* *06* – Account has not had activity in the last year.\n* *07* – Suspended cards in the secure element.\n* *08* – Device was put in lost mode in the last seven days for longer than the duration threshold.\n* *09* – The number of provisioning attempts on this device in 24 hours exceeds threshold.\n* *0A* – There have been more than the threshold number of different cards attempted at provisioning to this phone in 24 hours.\n* *0B* – The card provisioning attempt contains a distinct name in excess of the threshold.\n* *0C* – The device score is less than 3.\n* *0D* – The account score is less than 4.\n* *0E* – Device provisioning location outside of the cardholder's wallet account home country.\n* *0G* – Suspect fraud."
        recommendation_reasons:
          type: array
          items:
            type: string
          description: Array of recommendation reasons from the digital wallet provider.
        risk_assessment:
          $ref: '#/components/schemas/risk_assessment'
      description: Contains information held and provided by the digital wallet provider.
    web_push_provisioning:
      type: object
      properties:
        wpp_apple_card_template_id:
          type: string
          description: Identifier that Apple uses to identify the program to process the request for.
        wpp_apple_partner_id:
          type: string
          description: Identifier that Apple uses to identify the program to provide the correct card art for.
        wpp_google_piaid:
          type: string
          description: Identifier that Google uses to identify the program to process the request for and to provide the correct card art for.
    web_push_provisioning_apple_pay_JWS_header:
      required:
        - kid
      type: object
      properties:
        kid:
          type: string
          description: Unique identifier of the JSON Web Signature (JWS) public key of the key pair used to generate the signature.
          example: 8dc7aed4-29e3-41e4-9cdb-673a05e6615c
      description: Contains header data for the JWS object.
    web_push_provisioning_apple_pay_JWS_model:
      required:
        - header
        - payload
        - protected
        - signature
      type: object
      properties:
        header:
          $ref: '#/components/schemas/web_push_provisioning_apple_pay_JWS_header'
        payload:
          type: string
          description: JSON Web Signature (JWS) message payload.
        protected:
          type: string
          description: Contains header parameters that are integrity-protected by the JSON Web Signature (JWS).
        signature:
          type: string
          description: The JSON Web Signature (JWS).
          example: 5lD1znG2DD2DytqGUcSDOwJQMYbCGDCCCiXxyhpC1zOWTH1Y6jUJFAupl0jEud9nUvw3mmpuSt6zcAE1r4yb0w
      description: Object containing JSON Web Signature (JWS) data.
    web_push_provisioning_apple_pay_JWT_response:
      required:
        - jws
        - state
      type: object
      properties:
        jws:
          $ref: '#/components/schemas/web_push_provisioning_apple_pay_JWS_model'
        state:
          type: string
          description: "Unique state associated with the digital wallet token.\nThe Marqeta platform returns a universally unique identifier (UUID) in this field."
          example: e2675f06-7e4d-11ec-90d6-0242ac120003
    webhook:
      required:
        - endpoint
        - password
        - username
      type: object
      properties:
        endpoint:
          maxLength: 512
          minLength: 1
          type: string
          description: Valid URL
        password:
          type: string
          description: Authentication password
        secret:
          type: string
          description: Authentication secret
        username:
          type: string
          description: Authentication username
    webhook_base_model:
      required:
        - config
        - events
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the webhook is active.
          default: true
        config:
          $ref: '#/components/schemas/webhook_config_model'
        events:
          type: array
          items:
            type: string
          description: "Specifies the types of events for which notifications are sent.\n\nThe wildcard character `\\*` indicates that you receive all webhook notifications, or all notifications of a specified category.\nFor example, `\\*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.\n\n*NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.\nFor example, you cannot subscribe to `cardtransition.fulfillment.\\*` events, but you can subscribe to `cardtransition.*`."
        name:
          maxLength: 64
          minLength: 1
          type: string
          description: Descriptive name of the webhook.
    webhook_config_model:
      required:
        - basic_auth_password
        - basic_auth_username
        - url
      type: object
      properties:
        basic_auth_password:
          maxLength: 50
          minLength: 20
          type: string
          description: Password for accessing your webhook endpoint.
        basic_auth_username:
          maxLength: 50
          minLength: 1
          type: string
          description: Username for accessing your webhook endpoint.
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: Custom headers to be passed along with the request.
        secret:
          maxLength: 50
          minLength: 20
          type: string
          description: "Randomly chosen string used for implementing HMAC-SHA1.\n\nHMAC-SHA1 provides an added layer of security by authenticating the message and validating message integrity.\nUsing this functionality requires that your webhook endpoint verify the message signature.\nFor information about implementing this functionality, see <</developer-guides/signature-verification, Signature Verification>>."
        url:
          maxLength: 255
          minLength: 1
          type: string
          description: URL of your webhook endpoint.
        use_mtls:
          type: boolean
          description: Set to `true` to use MTLS for the webhook.
          default: false
      description: Contains the configuration information for the webhook.
    webhook_ping_model:
      required:
        - pings
      type: object
      properties:
        pings:
          type: array
          items:
            $ref: '#/components/schemas/echo_ping_request'
          description: Array of ping requests to your webhook endpoint.
    webhook_request_model:
      required:
        - config
        - events
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the webhook is active.
          default: true
        config:
          $ref: '#/components/schemas/webhook_config_model'
        events:
          type: array
          items:
            type: string
          description: "Specifies the types of events for which notifications are sent.\n\nThe wildcard character `\\*` indicates that you receive all webhook notifications, or all notifications of a specified category.\nFor example, `\\*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.\n\n*NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.\nFor example, you cannot subscribe to `cardtransition.fulfillment.\\*` events, but you can subscribe to `cardtransition.*`."
        name:
          maxLength: 64
          minLength: 1
          type: string
          description: Descriptive name of the webhook.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the webhook.
    webhook_response_model:
      required:
        - config
        - events
        - name
      type: object
      properties:
        active:
          type: boolean
          description: "Indicates whether the webhook is active.\nThis field is returned if you included it in your webhook."
          default: true
        config:
          $ref: '#/components/schemas/webhook_config_model'
        created_time:
          type: string
          description: 'Date and time when the webhook event was created, in UTC.'
          format: date-time
        events:
          type: array
          items:
            type: string
          description: "Specifies the types of events for which notifications are sent.\n\nThe wildcard character `\\*` indicates that you receive all webhook notifications, or all notifications of a specified category.\nFor example, `\\*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.\n\n*NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.\nFor example, you cannot subscribe to `cardtransition.fulfillment.\\*` events, but you can subscribe to `cardtransition.*`."
        last_modified_time:
          type: string
          description: 'Date and time when the associated object was last modified, in UTC.'
          format: date-time
        name:
          maxLength: 64
          minLength: 1
          type: string
          description: Descriptive name of the webhook.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the webhook.
    withdrawal_request_model:
      required:
        - amount
        - card_token
        - mid
      type: object
      properties:
        account_type:
          enum:
            - checking
            - savings
            - credit
          type: string
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        pin:
          maxLength: 15
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
    xpay_push_tokenize_request_data:
      type: object
      properties:
        card_type:
          type: string
          description: Specifies the type of card.
        display_name:
          type: string
          description: "Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).\n`Visa 5678`, for example."
        extra_provision_payload:
          type: string
          description: Encrypted card or cardholder details.
        last_digits:
          type: string
          description: Last four digits of the primary account number of the physical or virtual card.
        network:
          type: string
          description: Specifies the card network of the physical or virtual card.
        token_service_provider:
          type: string
          description: Specifies the network that provides the digital wallet token service.
      description: Contains details about a card tokenization push request.
  parameters:
    accountTokenParam:
      name: account_token
      in: query
      description: The unique identifier of the credit account for which you want to retrieve reward programs.
      style: form
      schema:
        type: string
        x-allowableValues: 36 char max
    countParam:
      name: count
      in: query
      description: Number of resources to retrieve.
      style: form
      schema:
        type: integer
        default: 5
        x-allowableValues: 1–100
    endDateParam:
      name: end_date
      in: query
      description: 'The ending date (or date-time) of a date range from which to return resources, in UTC.'
      style: form
      schema:
        type: string
        format: date-time
        x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
    endDateParamRequired:
      name: end_date
      in: query
      description: 'The ending date (or date-time) of a date range from which to return resources, in UTC.'
      required: true
      style: form
      schema:
        type: string
        format: date-time
        x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
    isActiveParam:
      name: is_active
      in: query
      description: A value of `true` returns active resources; `false` returns inactive resources.
      style: form
      schema:
        type: boolean
        x-allowableValues: '`true`, `false`'
    programTokenParam:
      name: token
      in: path
      description: Unique identifier of the reward program.
      required: true
      style: simple
      schema:
        type: string
        x-allowableValues: Existing reward program token
    redemptionToken:
      name: redemption_token
      in: path
      description: Unique identifier of the reward redemption.
      required: true
      style: simple
      schema:
        type: string
        x-allowableValues: Existing redemption token
    sortByCreatedTimeParam:
      name: sort_by
      in: query
      description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE*:\nYou must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`."
      style: form
      schema:
        enum:
          - createdTime
          - '-createdTime'
        type: string
        default: '-createdTime'
    sortByUpdatedTimeParam:
      name: sort_by
      in: query
      description: "Field on which to sort.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order.\n\n*NOTE*:\nYou must sort using system field names such as `updatedTime`, and not by the field names appearing in response bodies such as `updated_time`."
      style: form
      schema:
        enum:
          - updatedTime
          - '-updatedTime'
        type: string
        default: '-updatedTime'
    startDateParam:
      name: start_date
      in: query
      description: 'The starting date (or date-time) of a date range from which to return resources, in UTC.'
      style: form
      schema:
        type: string
        format: date-time
        x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
    startDateParamRequired:
      name: start_date
      in: query
      description: 'The starting date (or date-time) of a date range from which to return resources, in UTC.'
      required: true
      style: form
      schema:
        type: string
        format: date-time
        x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
    startIndexParam:
      name: start_index
      in: query
      description: Sort order index of the first resource in the returned array.
      style: form
      schema:
        type: integer
        format: int64
        default: 0
        x-allowableValues: 0 min
  securitySchemes:
    mqAppAndAccessToken:
      type: http
      scheme: basic
security:
  - mqAppAndAccessToken: [ ]
tags:
  - name: Accepted Countries
    description: "Use the `/acceptedcountries` endpoint to manage the countries where you authorize your cardholders to transact.\n\n[NOTE]\nThe `/acceptedcountries` endpoint is subject to role-based access control and is intended for <</developer-guides/building-your-powered-card-program, Powered by Marqeta>> programs.\nOnly users with the Admin role can create or update a list of accepted countries.\nFor information about creating and updating a list of accepted countries, see the <</core-api/accepted-countries-addendum, Accepted Countries Addendum>>."
  - name: Account Holder Groups
    description: "The account holder group is a Marqeta platform resource that allows you to configure multiple account holders (user and/or business resources) as a group.\nIt allows certain settings to be selectively applied, depending on whether or not an account holder has passed verification (KYC).\n\nYou associate an account holder with an account holder group using the optional `account_holder_group_token` field in the user or business resource.\nAny account holder that you do not explicitly associate with a group is automatically associated with the program's default account holder group.\nThe default group's name is \"Default account holder group\", its token is `DEFAULT_AHG`, and its configuration uses the default configuration values."
  - name: Authorization Controls
    description: "An authorization control limits spending by specified users at specified merchants.\nYou can limit spending at a single merchant or at a group of merchants, and you can limit spending by a single user, users with a particular card product, or all users.\n\nYou can block spending at all merchants by default and then allow it for specific merchants, or you can allow spending at all merchants by default and block it at specific merchants.\n\n[TIP]\nSee <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control, as well as links to more information about merchant category codes."
  - name: Auto Reload
    description: "Auto reload enables you to automatically load a specified amount into an account when the account balance falls below a defined threshold.\n\nAuto reloads execute only when the account balance falls below the trigger value due to spending.\nThey do not execute due to unloading of funds or because of lack of funds when a user or business is first created.\n\nYou can define auto reloads at the level of an account holder, a card product, or a program.\nEach auto reload draws from a single funding source.\n\nIn the case of auto reloads defined at more than one level, the following order of precedence (first to last) determines which auto reload is executed:\n\n. Account holder\n. Card product\n. Program"
  - name: Balances
    description: "Use the `/balances` endpoint to retrieve the following general purpose account (GPA) balance details for a user or business:\n\n* *Ledger balance* - When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.\nWhen using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared.\n* *Available balance* - The ledger balance minus any authorized transactions that have not yet cleared.\nAlso known as the cardholder's purchasing power.\nIf you are using JIT Funding, this balance is usually 0.00.\n* *Cached balance* - Not currently used.\n* *Credit balance* - Not currently used.\n* *Pending credits* - ACH loads that have been accepted, but for which the funding time has not yet elapsed."
  - name: Funding via ACH (Beta)
    description: "Use the `/banktransfers` endpoint to move funds between your program funding or cardholder account and an external account over the ACH Network.\nThis kind of bank transfer is also known as ACH origination.\n\n[NOTE]\nThis feature is currently in beta and subject to change.\nIt also requires additional activation steps.\nTo learn more about the beta program for this feature and about activating it for your program, contact your Marqeta representative.\n\nYou can create the following types of transfers:\n\n* *Push* funds from your program funding or cardholder account to an external account.\n* *Pull* funds from your external account into your program funding or cardholder account.\n\nYou must have an existing bank account at a US bank to fund or receive funds from your Marqeta account.\nTo add an external program funding source account to the Marqeta platform, send a `POST` request to the `/fundingsources/program/ach` endpoint to PUSH or PULL money from or to the Program Funding Account.\nTo add an external account holder funding source account to the Marqeta platform, send a `POST` request to the `/fundingsources/ach` endpoint to PUSH or PULL money from or to the Cardholder Account.\n\nFor more information on ACH funding, see <</developer-guides/ach-origination, ACH Origination>>."
  - name: internal
  - name: Bulk Card Orders
    description: "Use the `/bulkissuances` endpoint to order physical payment cards in bulk.\n\nFor more information on cards, card products, and bulk card ordering, see <</developer-guides/about-cards, About Cards>>.\n\nSome attributes of the `bulkissuance` object can also be defined in an associated `card` or `cardproduct` object.\nIf you define one of these attributes in more than one object, the Marqeta platform applies an order of precedence to determine which attribute to use at fulfillment time.\nThe order of precedence is as follows:\n\n. `card`\n. `bulkissuance`\n. `cardproduct`\n\nDefining an attribute in an object with higher precedence does not overwrite the same attribute in a lower-precedence object; the Marqeta platform ignores these lower-precedence attributes.\n\nFor more information on cards, see <</developer-guides/about-cards, About Cards>>."
  - name: Businesses
    description: "A business is a type of account holder that cannot directly hold cards, but can have parent/child relationships with card-holding users.\nA business can monitor and control card use by a specified group of users.\nEvery business has a general purpose account (GPA).\n\nFor information on how to create a user that has a child-to-parent hierarchical relationship to the business, see <</core-api/users#_create_user, Create User>>.\n\n[NOTE]\nA user can simultaneously be a child of a business and a parent of other users if the user is not configured to use the parent's account balances and the user's children are configured to use the parent's account balances.\nFor more information on account holders, see <</developer-guides/about-account-holders, About Account Holders>>."
  - name: Business Transitions
    description: 'Use the `/businesstransitions` endpoints to transition business resources between states, as well as to retrieve and list state changes for a business resource.'
  - name: Card Products
    description: "The card products resource represents the behavior and functionality of one or more cards (either physical or virtual).\nFor example, attributes of the card product determine whether the associated cards can be used at an ATM and/or online and whether they are currently enabled.\nFor physical cards, the card product determines color and other printing specifications for when the cards are manufactured and personalized.\nYou can optionally associate authorization controls and/or velocity controls with card products to restrict where and how associated cards are used.\n\nIf your program is Managed by Marqeta, then Marqeta will create the card products for your production environment.\n\nSome attributes of the `cardproduct` object can also be defined in an associated `bulkissuance` or `card` object.\nIf you define one of these attributes in more than one object, the Marqeta platform applies an order of precedence to determine which attribute to use at fulfillment time.\nThe order of precedence is as follows:\n\n. `card`\n. `bulkissuance`\n. `cardproduct`\n\nDefining an attribute in an object with higher precedence does not overwrite the same attribute in a lower-precedence object; the Marqeta platform ignores these lower-precedence attributes.\n\nFor more information on cards, see <</developer-guides/about-cards, About Cards>>."
  - name: Cards
    description: "The `card` resource represents a payment card.\nCards are derived from and controlled by the `cardproduct` resource.\nFor more information on cards, see <</developer-guides/about-cards, About Cards>>.\n\nSome attributes of the `card` resource can be defined in an associated `bulkissuance` or `cardproduct` resource.\nIf you define one of these attributes in more than one object, the order of precedence at fulfillment time is as follows:\n\n. `card`\n. `bulkissuance`\n. `cardproduct`\n\nDefining an attribute in an object with higher precedence overrides, but does not overwrite, the attribute in a lower-precedence object."
  - name: Card Transitions
    description: Use the `/cardtransitions` API to set the state of an existing card.
  - name: Commando Mode
    description: "Commando Mode is a fallback measure that ensures Gateway JIT-funded cards continue to function in the event that your system fails.\nIf your system cannot respond to the JIT Funding request, the Marqeta platform makes a decision in your place based on defined business rules.\nThe Marqeta platform stores any unsent webhooks for later transmission, ensuring that the card state and account balances on your system correspond with activity that occurred while Commando Mode was in effect.\n\nYou can identify transactions that were funded while Commando Mode was in effect by examining the `subnetwork` field of the transaction record.\n\n* A `subnetwork` value of `GATEWAY_JIT` indicates that the transaction was funded through normal Gateway JIT Funding and that Commando Mode was not in effect at the time.\n* A value of `MANAGED_JIT` indicates that the transaction was funded while Commando Mode was in effect.\nIn addition, the `standin_approved_by` field has a value of `COMMANDO_AUTO` or `COMMANDO_MANUAL` when Commando Mode is enabled for a transaction.\n\nWhen `COMMANDO_MANUAL` is configured, all transactions are processed via Commando Mode.\nWhen `COMMANDO_AUTO` is configured, Commando Mode is enabled only when a transaction times out or encounters an error.\n\nWhile Commando Mode is a form of Stand-in Processing (STIP), it is different than network STIP.\nNetwork STIP occurs when the card network cannot communicate with the Marqeta platform.\nTransactions handled by network STIP include the `standin_approved_by` field with a value of `NETWORK`.\n\nCommando Mode and Managed JIT Funding are functionally equivalent.\nSee <</developer-guides/about-jit-funding, About Just-in-Time Funding>> for more information.\n\n[NOTE]\nCommando Mode requires additional configuration.\nTo configure Commando Mode control sets, contact your Marqeta representative."
  - name: accepted countries
  - name: account holder groups
  - name: accounting
  - name: auth controls
  - name: authentications
  - name: auto reloads
  - name: balance APIs
  - name: balance caches
  - name: bank transfers
  - name: bulk issuances
  - name: business transitions
  - name: businesses
  - name: businessidentitycheck
  - name: caches
  - name: calculation schedules
  - name: card products
  - name: card transitions
  - name: cardholder balances
  - name: cards
  - name: chargebacks
  - name: clearing
  - name: commando modes
  - name: cron jobs
  - name: digital wallet provision requests
  - name: digital wallet token sync by dequeuer
  - name: digital wallet token transitions
  - name: digital wallet tokens
  - name: direct deposit accounts
  - name: direct deposits
  - name: fee charges
  - name: fee refunds
  - name: fees
  - name: file processing
  - name: 'Find Original: Operations resolve Original Transactions for Auth service'
  - name: funding sources
  - name: Funds movement
  - name: gateways
  - name: Generic money transfers
  - name: GPA fund transfers
  - name: gpa orders
  - name: health checks
  - name: internal auth control check
  - name: internal cards
  - name: Internal Commando Mode APIs
  - name: internal config operations
  - name: internal cryptokeys
  - name: internal data rehydration
  - name: internal dwt
  - name: internal health
  - name: internal kyc
  - name: internal mcc groups
  - name: internal post jcard transactions
  - name: internal program configs
  - name: internal result codes
  - name: internal spend controls
  - name: internal system information
  - name: internal transactions
  - name: internal user validation
  - name: kyblog
  - name: kyc
  - name: mcc groups
  - name: merchantgroups
  - name: Operations for digital wallet token requestor maps
  - name: peer transfers
  - name: ping
  - name: pins
  - name: program
  - name: program configs
  - name: program reserve
  - name: program transfers
  - name: push to card
  - name: real time fee groups
  - name: simulate
  - name: token service gateway
  - name: transaction caches
  - name: transactions
  - name: 'transactions : Dispute transactions'
  - name: user transitions
  - name: users
  - name: velocity controls
  - name: web push provisioning
  - name: webhooks
  - name: Account Cards
    description: "// Conditional snippet for beta or internal content\ninclude::../../include/maturity-admonition-banner.adoc[]\n\nUse the account cards endpoints to create and retrieve credit cards that can access the credit line on a <</core-api/credit-accounts, credit account>>.\n\nOnce a credit card is created, you can use the `/cards` endpoint to <</core-api/cards#putCardsToken, update the card>> or <</developer-guides/managing-lost-stolen-or-damaged-cards, manage lost, stolen, or damaged cards>>.\n\nTo receive webhook notifications when card transition or card action events occur, see <</core-api/event-types#_card_transition_events, Card transition events>> and <</core-api/event-types#_card_action_events, Card action events>> in Event Types."
  - name: Account Rewards
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/credit/accounts/{account_token}/rewards` endpoint to create a one-time reward on a <</core-api/credit-accounts, credit account>>.\n\nCreating a reward triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `REWARD` group.\nFor more on reward journal entries, see <</developer-guides/about-credit-account-journal-entries#_rewards, Rewards>> in the About Credit Account Journal Entries guide.\n\nFor the reward programs that are associated with a reward policy on a bundle, see <</core-api/reward-programs, Reward Programs>>."
  - name: Account Transitions
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\nUse the account transitions endpoints to create and retrieve account transitions on Marqeta's credit platform.\nAn account transition occurs when a <</core-api/credit-accounts, credit account>> transitions to a new status.\n\nTo receive webhook notifications when account transition events occur, see <</core-api/event-types#_credit_account_transition_events, Credit account transition events>> in Event Types."
  - name: Adjustments
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the adjustments endpoints to create and retrieve account adjustments on Marqeta's credit platform.\nAn account adjustment adjusts the amount of a <</core-api/credit-account-journal-entries, journal entry>> or account balance.\n\nCreating an adjustment triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `ADJUSTMENT` group.\nFor more on adjustment journal entries, see <</developer-guides/about-credit-account-journal-entries#_adjustments, Adjustments>> in the About Credit Account Journal Entries guide."
  - name: Balance Refunds
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the credit balance refunds endpoint to issue a credit balance refund on <</core-api/credit-accounts, credit account>>.\nWhen an account balance is negative, a balance refund can be issued to bring the balance closer to 0.\n\nCreating a balance refund triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `BALANCE_REFUND` group.\nFor more on balance refund journal entries, see <</developer-guides/about-credit-account-journal-entries#_credit_balance_refunds, Balance refunds>> in the About Credit Account Journal Entries guide."
  - name: Bundles (Beta)
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nThe bundles feature on Marqeta's credit platform enables you to create and manage bundles by choosing the specific policies that make up a bundle.\nA bundle must contain one document policy, credit product policy, fee policy, APR policy, and an optional reward policy.\nThe configurations of each policy in a bundle determine the characteristics and attributes of the bundle's associated credit accounts, reward programs, disclosures, and more.\nFor more on how to configure a policy, see <</core-api/policies, Policies>>.\n\n[IMPORTANT]\n====\nTo create and manage bundles, you must use the link:https://app.marqeta.com/[Marqeta Dashboard, window=\"_blank\"].\nFor more on bundles in the dashboard, see <</developer-guides/credit-programs-dashboard, Managing Credit Programs in the Marqeta Dashboard>>.\n\n&#160; +\n\nThe following endpoints are displayed for reference purposes only.\n===="
  - name: Credit Accounts
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the credit accounts endpoints to create and manage accounts on Marqeta's credit platform.\nA credit account centers around a single line of credit that can be accessed by one or more <</core-api/credit-cards, cards>>.\nAn account's attributes, such as the credit limit, APR, and fees, are inherited from the <</core-api/policies, policies>> on its associated bundle.\n\nFor more on accounts, see <</developer-guides/about-credit-accounts, About Credit Accounts>>."
  - name: Credit Account Disputes
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the credit account disputes endpoints to create and manage disputes on a <</core-api/credit-accounts, credit account>>.\n\nFor more on disputes, see <</developer-guides/about-credit-account-disputes, About Credit Account Disputes>>.\n\nCreating a dispute triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `DISPUTE` group.\nFor more on dispute journal entries, see <</developer-guides/about-credit-account-journal-entries#_disputes, Disputes>> in the About Credit Account Journal Entries guide."
  - name: Credit Products
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\n[IMPORTANT]\nThis feature is deprecated and replaced by credit product policies, which is part of the bundles feature.\nFor more on policies and bundles in a credit program, see <</developer-guides/credit-programs-dashboard, Managing Credit Programs in the Marqeta Dashboard>>.\n\nThe credit products feature on Marqeta's credit platform enables you to create and manage a credit product and customize its characteristics, such as the credit line range and required fees or APRs.\nCredit product characteristics determine the behaviors and attributes of associated credit accounts.\nFor more on credit products, see <</developer-guides/about-credit-products, About Credit Products>>.\n\nTo receive webhook notifications when product transition events occur, see <</core-api/event-types#_credit_product_transition_events, Credit product transition events>> in Event Types.\n\n[IMPORTANT]\n====\nTo create and manage credit products, you must use the link:https://app.marqeta.com/[Marqeta Dashboard, window=\"_blank\"].\nFor more, see <</developer-guides/credit-dashboard, Managing Credit Products in the Marqeta Dashboard>>.\n\n&#160; +\n\nThe following endpoints are displayed for reference purposes only.\n===="
  - name: Delinquency
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the delinquency endpoints to retrieve details on a credit account's delinquency state and transitions.\n\nAn account's delinquency state reflects whether an account is delinquent and past due on its payments or current and up to date on its payments.\n\nTo receive webhook notifications when an account transitions between delinquent and current, see <</core-api/event-types#_credit_account_delinquency_state_transition_events, Credit account delinquency state transition events>> in Event Types."
  - name: Journal Entries
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the journal entries endpoints to retrieve journal entries made on an <</core-api/credit-accounts, account>> on Marqeta's credit platform.\n\nA journal entry is a record of an entry made on an account journal, such as a purchase transaction, fee, adjustment, and more.\nFor more on the different types of journal entries, see <</developer-guides/about-credit-account-journal-entries, About Credit Account Journal Entries>>.\n\nJournal entries originate when a journal entry event occurs, such as a cardholder making a purchase or an account holder making a payment.\nTo receive webhook notifications when journal entry events occur, see <</core-api/event-types#_credit_journal_entry_events, Credit journal entry events>> in Event Types."
  - name: Ledger Entries
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\n[IMPORTANT]\n====\nThis feature is deprecated and replaced by journal entries.\n\n&#160; +\n\nFor documentation on journal entries, see:\n\n&#160; +\n\n* <</developer-guides/about-credit-account-journal-entries, About Credit Account Journal Entries>> - Developer guide\n* <</core-api/credit-account-journal-entries, Journal Entries>> - API reference\n* <</core-api/event-types#_credit_journal_entry_events, Credit journal entry event types>> - Webhook notifications.\n====\n\nUse the `/credit/accounts/{account_token}/ledgerentries` endpoint to retrieve ledger entries made on an <</core-api/credit-accounts, account>> on Marqeta's credit platform.\n\nA ledger entry is a record of an entry made on an account ledger, such as a purchase transaction, fee, adjustment, and more.\nFor more on the different types of ledger entries, see <</developer-guides/about-credit-account-ledger-entries, About Credit Account Ledger Entries>>.\n\nLedger entries originate when a ledger entry event occurs, such as a cardholder making a purchase or an account holder making a payment.\nTo receive webhook notifications when ledger entry events occur, see <</core-api/event-types#_credit_ledger_entry_events, Credit ledger entry events>> in Event Types."
  - name: Policies (Beta)
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nThe Marqeta credit platform's policies feature enables you to customize the configurations of policies for documents (such as disclosures), credit products, fees, APRs, and rewards.\nYou can choose the specific policies to add to a bundle that contain the exact configurations needed to launch a new credit program or help manage an existing one.\nThe configurations of each policy in a bundle determine the characteristics and attributes of the bundle's associated credit accounts, reward programs, disclosures, and more.\nFor more on how to create a bundle, see <</core-api/bundles, Bundles>>.\n\n[IMPORTANT]\n====\nTo create and manage policies, you must use the link:https://app.marqeta.com/[Marqeta Dashboard, window=\"_blank\"].\nFor more on policies in the dashboard, see <</developer-guides/credit-programs-dashboard, Managing Credit Programs in the Marqeta Dashboard>>.\n\n&#160; +\n\nThe following endpoints are displayed for reference purposes only.\n===="
  - name: Payment Schedules
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the payment schedule endpoints to create and retrieve payment schedules and payment schedule transitions on a <</core-api/credit-accounts, credit account>>.\n\nA payment schedule allows you to schedule a one-time or recurring payment on a credit account.\nFor more on payments, see <</developer-guides/about-credit-account-payments, About Credit Account Payments>>.\n\nTo receive webhook notifications when ACH payment transition events occur, see <</core-api/event-types#_credit_account_payment_transition_events, Credit account payment transition events>> in Event Types.\n\nMaking a payment on a payment schedule triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `PAYMENT` group.\nFor more on payment journal entries, see <</developer-guides/about-credit-account-journal-entries#_payments, Payments>> in the About Credit Account Journal Entries guide."
  - name: Payment Sources
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the  payment sources endpoint to link an external payment source to an <</core-api/credit-accounts, account>> on Marqeta's credit platform.\nThis enables account holders to use the linked payment source to make payments toward their account balance."
  - name: Payments
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the payments endpoints to create and retrieve payments made on a <</core-api/credit-accounts, credit account>>, release payment holds, or transition payment statuses.\n\nA payment is an amount paid toward an account balance to reduce the total amount owed on the account.\nFor more on payments, see <</developer-guides/about-credit-account-payments, About Credit Account Payments>>.\n\nTo receive webhook notifications when ACH payment transition events occur, see <</core-api/event-types#_credit_account_payment_transition_events, Credit account payment transition events>> in Event Types.\n\nCreating a payment triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `PAYMENT` group.\nFor more on payment journal entries, see <</developer-guides/about-credit-account-journal-entries#_payments, Payments>> in the About Credit Account Journal Entries guide."
  - name: Program Gateways
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\n[NOTE]\nThis feature requires additional activation steps.\nContact your Marqeta representative to activate it for your program.\n\nUse the Credit Program Gateways endpoints to create, retrieve, and update Program Gateways for your credit program.\nA Program Gateway allows you to exchanges messages with Marqeta's credit platform regarding decisions on transaction authorizations.\n\nFor more on Program Gateways, see <</developer-guides/about-credit-program-gateways, About Credit Program Gateways>>."
  - name: Statements
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the statements endpoints to retrieve statement information or statement files for a <</core-api/credit-accounts, credit account>>.\n\nAn account statement contains a summary of account activity that occurred during a billing cycle.\nFor more on statements, see <</developer-guides/about-credit-account-statements, About Credit Account Statements>>.\n\nTo receive a webhook notification when a statement is created, see <</core-api/event-types#_credit_account_statement_event, Credit account statement event>> in Event Types."
  - name: Fee Charges
    description: "A fee charge moves funds from the general purpose account (GPA) of an account holder to your program's fee account.\nThe charge amount is determined by the fee that is assessed.\nThe request returns an error if the GPA has insufficient funds to cover the fee.\nThis behavior contrasts with assessing a fee using the `/gpaorders` endpoint, in which case the amount of the fee is loaded into the GPA from the funding source before the GPA is debited."
  - name: Fee Refunds
    description: Use the `/feerefunds` endpoint to refund fees to your account holder's general purpose account (GPA).
  - name: Fees
    description: "A `fees` resource represents a monetary assessment against an account holder's general purpose account (GPA).\nAssessing a fee transfers funds from the account holder's GPA account to your program's fee account.\nBy default, every account has a GPA account used for the funding of transfers.\n\nYou can assess fees either post-transaction or in real time.\nReal-time fee assessment ensures the account has sufficient funds available to cover both the transaction amount and the fee before authorization of the transaction.\nTo assess fees in real time, you must create a real-time fee group using the `/realtimefeegroups` endpoint.\n\nWhen assessing a post-transaction fee, you can either debit existing GPA funds, or pull in new funds from a funding source.\nTo use existing GPA funds, use the `/feetransfers` endpoint.\nTo pull in new funds, use the fees array in `/gpaorders`.\n\n[NOTE]\nIf your program uses Gateway JIT Funding, you cannot assess fees."
  - name: Addresses
    description: "The address resource is your billing address.\nAn active address is required in order to use a payment card funding source.\nTo associate an address with a funding source, use the same `user_token` or `business_token` for both resources.\n\n[NOTE]\nThe `/users` and `/businesses` resources also have address fields.\nThose are used for other purposes, such as KYC identity verification or as shipping addresses for physical cards."
  - name: Account Holder Funding Sources
    description: "Use the `/fundingsources/ach`, `/fundingsources/ach/partner`, and `/fundingsources/paymentcard` endpoints to create account holder funding sources.\nA funding source enables access to funds outside of the Marqeta platform.\n\nFor more information on users and businesses, see <</developer-guides/about-account-holders, About Account Holders>>."
  - name: Program Funding Sources
    description: "Use the `/fundingsources/program` endpoint to create a program funding source.\n\nA program funding source represents a bank account from which funds are drawn for Managed Just-in-Time (JIT) Funding transactions.\nFor more information about JIT Funding, see <</developer-guides/about-jit-funding, About Just-in-Time Funding>>.\n\nIn the sandbox environment, each program funding source you create simulates funds for use in test transactions.\nIn production environments, program funding sources are created by Marqeta and draw funds from a bank account you set up in conjunction with Marqeta.\n\n[NOTE]\nYour program funding source must be approved by Marqeta and the issuing bank.\nIf you are using a third-party service to collect user funds, Marqeta and the issuing bank require specific reporting to ensure compliance with applicable rules and regulations.\nContact Marqeta for more information."
  - name: Program Gateway Funding Sources
    description: "Use the `/fundingsources/programgateway` endpoint to create a program gateway funding source.\n\nA program gateway funding source represents a bank account from which funds are drawn for Gateway Just-in-Time (JIT) Funding transactions.\nFor more information about JIT Funding, see <</developer-guides/about-jit-funding, About Just-in-Time Funding>>.\n\nIn a sandbox environment, you can create a program gateway funding source that simulates funds for use in test transactions.\nIn a production environment, you must work with a Marqeta representative to define the bank account from which the program gateway funding source draws funds.\n\n[NOTE]\nIf you are using a third-party service to collect user funds, Marqeta and the issuing bank require specific reporting to ensure compliance with applicable rules and regulations.\nContact Marqeta for more information."
  - name: GPA Orders
    description: "The `/gpaorders` endpoint moves funds from a funding source into an\naccount holder's general-purpose account (GPA).\n\nGPA orders can also be used to move funds from an account holder's funding source into your program's fee account.\n\nGPA orders can be funded by the account holder or your program."
  - name: KYC Verification
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/kyc` endpoint to perform Know Your Customer (KYC) verification tasks for your account holders.\n\nThis endpoint can only be used to perform KYC verification for individuals or businesses in the United States.\n\nFor more information about KYC verification, see <</developer-guides/about-kyc, About KYC Verification>>.\n\nFor more information about account holders, see <</developer-guides/about-account-holders, About Account Holders>>."
  - name: MCC Groups
    description: "A merchant category code (MCC) is a four-digit number assigned by card networks to a business based on the goods or services offered by the business.\nOn the Marqeta platform, an MCC group defines a set of MCCs.\nYou can include an MCC group within a spend control to limit user spending at a set of merchants.\n\nAn MCC group also allows you to automatically increase authorization amounts and to control the expiration of authorizations for the specified MCCs.\nBy default, these controls apply to all cards in your program.\nAn MCC group authorization control can have exceptions defined at the card product level.\n\nSee <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control, as well as links to more information about merchant category codes."
  - name: Merchant Groups
    description: "Use the `/merchantgroups` endpoint to create, update, and retrieve groups of merchant identifiers (MIDs).\nYou can use merchant groups for authorization controls and in card product configurations.\nFor example, use a merchant group to create a <</core-api/authorization-controls#_create_a_merchant_mid_exemption, merchant exemption>> for a group of merchants rather than an individual merchant."
  - name: Peer Transfers
    description: "A peer transfer moves funds from the general purpose account (GPA) of an account holder (a user or business) to another account within your program.\nBoth the sender and recipient accounts must be active.\n\n[NOTE]\nThe `/peertransfers` endpoint is only available for specific, pre-approved use cases.\nFor more information about this endpoint, contact your Marqeta representative."
  - name: PINs
    description: 'Use the `/pins` endpoint to create, update, or reveal a personal identification number (PIN) for a card.'
  - name: Program Reserve
    description: 'Use the Program Reserve API to credit or debit your program reserve account (sometimes referred to as a _program funding account_), and to return program reserve balances and transactions.'
  - name: Program Transfers
    description: "A program transfer moves funds from an account holder's general purpose account (GPA) to a program funding source.\nIn contrast to a fee transfer, the program transfer amount is specified by the transfer itself and can therefore be set dynamically.\nAn auto reload is triggered if the GPA has insufficient funds to cover the transfer amount and auto reload is enabled.\n\n[NOTE]\nThe `/programtransfers` endpoint is only available for specific, pre-approved use cases.\nFor more information about this endpoint, contact your Marqeta representative."
  - name: Real-Time Fee Groups
    description: "Marqeta enables you to assess fees in real time through the use of real-time fee groups.\nA real-time fee group is a collection of fees associated with an account holder group (and thereby associated with the users and businesses that are part of that account holder group).\nReal-time fee assessment ensures that associated accounts have sufficient funds available to cover both the transaction amount and the fee before authorization of a transaction.\n\nBefore you create a real-time fee group, you must create the individual fees (using the `/fees` endpoint) and the account holder group with which you will associate the real-time fee group (using the `/accountholdergroups` endpoint).\nEach fee in the group must be applicable to a different transaction type.\nFor example, one fee could assess $1 on authorization transactions while another assesses $2 on PIN-debit transactions.\n\nUse of real-time fee groups requires prior approval by Marqeta.\nIf you are interested in using this feature for your card program, contact your Marqeta representative for more information.\n\n[NOTE]\nIf your program uses Gateway JIT Funding, you cannot assess fees."
  - name: Reward Programs (Beta)
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/credit/rewardprograms/{token}` endpoint to manage reward programs and track reward accruals on a credit account.\nThe configurations for a reward program are defined in the <</developer-guides/credit-programs-dashboard#_creating_a_reward_policy, reward policy>> on the account's associated bundle.\nTo receive webhook notifications when reward entry events occur, see <</core-api/event-types#_credit_reward_entry_events, Credit reward entry events>> in Event Types."
  - name: Reward Redemptions (Beta)
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/credit/rewardprograms/{token}/redemptions` endpoint to the manage reward redemptions on a credit account.\nA reward program's rules configuration specifies how rewards are redeemed and is defined in the <</developer-guides/credit-programs-dashboard#_creating_a_reward_policy, reward policy>> on the account's associated bundle.\nTo receive webhook notifications when reward redemption transition events occur, see <</core-api/event-types#_credit_reward_redemption_transition_events, Credit reward redemption transition events>> in Event Types."
  - name: Digital Wallets Management
    description: "The Marqeta platform facilitates the use of digital wallets for storing tokenized cards and making payments.\nThe API provides endpoints that enable mobile applications to provision tokens into a digital wallet.\nIt also provides endpoints for retrieving digital wallet tokens and for managing their lifecycle through state transitions.\n\nFor an overview of digital wallet tokens, see <</developer-guides/digital-wallets-and-tokenization, Digital Wallets and Tokenization>>."
  - name: Transactions
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nThe `/transactions` resource represents the electronic messages that carry information used for payment processing.\nA transaction usually originates when a cardholder attempts to make a payment, either online or at a physical point of sale.\n\nYou can receive information about transactions as they occur by configuring webhooks.\nLearn about configuring webhooks in the <</developer-guides/about-webhooks, About Webhooks>> guide.\nSee the transaction events for which you can set up webhooks in the <</core-api/event-types, Event Types>> API reference page.\n\nYou can also retrieve transactions associated with specific cards, merchants, and account holders using the endpoints described here.\n\nFor an overview of transactions and the `transaction` object, including the complete list of <</developer-guides/about-transactions#_transaction_response_codes, transaction response codes>>, see <</developer-guides/about-transactions, About Transactions>>.\n\n[TIP]\nUse the `/transactions` endpoint to retrieve smaller datasets (up to one page).\nFor best performance when requesting larger datasets, use the <</diva-api/introduction, DiVA API>>."
  - name: Users
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nThe `users` resource represents a person who accesses Marqeta-administered funds via a Marqeta card (whether physical or virtual).\nThis endpoint enables you to create and manage users on the Marqeta platform.\n\nThis resource stores user attributes such as name, address, and date of birth, as well as financial information such as balances.\nBy default, every user automatically has a general purpose account (GPA) that is used for the funding of transfers and is therefore an `account holder`.\nNote that account balances reside at the account holder level — there are no separate `account` or `balance` objects.\n\nYou can use the `/users` endpoint to create parent-child relationships between two users (where one user is the parent and the other is the child) or between a business and a user (where the business is the parent and the user is the child).\nThis relationship provides reporting to the parent about how cards of children are used and enables the parent to monitor and even restrict card usage.\n\n[NOTE]\nA user can simultaneously be a child of a business and a parent of other users if the user is not configured to use a parent's account balances and the user's child is configured to use a parent's account balances.\nFor more information on account holders, see <</developer-guides/about-account-holders, About Account Holders>>."
  - name: User Transitions
    description: 'Use the `/usertransitions` endpoints to transition user resources between statuses, as well as to retrieve and list status changes for a user resource.'
  - name: Velocity Controls
    description: "A velocity control limits how much users can spend.\nYou can configure velocity controls to limit how much users can spend and the number of transactions they can make in a given span of time.\nYou can apply velocity controls to a single user, to all users associated with a particular card product, or to all users in your program.\n\nOnly Program Managers can create or modify program-wide velocity controls.\nA `POST` or `PUT` call from a role that does not have Program Manager permissions will receive a 403 error if its `association` field is null, or if it includes all of the fields in the request body.\nAvoid this by passing a valid `user_token` or `card_product_token` in the velocity control's `association` object, indicating that the request is specific to a user or card product, and not program-wide.\nYou should also only include the specific fields you want to update, because a `PUT` or `POST` with values for all fields is interpreted as a change that requires Program Manager permissions.\n\nSee <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control.\n\n[NOTE]\nEach program supports a maximum of 90 spend controls (velocity controls and <</core-api/authorization-controls, authorization controls>> combined).\nThe limit of 90 spend controls applies at the program level only; it does not affect the number of user-level spend controls you can use."
  - name: Webhooks
    description: "Webhooks are notifications about API events, sent as they occur.\nThe Marqeta platform sends these notifications to an endpoint that is hosted in your environment and configured to receive and process them.\n\nCreate a webhook object to represent your webhook endpoint.\nConfigure it with the URL of your webhook endpoint and a set of credentials for accessing that endpoint.\nYou can configure it to send notifications for a single event, a group of events by type, or all event types.\nTo set up multiple webhook endpoints and route different types of event notifications to each, create multiple webhook objects and configure each to send a specific type of event notification to a specific endpoint.\n\nSee <</developer-guides/about-webhooks, About Webhooks>> for information on notifications and a tutorial that walks you through the configuration of your webhook endpoint.\n\nSee <</core-api/event-types, Event Types>> for reference documentation on the types of events that the Marqeta platform supports.\n\n[NOTE]\nWebhooks URLs are cached.\nChanges made on your webhook endpoint can take up to one hour to be applied."
  - name: Applications
    description: "[NOTE]\nThis feature is currently in limited-availability beta and subject to change.\nTo learn more about the beta program for this feature, contact your Marqeta representative.\n\nMarqeta's credit platform's credit applications feature enables you to create and manage credit account applications and retrieve disclosures that you can show to an applicant during the application process.\n\nTo receive webhook notifications when application transition events occur, see <</core-api/event-types#_credit_application_transition_events, Credit application transition events>> in Event Types."