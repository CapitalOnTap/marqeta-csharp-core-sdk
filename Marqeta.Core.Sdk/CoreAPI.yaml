openapi: 3.0.1
info:
  title: Core API
  description: 'Marqeta''s Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.'
  termsOfService: https://www.marqeta.com/api-terms
  contact:
    name: Marqeta
    email: support@marqeta.com
  version: 3.0.25
servers:
  - url: /v3
paths:
  /acceptedcountries:
    get:
      tags:
        - accepted countries
      summary: Lists all accepted countries
      operationId: getAcceptedcountries
      parameters:
        - name: count
          in: query
          description: Number of accepted countries to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: name
          in: query
          description: Name
          style: form
          schema:
            type: string
        - name: whitelist
          in: query
          description: Whitelist
          style: form
          schema:
            type: boolean
        - name: search_type
          in: query
          description: Search type
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedCountriesListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/acceptedcountries/{token}':
    get:
      tags:
        - accepted countries
      summary: Returns a specific accepted country
      operationId: getAcceptedcountriesToken
      parameters:
        - name: token
          in: path
          description: Accepted country token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accepted_countries_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /accountholdergroups:
    get:
      tags:
        - account holder groups
      summary: Lists account holder groups
      operationId: getAccountholdergroups
      parameters:
        - name: count
          in: query
          description: Number of items to retrieve. Count can be between 1 - 10 items.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: Indicates from what row to start returning data.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: 'Field by which to sort the returned items. Use any field in the model, or system fields lastModifiedTime or createdTime.'
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountHolderGroupListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - account holder groups
      summary: Creates an account holder group object
      operationId: postAccountholdergroups
      requestBody:
        description: Account holder group object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account_holder_group_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_holder_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/accountholdergroups/{token}':
    get:
      tags:
        - account holder groups
      summary: Returns a specific account holder group object
      operationId: getAccountholdergroupsToken
      parameters:
        - name: token
          in: path
          description: Account holder group token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_holder_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - account holder groups
      summary: Updates an account holder group object
      operationId: putAccountholdergroupsToken
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Account holder group update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account_holder_group_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_holder_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /authcontrols:
    get:
      tags:
        - auth controls
      summary: Lists all global auth control exceptions for the program
      operationId: getAuthcontrols
      parameters:
        - name: card_product
          in: query
          description: Card product token. Use "null" to get auth controls that are not associated with any card product.
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: User token. Use "null" to get auth controls that are not associated with any user.
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: Number of items to retrieve. Count can be between 1 - 10 items.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Indicates from what row to start returning data.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: 'Field by which to sort the returned items. Use any field in the model, or system fields lastModifiedTime or createdTime.'
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthControlListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - auth controls
      summary: Creates an auth control exception
      operationId: postAuthcontrols
      requestBody:
        description: Auth control object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_control_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /authcontrols/exemptmids:
    get:
      tags:
        - auth controls
      summary: Lists all auth control exempted MIDs for the program
      operationId: getAuthcontrolsExemptmids
      parameters:
        - name: card_product
          in: query
          description: Card product token. Use "null" to get auth controls that are not associated with any card product.
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: User token. Use "null" to get auth controls that are not associated with any user.
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: Number of items to retrieve. Count can be between 1 - 10 items.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Indicates from what row to start returning data.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: 'Field by which to sort the returned items. Use any field in the model, or system fields lastModifiedTime or createdTime.'
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthControlExemptMidsListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - auth controls
      summary: Creates an auth control for exempting MIDs
      operationId: postAuthcontrolsExemptmids
      requestBody:
        description: Auth control exempt MID object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_control_exempt_mids_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_control_exempt_mids_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/authcontrols/exemptmids/{token}':
    get:
      tags:
        - auth controls
      summary: Returns a specific auth control exemptmids
      operationId: getAuthcontrolsExemptmidsToken
      parameters:
        - name: token
          in: path
          description: Auth control token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_control_exempt_mids_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - auth controls
      summary: Updates the status an auth control exemptmids
      operationId: putAuthcontrolsExemptmidsToken
      parameters:
        - name: token
          in: path
          description: Auth control token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_control_exempt_mids_update_request'
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/authcontrols/{token}':
    get:
      tags:
        - auth controls
      summary: Returns a specific auth control exception
      operationId: getAuthcontrolsToken
      parameters:
        - name: token
          in: path
          description: Auth control token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - auth controls
      summary: Updates an auth control exception
      operationId: putAuthcontrolsToken
      parameters:
        - name: token
          in: path
          description: Auth control token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Auth control object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_control_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /autoreloads:
    get:
      tags:
        - auto reloads
      summary: Lists all auto reloads for the program
      operationId: getAutoreloads
      parameters:
        - name: card_product
          in: query
          description: Card product token
          style: form
          schema:
            type: string
        - name: user_token
          in: query
          description: User token
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: Business token
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: Number of items to retrieve. Count can be between 1 - 10 items.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: Indicates from what row to start returning data.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: 'Field by which to sort the returned items. Use any field in the model, or system fields lastModifiedTime or createdTime.'
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoReloadListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - auto reloads
      summary: Creates an auto reload object
      operationId: postAutoreloads
      requestBody:
        description: Auto reload object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auto_reload_model'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auto_reload_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/autoreloads/{token}':
    get:
      tags:
        - auto reloads
      summary: Returns a specific auto reload object
      operationId: getAutoreloadsToken
      parameters:
        - name: token
          in: path
          description: Auto reload token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auto_reload_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - auto reloads
      summary: Updates a specific auto reload object
      operationId: putAutoreloadsToken
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Auto reload object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auto_reload_update_model'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auto_reload_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/balances/{token}':
    get:
      tags:
        - cardholder balances
      summary: Returns account balances for a cardholder
      operationId: getBalancesToken
      parameters:
        - name: token
          in: path
          description: User or Business token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardholder_balances'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /banktransfers/ach:
    get:
      tags:
        - bank transfers
      summary: Lists all bank transfers
      operationId: getBanktransfersAch
      parameters:
        - name: count
          in: query
          description: Number of users to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: user_token
          in: query
          description: User token
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: Business token
          style: form
          schema:
            type: string
        - name: funding_source_token
          in: query
          description: Funding source token
          style: form
          schema:
            type: string
        - name: statuses
          in: query
          description: A comma-delimited list of bank transfer status(s)
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: expand
          in: query
          description: Object to expand
          style: form
          schema:
            type: string
        - name: funding_source_type
          in: query
          description: Funding source type
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransferListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - bank transfers
      summary: Creates an ACH bank transfer
      operationId: postBanktransfersAch
      requestBody:
        description: Create bank transfer request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bank_transfer_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_transfer_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /banktransfers/ach/earlyfunds:
    post:
      tags:
        - bank transfers
      summary: Applies a provisional credit to a bank transfer
      operationId: postApplyProvisionalCreditToBankTransfer
      requestBody:
        description: Early funds request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/early_funds_request_model'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_transfer_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /banktransfers/ach/transitions:
    get:
      tags:
        - bank transfers
      summary: Lists all bank transfer transitions
      operationId: getBanktransfersAchTransitions
      parameters:
        - name: count
          in: query
          description: Number of bank transfer transitions to retrieve
          style: form
          schema:
            maximum: 50
            type: integer
            format: int32
            default: 5
        - name: token
          in: query
          description: Bank transfer transition token
          style: form
          schema:
            type: string
        - name: bank_transfer_token
          in: query
          description: Bank transfer token
          style: form
          schema:
            type: string
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
        - name: statuses
          in: query
          description: Comma-delimited list of bank transfer states to display e.g. PENDING | PROCESSING | SUBMITTED | RETURNED |  COMPLETED | CANCELLED
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankTransferTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - bank transfers
      summary: Creates an ACH bank transfer transition
      operationId: postBanktransfersAchTransitions
      requestBody:
        description: Create bank transfer transition request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bank_transfer_transition_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_transfer_transition_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/banktransfers/ach/{token}':
    get:
      tags:
        - bank transfers
      summary: Returns a bank transfer entry
      operationId: getBanktransfersAchToken
      parameters:
        - name: token
          in: path
          description: Bank transfer token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bank_transfer_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /bulkissuances:
    get:
      tags:
        - bulk issuances
      summary: Lists all bulk issuance requests
      operationId: getBulkissuances
      parameters:
        - name: count
          in: query
          description: Number of requests to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCardOrderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - bulk issuances
      summary: Creates a bulk issuance request for cards
      operationId: postBulkissuances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulk_issuance_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bulk_issuance_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/bulkissuances/{token}':
    get:
      tags:
        - bulk issuances
      summary: Returns a bulk issuance request
      operationId: getBulkissuancesToken
      parameters:
        - name: token
          in: path
          description: Bulk issuance token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bulk_issuance_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /businesses:
    get:
      tags:
        - businesses
      summary: Lists all businesses
      operationId: getBusinesses
      parameters:
        - name: count
          in: query
          description: Number of users to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: business_name_dba
          in: query
          description: Business name DBA
          style: form
          schema:
            type: string
        - name: business_name_legal
          in: query
          description: Business name legal
          style: form
          schema:
            type: string
        - name: search_type
          in: query
          description: Search type
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCardHolderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - businesses
      summary: Creates a business
      operationId: postBusinesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business_cardholder'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business_card_holder_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /businesses/lookup:
    post:
      tags:
        - businesses
      summary: Returns a specific business
      operationId: postBusinessesLookup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DDARequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business_cardholder'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesses/{parent_token}/children':
    get:
      tags:
        - businesses
      summary: Lists all children of a parent business
      operationId: getBusinessesParenttokenChildren
      parameters:
        - name: count
          in: query
          description: Number of users to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: parent_token
          in: path
          description: Token of parent business
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUserCardHolderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesses/{token}':
    get:
      tags:
        - businesses
      summary: Returns a specific business
      operationId: getBusinessesToken
      parameters:
        - name: token
          in: path
          description: Business token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business_card_holder_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - businesses
      summary: Updates a specific business
      operationId: putBusinessesToken
      parameters:
        - name: token
          in: path
          description: Business token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Business object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business_card_holder_update'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business_cardholder'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesses/{token}/notes':
    get:
      tags:
        - businesses
      summary: Lists business notes
      operationId: getBusinessesTokenNotes
      parameters:
        - name: token
          in: path
          description: Business token
          required: true
          style: simple
          schema:
            type: string
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: count
          in: query
          description: Number of notes to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: created_by
          in: query
          description: Created by
          style: form
          schema:
            type: string
        - name: created_by_user_role
          in: query
          description: Comma-delimited list of created by user roles
          style: form
          schema:
            type: string
        - name: include_private
          in: query
          description: Include private notes and private fields in note response
          style: form
          schema:
            type: boolean
        - name: search_type
          in: query
          description: Search type
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardHolderNoteListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - businesses
      summary: Creates a note for a business
      operationId: postBusinessesTokenNotes
      parameters:
        - name: token
          in: path
          description: Business token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cardholder_note_request_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardholder_note_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesses/{token}/notes/{notes_token}':
    put:
      tags:
        - businesses
      summary: Updates a specific note for a business
      operationId: putBusinessesTokenNotesNotestoken
      parameters:
        - name: token
          in: path
          description: Business token
          required: true
          style: simple
          schema:
            type: string
        - name: notes_token
          in: path
          description: Notes token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cardholder_note_update_request_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardholder_note_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesses/{token}/ssn':
    get:
      tags:
        - businesses
      summary: Returns a specific business proprietor's SSN
      operationId: getBusinessesTokenSsn
      parameters:
        - name: token
          in: path
          description: Business token
          required: true
          style: simple
          schema:
            type: string
        - name: full_ssn
          in: query
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ssn_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /businesstransitions:
    post:
      tags:
        - business transitions
      summary: Creates a business transition
      operationId: postBusinesstransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessTransitionRequest'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesstransitions/business/{business_token}':
    get:
      tags:
        - business transitions
      summary: Returns transitions for a given business
      operationId: getBusinesstransitionsBusinessBusinesstoken
      parameters:
        - name: business_token
          in: path
          description: Business token
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of business transitions to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-id'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/businesstransitions/{token}':
    get:
      tags:
        - business transitions
      summary: Returns a business transition
      operationId: getBusinesstransitionsToken
      parameters:
        - name: token
          in: path
          description: Transition token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /campaigns:
    get:
      summary: Get campaigns.
      operationId: getCampaigns
      parameters:
        - name: count
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      summary: Create campaigns.
      operationId: createCampaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/campaign_model'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/campaigns/{token}':
    delete:
      summary: Delete campaign by token.
      operationId: deleteCampaignByToken
      parameters:
        - name: token
          in: path
          description: Campaign token
          required: true
          style: simple
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      summary: Get campaign by token.
      operationId: getCampaignByToken
      parameters:
        - name: token
          in: path
          description: Campaign token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          style: form
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      summary: Update campaigns by token.
      operationId: updateCampaignsByToken
      parameters:
        - name: token
          in: path
          description: Campaign token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/campaign_update_model'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/campaigns/{token}/stores':
    get:
      summary: Get campaigns token stores.
      operationId: getCampaignsTokenStores
      parameters:
        - name: token
          in: path
          description: Campaign token
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /cardproducts:
    get:
      tags:
        - card products
      summary: Lists all card products
      operationId: getCardproducts
      parameters:
        - name: count
          in: query
          description: Number of items to retrieve. Count can be between 1 - 10 items.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Indicates from what row to start returning data.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardProductListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - card products
      summary: Creates a card product
      operationId: postCardproducts
      requestBody:
        description: Card product object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_product_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_product_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cardproducts/{token}':
    get:
      tags:
        - card products
      summary: Returns a specific card product
      operationId: getCardproductsToken
      parameters:
        - name: token
          in: path
          description: Card product token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_product_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - card products
      summary: Updates a specific card product
      operationId: putCardproductsToken
      parameters:
        - name: token
          in: path
          description: Card product token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Card product object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_product_update_model'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_product_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /cards:
    get:
      tags:
        - cards
      summary: Lists cards by the last 4 digits
      operationId: getCards
      parameters:
        - name: count
          in: query
          description: Number of cards to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: last_four
          in: query
          description: Last four digits of card number
          required: true
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - cards
      summary: Creates a card
      operationId: postCards
      parameters:
        - name: show_cvv_number
          in: query
          description: Show CVV
          style: form
          schema:
            type: boolean
            default: false
        - name: show_pan
          in: query
          description: Show PAN
          style: form
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cards/barcode/{barcode}':
    get:
      tags:
        - cards
      summary: Returns a card's metadata
      operationId: getCardsBarcodeBarcode
      parameters:
        - name: barcode
          in: path
          description: Barcode
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /cards/getbypan:
    post:
      tags:
        - cards
      summary: Returns user and card tokens for the specified PAN
      operationId: postCardsGetbypan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pan_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pan_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cards/merchant/{merchant_token}':
    get:
      tags:
        - cards
      summary: Returns a merchant onboarding card
      operationId: getCardsMerchantMerchanttoken
      parameters:
        - name: merchant_token
          in: path
          description: Merchant token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - cards
      summary: Creates a merchant onboarding card
      operationId: postCardsMerchantMerchanttoken
      parameters:
        - name: merchant_token
          in: path
          description: Merchant token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant_card_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cards/merchant/{merchant_token}/showpan':
    get:
      tags:
        - cards
      summary: Returns a specific card - PAN visible
      operationId: getCardsMerchantMerchanttokenShowpan
      parameters:
        - name: merchant_token
          in: path
          description: Merchant token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: show_cvv_number
          in: query
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cards/user/{token}':
    get:
      tags:
        - cards
      summary: Lists all cards for a specific user
      operationId: getCardsUserToken
      parameters:
        - name: token
          in: path
          description: User token
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of items to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cards/{card_hash}/showpanbyhash':
    get:
      tags:
        - cards
      summary: Returns a specific card - PAN visible
      operationId: getCardsCardHashShowpan
      parameters:
        - name: card_hash
          in: path
          description: Card Hash
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: show_cvv_number
          in: query
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cards/{token}':
    get:
      tags:
        - cards
      summary: Returns a specific card
      operationId: getCardsToken
      parameters:
        - name: token
          in: path
          description: Card token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: expand
          in: query
          description: Object to expand
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - cards
      summary: Updates a specific card
      operationId: putCardsToken
      parameters:
        - name: token
          in: path
          description: Card token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_update_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cards/{token}/showpan':
    get:
      tags:
        - cards
      summary: Returns a specific card - PAN visible
      operationId: getCardsTokenShowpan
      parameters:
        - name: token
          in: path
          description: Card token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: show_cvv_number
          in: query
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /cardtransitions:
    post:
      tags:
        - card transitions
      summary: Creates a card transition object
      operationId: postCardtransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_transition_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cardtransitions/card/{token}':
    get:
      tags:
        - card transitions
      summary: Lists all card transitions
      operationId: getCardtransitionsCardToken
      parameters:
        - name: token
          in: path
          description: Card token
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of card transitions to retrieve
          style: form
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/cardtransitions/{token}':
    get:
      tags:
        - card transitions
      summary: Returns a card transition object
      operationId: getCardtransitionsToken
      parameters:
        - name: token
          in: path
          description: Card transition token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /chargebacks:
    get:
      tags:
        - chargebacks
      summary: List all chargebacks
      operationId: getChargebacks
      parameters:
        - name: count
          in: query
          description: Number of chargebacks to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: network_reference_id
          in: query
          description: Network reference ID
          style: form
          schema:
            type: string
        - name: transaction_token
          in: query
          description: Transaction token
          style: form
          schema:
            type: string
        - name: amount
          in: query
          description: Amount
          style: form
          schema:
            type: string
        - name: states
          in: query
          description: Comma-delimited list of chargeback states to display e.g. INITIATED | REPRESENTMENT | PREARBITRATION | ARBITRATION | CASE_WON | CASE_LOST | NETWORK_REJECTED | WITHDRAWN | WRITTEN_OFF_ISSUER | WRITTEN_OFF_PROGRAM
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: network_case_id
          in: query
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - chargebacks
      summary: Creates a chargeback
      operationId: postChargebacks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chargeback_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chargeback_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /chargebacks/allocationacknowledgement:
    post:
      tags:
        - chargebacks
      summary: Creates a chargeback allocation acknowledgement
      operationId: postChargebackAllocationAcknowledgment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chargeback_allocation_ack_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chargeback_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /chargebacks/transitions:
    post:
      tags:
        - chargebacks
      summary: Creates a chargeback transition
      operationId: postChargebacksTransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chargeback_transition_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chargeback_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/chargebacks/transitions/{token}':
    get:
      tags:
        - chargebacks
      summary: Returns a specific chargeback transition
      operationId: getChargebacksTransitionsToken
      parameters:
        - name: token
          in: path
          description: Chargeback transition token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chargeback_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/chargebacks/{chargeback_token}/transitions':
    get:
      tags:
        - chargebacks
      summary: Lists all chargeback transitions that are related to a chargeback
      operationId: getChargebacksChargebacktokenTransitions
      parameters:
        - name: count
          in: query
          description: Number of transitions to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: chargeback_token
          in: path
          description: Chargeback token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/chargebacks/{token}':
    get:
      tags:
        - chargebacks
      summary: Returns a specific chargeback
      operationId: getChargebacksToken
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chargeback_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - chargebacks
      summary: Updates chargeback data
      operationId: putChargebacksToken
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargebackUpdateRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chargeback_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/chargebacks/{token}/grantprovisionalcredit':
    put:
      tags:
        - chargebacks
      summary: Grants provisional credit
      operationId: putChargebacksTokenGrantprovisionalcredit
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chargeback_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/chargebacks/{token}/reverseprovisionalcredit':
    put:
      tags:
        - chargebacks
      summary: Reverses provisional credit
      operationId: putChargebacksTokenReverseprovisionalcredit
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chargeback_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /commandomodes:
    get:
      tags:
        - commando modes
      summary: Lists all commando mode control sets
      operationId: getCommandomodes
      parameters:
        - name: count
          in: query
          description: Number of commando modes to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandoModeListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/commandomodes/transitions/{token}':
    get:
      tags:
        - commando modes
      summary: Returns a specific commando mode transition
      operationId: getCommandomodesTransitionsToken
      parameters:
        - name: token
          in: path
          description: Commando mode transition token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commando_mode_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/commandomodes/{commandomode_token}/transitions':
    get:
      tags:
        - commando modes
      summary: Lists all commando mode transitions related to a commando mode control set
      operationId: getCommandomodesCommandomodetokenTransitions
      parameters:
        - name: count
          in: query
          description: Number of transitions to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
        - name: commandomode_token
          in: path
          description: Commando mode token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandoModeTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/commandomodes/{token}':
    get:
      tags:
        - commando modes
      summary: Returns a specific commando mode control set
      operationId: getCommandomodesToken
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commando_mode_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /depositaccounts:
    post:
      tags:
        - direct deposit accounts
      summary: Creates new direct deposit account for cardholder.
      operationId: createAccount
      requestBody:
        description: Create direct deposit account for cardholder
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/direct_deposit_account_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/account/{account_number}/user':
    get:
      tags:
        - direct deposit accounts
      summary: Get User for Plain Text Account Number
      operationId: getUserForDirectDepositAccount
      parameters:
        - name: account_number
          in: path
          description: Get user associated with direct deposit account number
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /depositaccounts/transitions:
    post:
      tags:
        - direct deposit accounts
      summary: Creates new transition for a direct deposit account.
      operationId: createTransition
      requestBody:
        description: Create transition for direct deposit account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/direct_deposit_account_transition_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/transitions/{token}':
    get:
      tags:
        - direct deposit accounts
      summary: Get direct deposit account transition.
      operationId: getDirectDepositAccountTransition
      parameters:
        - name: token
          in: path
          description: Get specific direct deposit account transition
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/user/{token}':
    get:
      tags:
        - direct deposit accounts
      summary: List all specific direct deposit accounts.
      operationId: getUserDirectDepositAccounts
      parameters:
        - name: count
          in: query
          description: Number of users to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: state
          in: query
          description: Direct deposit account status
          style: form
          schema:
            enum:
              - ACTIVE
              - SUSPENDED
              - TERMINATED
              - UNSUPPORTED
              - UNACTIVATED
              - LIMITED
            type: string
        - name: token
          in: path
          description: Get specific direct deposit account
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositAccountListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/user/{token}/direct':
    get:
      summary: Get deposit account user token.
      operationId: getDepositAccountUserToken
      parameters:
        - name: token
          in: path
          description: Token
          required: true
          style: simple
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: true
  '/depositaccounts/{token}':
    get:
      tags:
        - direct deposit accounts
      summary: Get direct deposit account.
      operationId: getDirectDepositAccount
      parameters:
        - name: token
          in: path
          description: Get specific direct deposit account
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - direct deposit accounts
      summary: Update direct deposit account.
      operationId: update
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Update direct deposit account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositAccountUpdateRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: true
  '/depositaccounts/{token}/cdd':
    get:
      tags:
        - direct deposit accounts
      summary: Get direct deposit account transition list for card holder.
      operationId: getCDDInfo
      parameters:
        - name: token
          in: path
          description: Get CDD info for a specific DDA token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer_due_diligence_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/{token}/cdd/{cddtoken}':
    put:
      tags:
        - direct deposit accounts
      summary: Update CDD answers for Direct Deposit Account
      operationId: updateCDDInfo
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: cddtoken
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Update CDD answers
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer_due_diligence_update_response'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer_due_diligence_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/depositaccounts/{user_token}/transitions':
    get:
      tags:
        - direct deposit accounts
      summary: Get direct deposit account transition list for card holder.
      operationId: getTransitionList
      parameters:
        - name: count
          in: query
          description: Number of users to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
        - name: user_token
          in: path
          description: Get direct deposit account transition list for user
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwalletprovisionrequests/androidpay:
    post:
      tags:
        - Digital Wallets Management
      summary: Create digital wallet token provisioning request for Google Wallet
      description: "Use this endpoint to return card data for use in provisioning a digital wallet token into Google Wallet.\n\nThe returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead."
      operationId: postDigitalwalletprovisionrequestsAndroidpay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_android_pay_provision_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_android_pay_provision_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwalletprovisionrequests/applepay:
    post:
      tags:
        - Digital Wallets Management
      summary: Create digital wallet token provisioning request for Apple Wallet
      description: "Use this endpoint to return card data for use in provisioning a digital wallet token into Apple Wallet.\n\nThe returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead."
      operationId: postDigitalwalletprovisionrequestsApplepay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_apple_pay_provision_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_apple_pay_provision_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwalletprovisionrequests/samsungpay:
    post:
      tags:
        - Digital Wallets Management
      summary: Create digital wallet token provisioning request for Samsung Wallet
      description: "[NOTE]\nThis endpoint is limited in availability.\nFor more information, contact your Marqeta representative.\n\nUse this endpoint to return card data for use in provisioning a digital wallet token into Samsung Wallet.\n\nThe returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead."
      operationId: postDigitalwalletprovisionrequestsSamsungpay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_samsung_pay_provision_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_samsung_pay_provision_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwalletprovisionrequests/xpay:
    post:
      tags:
        - Digital Wallets Management
      summary: Create digital wallet token provisioning request for XPay
      description: "[NOTE]\nThis endpoint is limited in availability.\nFor more information, contact your Marqeta representative.\n\nUse this endpoint to return card data for use in provisioning a digital wallet token into an XPay digital wallet.\n\nThe returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead."
      operationId: postDigitalwalletprovisionrequestsXPay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_x_pay_provision_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_x_pay_provision_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwallets/clicktopay/mastercard/checkeligibility:
    get:
      tags:
        - Digital Wallets Management
      summary: Check eligibility for Click to Pay
      description: Use this endpoint to check if a provided BIN prefix is eligible for Click to Pay.
      operationId: getClicktopayMastercardCheckeligibility
      parameters:
        - name: bin_prefix
          in: query
          description: Prefix of the bank identification number.
          required: true
          style: form
          schema:
            type: string
            x-allowableValues: "A six- to nine-digit number\n\n*NOTE:* It is preferable to use eight- or nine-digit BIN prefixes in production environments.\nContact your Marqeta representative for the appropriate value to use."
        - name: include_asset
          in: query
          description: Returns a list of image assets for the Click to Pay logo if set to `true`.
          style: form
          schema:
            type: boolean
            default: false
            x-allowableValues: '`true`, `false`'
        - name: req-sys-id
          in: header
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Eligibility check successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/click_to_pay_check_eligibility_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwallets/clicktopay/mastercard/enroll:
    post:
      tags:
        - Digital Wallets Management
      summary: Enroll a card to Click to Pay
      description: Use this endpoint to enroll a card asynchronously to Click to Pay.
      operationId: postClicktopayMastercardEnroll
      parameters:
        - name: req-sys-id
          in: header
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/click_to_pay_enroll_request'
        required: true
      responses:
        '201':
          description: Enrollment Request Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/click_to_pay_enroll_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/digitalwallets/clicktopay/mastercard/status/{token}':
    get:
      tags:
        - Digital Wallets Management
      summary: Get Click to Pay enrollment status
      description: Use this endpoint to return the status of a Click to Pay request with a provided token.
      operationId: getClicktopayMastercardStatusToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the Click to Pay request.
          required: true
          style: simple
          schema:
            type: string
            x-allowableValues: Existing Click to Pay request token
        - name: req-sys-id
          in: header
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Status retrieval successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/click_to_pay_status_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwallets/wpp/applePayJWT:
    post:
      tags:
        - Digital Wallets Management
      summary: Create request for Apple Wallet web push provisioning
      description: "[NOTE]\nThis endpoint is currently in beta and subject to change.\nFor more information, contact your Marqeta representative.\n\nUse this endpoint to add a card to Apple Wallet via a web application."
      operationId: generateApplePayWPPJWT
      parameters:
        - name: req-sys-id
          in: header
          description: Random pseudo-unique value used for troubleshooting between multiple parties.
          required: true
          style: simple
          schema:
            type: string
          example: 123d837e-958a-4e9f-bc97-4843ec948123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request_for_apple_pay_wpp_JWT'
        required: true
      responses:
        '200':
          description: Ok
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between multiple parties.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web_push_provisioning_apple_pay_JWT_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwallets/wpp/googlePayPushProvisioningNotification:
    post:
      tags:
        - Digital Wallets Management
      summary: Create request for Google Wallet web push provisioning
      description: "[NOTE]\nThis endpoint is currently in beta and subject to change.\nFor more information, contact your Marqeta representative.\n\nUse this endpoint to add a card to Google Wallet via a web application.\n\nThis endpoint does not return a payload in response to a request.\nInstead, a successful call will return a response code only."
      operationId: sendOPCDataToGooglePay
      parameters:
        - name: req-sys-id
          in: header
          description: Random pseudo-unique value used for troubleshooting between multiple parties.
          required: true
          style: simple
          schema:
            type: string
          example: 123d837e-958a-4e9f-bc97-4843ec948123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sending_provisioning_data_to_google_pay_backend_request'
        required: true
      responses:
        '202':
          description: Accepted
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between multiple parties.
              style: simple
              schema:
                type: string
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwallets/wpp/parameters:
    post:
      tags:
        - web push provisioning
      summary: 'API to query for the web push provisioning related parameters, such as: google piaid/integrator_id, apple partnerId, apple Card Template Identifier'
      operationId: getWPPParameters
      parameters:
        - name: req-sys-id
          in: header
          description: Random pseudo unique value used for troubleshooting between multiple parties. 36 char max
          required: true
          style: simple
          schema:
            type: string
          example: 123d837e-958a-4e9f-bc97-4843ec948123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request_for_wpp_parameters'
        required: true
      responses:
        '200':
          description: Ok
          headers:
            req-sys-id:
              description: Random pseudo unique value used for troubleshooting between multiple parties. 36 char max
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web_push_provisioning'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwallettokens:
    get:
      tags:
        - Digital Wallets Management
      summary: List digital wallet tokens
      description: Use this endpoint to retrieve a list of digital wallet tokens.
      operationId: getDigitalwallettokens
      parameters:
        - name: count
          in: query
          description: Number of digital wallet token resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: Sort order index of the first digital wallet token resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
        - name: start_date
          in: query
          description: Date when the digital wallet token becomes active.
          style: form
          schema:
            type: string
        - name: end_date
          in: query
          description: Expiration date of the digital wallet token.
          style: form
          schema:
            type: string
        - name: pan_reference_id
          in: query
          description: "Unique identifier of the digital wallet token primary account number (PAN) within the card network.\nThis value may vary, depending on the digital wallet.\nFor example, the `pan_reference_id` may be different in Apple Wallet and Google Wallet for the same digital wallet token."
          style: form
          schema:
            type: string
        - name: token_reference_id
          in: query
          description: "Unique identifier of the digital wallet token within the card network.\nThe `token_reference_id` is unique at the card network level."
          style: form
          schema:
            type: string
        - name: correlation_id
          in: query
          description: Unique value representing a tokenization request (Mastercard only).
          style: form
          schema:
            type: string
        - name: token_type
          in: query
          description: Comma-delimited list of digital wallet token types to display.
          style: form
          schema:
            type: string
        - name: token_requestor_name
          in: query
          description: "Name of the token requestor within the card network.\n\n*NOTE:* The list of example values for this field is maintained by the card networks and is subject to change."
          style: form
          schema:
            type: string
        - name: state
          in: query
          description: Comma-delimited list of digital wallet token states to display.
          style: form
          schema:
            type: string
        - name: embed
          in: query
          description: An optional embedded user object.
          style: form
          schema:
            enum:
              - user
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalWalletTokenListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/digitalwallettokens/card/{card_token}':
    get:
      tags:
        - Digital Wallets Management
      summary: List digital wallet tokens for card
      description: "Use this endpoint to return an array of all digital wallet tokens for a particular card.\n\nThis endpoint supports <</core-api/sorting-and-pagination, pagination>>."
      operationId: getDigitalwallettokensCardCardtoken
      parameters:
        - name: card_token
          in: path
          description: "Unique identifier of the card.\nUsed to minimize the need to exchange card details during subsequent calls, and also for troubleshooting."
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of digital wallet token resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first digital wallet token resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalWalletTokenListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/digitalwallettokens/{token}':
    get:
      tags:
        - Digital Wallets Management
      summary: Retrieve digital wallet token
      description: Use this endpoint to retrieve a specific digital wallet token.
      operationId: getDigitalwallettokensToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the digital wallet token (DWT).
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_token'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/digitalwallettokens/{token}/showtokenpan':
    get:
      tags:
        - Digital Wallets Management
      summary: Retrieve digital wallet token PAN
      description: "Use this endpoint to retrieve a digital wallet token with the entire primary account number (PAN) displayed.\nThe PAN returned is of the digital wallet token and not of the card.\n(For security reasons, the PAN is not fully visible on the digital wallet token returned by `GET` `/digitalwallettokens/{token}`.)\n\n[WARNING]\nSending a request to this endpoint requires PCI DSS compliance.\nYou must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date."
      operationId: getDigitalwallettokensTokenShowtokenpan
      parameters:
        - name: token
          in: path
          description: Unique identifier of the digital wallet token (DWT).
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_token'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /digitalwallettokentransitions:
    post:
      tags:
        - Digital Wallets Management
      summary: Create digital wallet token transition
      description: Use this endpoint to transition a digital wallet token from one state to another.
      operationId: postDigitalwallettokentransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_token_transition_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_token_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/digitalwallettokentransitions/digitalwallettoken/{token}':
    get:
      tags:
        - Digital Wallets Management
      summary: List transitions for digital wallet token
      description: "Use this endpoint to return an array of all transitions for a particular digital wallet token.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, pagination>>, and <</core-api/sorting-and-pagination, sorting>>."
      operationId: getDigitalwallettokentransitionsDigitalwallettokenToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the digital wallet token (DWT).
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of digital wallet transitions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: The sort order index of the first digital wallet token in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-id'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalWalletTokenTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/digitalwallettokentransitions/{token}':
    get:
      tags:
        - Digital Wallets Management
      summary: Retrieve digital wallet token transition
      description: "Use this endpoint to retrieve a specific digital wallet token transition.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getDigitalwallettokentransitionsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the digital wallet token (DWT) transition.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_token_transition_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /directdeposits:
    get:
      tags:
        - direct deposits
      summary: Retrieves a list of all direct deposit records for your program.
      operationId: getDirectdeposits
      parameters:
        - name: count
          in: query
          description: The number of direct deposit records to retrieve.
          style: form
          schema:
            maximum: 100
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: reversed_after_grace_period
          in: query
          description: Reversed after grace period
          style: form
          schema:
            type: boolean
        - name: user_token
          in: query
          description: User token
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: Business token
          style: form
          schema:
            type: string
        - name: direct_deposit_state
          in: query
          description: 'Comma-delimited list of direct deposit states to display e.g. PENDING | REVERSED | APPLIED | REJECTED '
          style: form
          schema:
            enum:
              - PENDING
              - APPLIED
              - REVERSED
              - REJECTED
            type: string
        - name: start_settlement_date
          in: query
          description: Start Settlement Date
          style: form
          schema:
            type: string
        - name: end_settlement_date
          in: query
          description: End Settlement Date
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/directdeposits/accounts/{user_or_business_token}':
    get:
      tags:
        - direct deposits
      summary: Returns an account and routing number which can be used for direct deposit
      operationId: getDirectdepositsAccountsUserorbusinesstoken
      parameters:
        - name: user_or_business_token
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deposit_account'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: true
    put:
      tags:
        - direct deposits
      summary: Updates a specific direct deposit account
      operationId: putDirectdepositsAccountsUserorbusinesstoken
      parameters:
        - name: user_or_business_token
          in: path
          description: User or business token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Deposit account update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deposit_account_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deposit_account'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: true
  /directdeposits/transitions:
    get:
      tags:
        - direct deposits
      summary: Returns a list of direct deposit transitions
      operationId: getDirectdepositsTransitions
      parameters:
        - name: count
          in: query
          description: Number of direct deposit transitions to retrieve
          style: form
          schema:
            maximum: 100
            type: integer
            format: int32
            default: 5
        - name: user_token
          in: query
          description: User token
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: Business token
          style: form
          schema:
            type: string
        - name: direct_deposit_token
          in: query
          description: Direct deposit token
          style: form
          schema:
            type: string
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
        - name: states
          in: query
          description: 'Comma-delimited list of direct deposit states to display e.g. PENDING | REVERSED | APPLIED | REJECTED '
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - direct deposits
      summary: Creates a direct deposit transition
      operationId: postDirectdepositsTransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectDepositTransitionRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/directdeposits/transitions/{token}':
    get:
      tags:
        - direct deposits
      summary: Returns a direct deposit transition
      operationId: getDirectdepositsTransitionsToken
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/directdeposits/{token}':
    get:
      tags:
        - direct deposits
      summary: Returns a direct deposit entry
      operationId: getDirectdepositsToken
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /feecharges:
    post:
      tags:
        - Fee Charges
      summary: Create fee charge
      description: "Use this endpoint to create a fee charge.\nYou must pass in either `user_token` or `business_token` to associate a user or business with the fee charge.\n\nThis is an all-or-nothing operation.\nWhen more than one fee is present, you must assess either all fees, or no fees."
      operationId: postFeeCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fee_transfer_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /feecharges/realtime:
    post:
      tags:
        - fee charges
      summary: Creates a realTime fee charge
      operationId: postRealTimeFeeCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/realtime_fee_transfer_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/feecharges/{token}':
    get:
      tags:
        - Fee Charges
      summary: Retrieve fee charge
      description: "Use this endpoint to retrieve a specific fee charge.\nInclude the fee transfer `token` path parameter to specify the fee charge to return."
      operationId: getFeeChargeToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the fee charge to retrieve.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /feedback/fraud:
    post:
      summary: Creates a fraud feedback
      description: This endpoint is to get a fraud feedback from the customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudFeedbackRequest'
        required: true
      responses:
        '201':
          description: Fraud feedback is created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudFeedbackResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - zionToken: [ ]
  /feerefunds:
    post:
      tags:
        - Fee Refunds
      summary: Create fee refund
      description: "Use this endpoint to create a fee refund.\nInclude the fee charge `token` path parameter to specify the fee to return.\n\nIf there are insufficient funds in your fee account to refund the fee, funds are drawn from your program reserve account."
      operationId: postFeeRefunds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fee_refund_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fees:
    get:
      tags:
        - Fees
      summary: List fees
      description: "Use this endpoint to list existing fees.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getFees
      parameters:
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 100
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Fees
      summary: Create fee
      description: "Use this endpoint to create a fee.\nAdd the source details to the body of the request in link:http://www.json.org/[JSON, window=\"_blank\"] format."
      operationId: postFees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fee_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fees/{token}':
    get:
      tags:
        - Fees
      summary: Retrieve fee
      description: "Use this endpoint to retrieve a fee.\nInclude the `token` path parameter to specify the fee to return."
      operationId: getFeesToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the fee resource.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Fees
      summary: Update fee
      description: "Use this endpoint to update a fee.\nInclude the `token` as a path parameter to indicate the fee to update."
      operationId: putFeesToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the fee resource.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fee_update_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fee_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/ach:
    post:
      tags:
        - Account Holder Funding Sources
      summary: Create ACH source
      description: "Create an ACH funding source for an existing account holder.\nSpecify the account holder of the funding source by passing a user or business token.\n\nThe response body returns details about the account, including the verification status.\nPossible ACH verification status values include `ACH_VERIFIED`, `ACH_FAILED`, and `VERIFICATION_PENDING`."
      operationId: postFundingsourcesAch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ach_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ach_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/ach/partner:
    post:
      tags:
        - Account Holder Funding Sources
      summary: Create ACH source via a partner integration
      description: "Create an ACH funding source for an existing account holder by using a third-party partner to handle account validation and provide PII account data.\nBecause you don't handle any personally identifiable information (PII) yourself, using a third party when creating the funding source enables you to bypass the regulatory and compliance measures related to capturing, storing, and transmitting PII.\n\nWith this endpoint, you can create a US-based funding source—either a checking account or a savings account—for a program or user without passing bank account details such as the account number or routing number to Marqeta.\nInstead, validating account data and account verification is handled by the third-party partner you specify, and a secure token (i.e., a Plaid `processor_token`) is shared across partners.\nBy using a secure account verification platform to provide immediate verification, you shorten the wait time until the ACH funding source is ready and avoid managing the microdeposit-based account verification process.\n\nTo create an ACH funding source for an existing account holder without validating through a third party, see <</core-api/account-holder-funding-sources#postFundingsourcesAch, Create ACH source>>.\n\n[NOTE]\nThis endpoint assumes that you already have established a relationship with both Marqeta and the third-party account validation partner you want to use.\nIn addition, you must explicitly authorize the sharing of information with the third-party partner, and enable Marqeta as a processor for your integration.\nFor more information, contact your Marqeta representative."
      operationId: postFundingsourcesAchPartner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ach_partner_request_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ach_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/ach/partner/{funding_source_token}/balance':
    get:
      tags:
        - funding sources
      summary: Retrieves a linked funding source balance from a partner
      operationId: getAchPartnerLinkedFundingSourceBalance
      parameters:
        - name: funding_source_token
          in: path
          description: Funding source token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedAccountBalanceResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/ach/{funding_source_token}':
    get:
      tags:
        - Account Holder Funding Sources
      summary: Retrieve ACH source
      description: "Retrieve a specific ACH funding source.\n\nThe response body returns details about the account, including the verification status.\nPossible ACH verification status values are: `ACH_FAILED`, `ACH_VERIFIED`, and `VERIFICATION_PENDING`."
      operationId: getFundingsourcesAchFundingsourcetoken
      parameters:
        - name: funding_source_token
          in: path
          description: "Unique identifier of the funding source.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve existing funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve existing funding source tokens for a business."
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ach_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/ach/{funding_source_token}/verificationamounts':
    get:
      tags:
        - funding sources
      summary: Returns the dollar amounts used to verify the ACH account
      operationId: getFundingsourcesAchFundingsourcetokenVerificationamounts
      parameters:
        - name: funding_source_token
          in: path
          description: Funding account token
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ach_verification_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/addresses:
    post:
      tags:
        - Addresses
      summary: Create address
      description: "Use this endpoint to create an address resource.\n\nWhen creating the address, you must pass the token of either an existing user in the `user_token` field or an existing business in the `business_token` field.\nDo not pass both."
      operationId: postFundingsourcesAddresses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_holder_address_model'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderAddressResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/addresses/business/{business_token}':
    get:
      tags:
        - Addresses
      summary: List business addresses
      description: "Use this endpoint to list existing addresses for a business.\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getFundingsourcesAddressesBusinessBusinesstoken
      parameters:
        - name: business_token
          in: path
          description: "Unique identifier of the business account holder.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderAddressListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/addresses/user/{user_token}':
    get:
      tags:
        - Addresses
      summary: Lists all addresses for a user
      description: "Use this endpoint to list existing addresses for a user.\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getFundingsourcesAddressesUserUsertoken
      parameters:
        - name: user_token
          in: path
          description: Unique identifier of the user account holder.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderAddressListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/addresses/{funding_source_address_token}':
    get:
      tags:
        - Addresses
      summary: Retrieve address
      description: Use this endpoint to retrieve a funding source address.
      operationId: getFundingsourcesAddressesFundingsourceaddresstoken
      parameters:
        - name: funding_source_address_token
          in: path
          description: Unique identifier of the funding source address.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderAddressResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Addresses
      summary: Update address
      description: Use this endpoint to update an address.
      operationId: putFundingsourcesAddressesFundingsourceaddresstoken
      parameters:
        - name: funding_source_address_token
          in: path
          description: Unique identifier of the funding source address.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_holder_address_update_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderAddressResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/business/{business_token}':
    get:
      tags:
        - Account Holder Funding Sources
      summary: List sources for business
      description: "List funding sources associated with a specific business.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getFundingsourcesBusinessBusinesstoken
      parameters:
        - name: business_token
          in: path
          description: "Unique identifier of the business account holder.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: type
          in: query
          description: "Type of funding source to return: ACH or payment card.\nLeave unspecified to return both types."
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingAccountListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/paymentcard:
    post:
      tags:
        - Account Holder Funding Sources
      summary: Create payment card source
      description: "Create a payment card funding source for an existing account holder.\nThis endpoint returns the card type and the last four digits of the card, and then sets the `active_ field` to `true`.\n\nMarqeta retains only a tokenized representation of the card number."
      operationId: postFundingsourcesPaymentcard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/paymentcard/{funding_source_token}':
    get:
      tags:
        - Account Holder Funding Sources
      summary: Retrieve payment card source
      description: Retrieve a specific payment card funding source.
      operationId: getFundingsourcesPaymentcardFundingsourcetoken
      parameters:
        - name: funding_source_token
          in: path
          description: "Unique identifier of the funding source.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve existing funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve existing funding source tokens for a business."
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Account Holder Funding Sources
      summary: Update payment card source
      description: Update a payment card funding source.
      operationId: putFundingsourcesFundingsourcetoken
      parameters:
        - name: funding_source_token
          in: path
          description: "Unique identifier of the funding source.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve existing funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve existing funding source tokens for a business."
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Payment card
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/program:
    post:
      tags:
        - Program Funding Sources
      summary: Create program source
      description: Create a program funding source.
      operationId: postFundingsourcesProgram
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/program_funding_source_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/program/ach:
    get:
      tags:
        - Program Funding Sources
      summary: List ACH program sources
      description: List ACH program funding sources.
      operationId: getAllACHFundingSources
      parameters:
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: active
          in: query
          description: "If `true`, returns ACH funding sources from active programs only.\nIf `false`, returns all ACH funding sources."
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACHListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Program Funding Sources
      summary: Create ACH program source
      description: Create an ACH program funding source.
      operationId: postFundingsourcesProgramAch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/base_ach_request_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_ach_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/program/{token}':
    get:
      tags:
        - Program Funding Sources
      summary: Retrieve program source
      description: 'Retrieve a specific program funding source, whether active or inactive.'
      operationId: getFundingsourcesProgramToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program funding source.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Program Funding Sources
      summary: Update program source
      description: Update a program funding source.
      operationId: putFundingsourcesProgramToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program funding source.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/program_funding_source_update_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /fundingsources/programgateway:
    post:
      tags:
        - Program Gateway Funding Sources
      summary: Create program gateway source
      description: "Creates a program gateway funding source.\nA program gateway funding source is a transaction relay that allows you to approve or decline transactions in real time."
      operationId: postFundingsourcesProgramgateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway_program_funding_source_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/programgateway/customheaders/{token}':
    put:
      tags:
        - Program Gateway Funding Sources
      summary: Update program gateway source custom headers
      description: Adds or updates custom HTTP headers for a specific program gateway funding source.
      operationId: putFundingsourcesProgramgatewayCustomHeaderToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program gateway funding source.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway_program_custom_header_update_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/programgateway/{token}':
    get:
      tags:
        - Program Gateway Funding Sources
      summary: Retrieve program gateway source
      description: Retrieves a specific program gateway funding source.
      operationId: getFundingsourcesProgramgatewayToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program gateway funding source.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Program Gateway Funding Sources
      summary: Update program gateway source
      description: Update a program gateway funding source.
      operationId: putFundingsourcesProgramgatewayToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program gateway funding source.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway_program_funding_source_update_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/user/{user_token}':
    get:
      tags:
        - Account Holder Funding Sources
      summary: List sources for user
      description: "List funding sources associated with a specific user.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getFundingsourcesUserUsertoken
      parameters:
        - name: user_token
          in: path
          description: Unique identifier of the user account holder.
          required: true
          style: simple
          schema:
            type: string
        - name: type
          in: query
          description: "Type of funding source to retrieve: ACH or payment card.\nLeave unspecified to return both types."
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingAccountListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/fundingsources/{funding_source_token}/default':
    put:
      tags:
        - Account Holder Funding Sources
      summary: Set default source
      description: "Configure either an ACH funding source or a payment card funding source as the default funding source.\n\nA default funding source is used when you omit the `funding_source_token` field from funding requests, such as a `POST` request to `/gpaorders`.\nNote that the first funding source you create is automatically set as the default (`is_default_source=true`)."
      operationId: putFundingsourcesFundingsourcetokenDefault
      parameters:
        - name: funding_source_token
          in: path
          description: "Unique identifier of the funding source.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve existing funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve existing funding source tokens for a business."
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /gpaorders:
    post:
      tags:
        - GPA Orders
      summary: Create GPA order
      description: "Use this endpoint to create an order to fund an account holder's GPA.\n\nYou can assess a <</core-api/fees, fee>> while funding a GPA by using the optional `fees` array to attach one or more fee resources to the GPA order.\nWhen you create a GPA order, the GPA is first credited for the fees, then debited at funding time."
      operationId: postGpaorders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gpa_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpa_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /gpaorders/unloads:
    get:
      tags:
        - GPA Orders
      summary: List GPA unloads
      description: "Use this endpoint to list all GPA unloads or GPA unloads associated with a specific user or business.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getGpaordersUnloads
      parameters:
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: user_token
          in: query
          description: "Unique identifier of the user resource.\n\nSend a `GET` request to `/users` to retrieve user tokens."
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: "Unique identifier of the business resource.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
          style: form
          schema:
            type: string
        - name: original_order_token
          in: query
          description: "Unique identifier of the original GPA order.\n\nSend a `GET` request to `/transactions?type=gpa.credit` to retrieve GPA order tokens."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GPAUnloadListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - GPA Orders
      summary: Create GPA unload
      description: "Use this endpoint to unload a GPA order.\n\nUnloading a GPA order returns funds to the funding source.\nA GPA unload must be tied to an original GPA order and can be used to return the amount of the original order or a lesser amount."
      operationId: postGpaordersUnloads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/unload_request_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpa_returns'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/gpaorders/unloads/{unload_token}':
    get:
      tags:
        - GPA Orders
      summary: Retrieve GPA unload
      description: Use this endpoint to retrieve a specific GPA unload.
      operationId: getGpaordersUnloadsUnloadtoken
      parameters:
        - name: unload_token
          in: path
          description: Unique identifier of the GPA unload.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpa_returns'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/gpaorders/{token}':
    get:
      tags:
        - GPA Orders
      summary: Retrieve GPA order
      description: Use this endpoint to retrieve a GPA order.
      operationId: getGpaordersToken
      parameters:
        - name: token
          in: path
          description: "Unique identifier of the GPA order.\n\nSend a `GET` request to `/transactions?type=gpa.credit` to retrieve GPA order tokens."
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpa_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /kyc:
    post:
      tags:
        - KYC Verification
      summary: Perform KYC verification
      description: "Use this endpoint to verify the identity of an account holder in the United States, either a user or a business.\nYou can perform KYC verification on an account holder, provided the following are true:\n\n* The KYC status of the account holder is `UNVERIFIED` or `LIMITED`\n* The account holder has not been submitted for KYC verification twice\n\n=== Required fields\n\nIn order to perform KYC verification, the user or business resource on which you perform the check must have the following fields configured with valid values:\n\n[cols=\"1a,1a\"]\n|===\n| User Fields Required for KYC | Business Fields Required for KYC\n\n|\n* `first_name` (legal first name only, no prefixes)\n* `last_name` (legal last name only, no suffixes)\n* `address1` (cannot be a PO Box)\n* `city`\n* `state`\n* `postal_code`\n* `country`\n* `birth_date`\n* `ssn` (nine digits, no delimiters)\n* `email` (required in some cases)\n* `phone` (required in some cases)\n\n|\n* `business_name_legal` (128 char max)\n* `business_name_dba` (\"Doing Business As\" or fictitious business name; enter the legal business name in this field if your business does not use a fictitious business name)\n* `office_location` (cannot be a PO Box; `state` field must use a <<valid_state_provincial_and_territorial_abbreviations, valid two-letter state, provincial, or territorial abbreviation>>)\n* `identifications` (nine digits, no delimiters)\n* `incorporation.incorporation_type`\n* `incorporation.state_of_incorporation`\n* `date_established`\n* `proprietor_or_officer`\n* `beneficial_owner` (maximum of four beneficial owners)\n* `proprietor_is_beneficial_owner` (required if the business proprietor or officer is also a beneficial owner)\n* `attestation_consent`\n* `attester_name`\n* `attestation_date`\n|===\n\n==== Valid state, provincial, and territorial abbreviations\nThe following list includes all valid two-letter abbreviations for US states, territories, and military (APO/FPO/DPO) addresses.\nIt also includes abbreviations for Canadian provinces and territories.\nState, provincial, and territorial abbreviations are case sensitive, and must be in uppercase as they appear in this list:\n\n* `AL`: Alabama\n* `AK`: Alaska\n* `AB`: Alberta\n* `AS`: American Samoa\n* `AZ`: Arizona\n* `AR`: Arkansas\n* `AE`: Armed Forces\n* `AA`: Armed Forces Americas\n* `AP`: Armed Forces Pacific\n* `BC`: British Columbia\n* `CA`: California\n* `CO`: Colorado\n* `CT`: Connecticut\n* `DE`: Delaware\n* `DC`: District of Columbia\n* `FL`: Florida\n* `GA`: Georgia\n* `GU`: Guam\n* `HI`: Hawaii\n* `ID`: Idaho\n* `IL`: Illinois\n* `IN`: Indiana\n* `IA`: Iowa\n* `KS`: Kansas\n* `KY`: Kentucky\n* `LA`: Louisiana\n* `ME`: Maine\n* `MB`: Manitoba\n* `MD`: Maryland\n* `MA`: Massachusetts\n* `MI`: Michigan\n* `MN`: Minnesota\n* `MS`: Mississippi\n* `MO`: Missouri\n* `MT`: Montana\n* `NE`: Nebraska\n* `NV`: Nevada\n* `NB`: New Brunswick\n* `NH`: New Hampshire\n* `NJ`: New Jersey\n* `NM`: New Mexico\n* `NY`: New York\n* `NF`: Newfoundland\n* `NC`: North Carolina\n* `ND`: North Dakota\n* `NT`: Northwest Territories\n* `NS`: Nova Scotia\n* `NU`: Nunavut\n* `OH`: Ohio\n* `OK`: Oklahoma\n* `ON`: Ontario\n* `OR`: Oregon\n* `PA`: Pennsylvania\n* `PE`: Prince Edward Island\n* `PR`: Puerto Rico\n* `QC`: Quebec\n* `RI`: Rhode Island\n* `SK`: Saskatchewan\n* `SC`: South Carolina\n* `SD`: South Dakota\n* `TN`: Tennessee\n* `TX`: Texas\n* `UT`: Utah\n* `VT`: Vermont\n* `VI`: Virgin Islands\n* `VA`: Virginia\n* `WA`: Washington\n* `WV`: West Virginia\n* `WI`: Wisconsin\n* `WY`: Wyoming\n* `YT`: Yukon Territory"
      operationId: postKyc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kyc_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kyc_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/kyc/business/{business_token}':
    get:
      tags:
        - KYC Verification
      summary: List KYC results for a business
      description: "Use this endpoint to retrieve all KYC verification results for a business.\n\nThis endpoint supports <</core-api/sorting-and-pagination, pagination>>.\n\n=== Business KYC outcome reasons (business response)\n\nThe following tables describe KYC outcome reasons potentially returned in the `outcome_reasons` field of the business `result` response object when a business is in a `pending` or `failure` state.\nWhere possible, they also describe acceptable documents that your customers can submit to resolve `pending` outcomes.\n\n==== Outcome reasons for the business\n\nThese outcome reasons pertain to the business organization itself.\n\n[cols=\",,2a\"]\n|===\n| Outcome Reason and State | Description | Accepted Documents\n\n| AddressIssue   +\n`pending`\n| Missing, invalid, mismatched, or PO Box address.\n| One of the following documents.\nDocument must show the full business name and address:\n\n* Bank statement\n* Utility bill\n* Current lease or rental agreement\n* Insurance policy\n\n| BusinessNameIssue   +\n`pending`\n| Invalid or mismatched name.\n| Articles or certificate of incorporation.\n\n| OFACFailure   +\n`failure`\n| Business appears on an OFAC list.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n| RegistrationIssue   +\n`pending`\n| Business is inactive, not registered, or not in good standing with the Secretary of State; recently reported or not recently updated.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n| Sanctions List Non-OFAC   +\n`pending`\n| Business appears on a non-OFAC screening list, bankruptcy, or alert list.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n| TINIssue   +\n`pending`\n| Missing, invalid, or mismatched Tax Identification Number (TIN).\n| IRS Notice Letter 147C or CP575, or most recent tax return.\n\n|===\n\n===== Outcome reasons for individuals associated with a business\n\nThese outcome reasons pertain to individuals associated with a business: proprietors, business officers, and beneficial owners.\n\n[cols=\",,2a\"]\n|===\n| Outcome Reason and State | Description | Accepted Documents\n\n| AddressIssue   +\n`pending`\n| Missing, invalid, mismatched, or PO Box address.\n| One of the following documents.\nDocument must show the full name and address:\n\n* Unexpired state-issued driver's license or identification card\n* US Military Identification Card\n* Utility bill\n* Bank statement\n* Current rental or lease agreement\n* Mortgage statement\n\n| DateOfBirthIssue   +\n`pending`\n| Invalid or mismatched date of birth.\n| Unexpired government-issued photo identification that shows name and date of birth:\n\n* Driver's license or state-issued identification card\n* Passport\n\n| NameIssue   +\n`pending`\n| Invalid or mismatched name.\n| Unexpired government-issued photo identification that has name and date of birth:\n\n* Driver's license or state-issued identification card\n* Passport or US passport card\n\n| NoRecordFound   +\n`failure`\n| No records were found for this individual.\n| As no record was found for this individual, supporting documentation must be provided for each attribute (name, date of birth, address, and SSN):\n\n* To verify an individual's address, provide one of these documents:\n** Unexpired state-issued driver's license or identification card\n** US Military Identification Card\n** Utility bill\n** Bank statement\n** Current rental or lease agreement\n** Mortgage statement\n* To verify an individual's name and date of birth, provide one of these documents:\n** Driver's license or state-issued identification card\n** Passport\n* To verify an individual's Social Security Number, provide one of these documents:\n** Social Security card\n** Recent W-2 or 1099 showing nine-digit SSN, full name, and address.\n** ITIN card or document showing ITIN approval\n\n| OFACFailure   +\n`failure`\n| Appears on an Office of Foreign Assets Control (OFAC) list.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n| RiskIssue   +\n`failure`\n| Appears on a non-OFAC screening list, bankruptcy, or alert list, or has an insufficient record.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n//| SSNFail   +\n`failure`\n//| Social Security Number (SSN) appears on Network Alert List, is of a deceased person, or was issued before the individual's date of birth.\n//| This outcome requires a manual review by Marqeta to determine the next appropriate step.\n//Contact your Marqeta representative.\n//Code removed per https://marqeta.atlassian.net/browse/ID-3574, commenting out in case we ever add it back.\n\n| SSNIssue   +\n`pending`\n| Missing, invalid, or mismatched SSN.\n| * Social Security card\n* Recent W-2 or 1099 showing nine-digit SSN, full name, and address.\n* ITIN card or document showing ITIN approval\n\n| warmaddressalert   +\n`failure`\n| Address is a PO box or other post office address, virtual address, UPS store, mail forward, or mail drop.\nSuch addresses are not valid for KYC verification.\n| One of the following documents.\nDocument must show the full name and valid street address:\n\n* Unexpired state-issued driver's license or identification card\n* US Military Identification Card\n* Utility bill\n* Bank statement\n* Current rental or lease agreement\n* Mortgage statement\n|==="
      operationId: getKycBusinessBusinesstoken
      parameters:
        - name: business_token
          in: path
          description: The unique identifier of the business resource for which you want to retrieve KYC verification results.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: The number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KYCListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/kyc/user/{user_token}':
    get:
      tags:
        - KYC Verification
      summary: List KYC results for a user
      description: "Use this endpoint to retrieve all KYC results for a user.\n\nThis endpoint supports <</core-api/sorting-and-pagination, pagination>>.\n\n=== User KYC failure codes\n\nThe following table lists KYC failure codes potentially returned in the response when a user does not pass verification.\nIt also includes a list of acceptable documents that your customers can submit to resolve failures.\n\n[cols=\",,2a\"]\n|===\n| Failure Code and State | Description | Accepted Documents\n\n| AddressIssue   +\n`failure`\n| Missing, invalid, mismatched, or PO Box address.\n| One of the following documents.\nDocument must show the full name and address:\n\n* Unexpired state-issued driver's license or identification card\n* US Military Identification Card\n* Utility bill\n* Bank statement\n* Current rental or lease agreement\n* Mortgage statement\n\n| DateOfBirthIssue   +\n`failure`\n| Invalid or mismatched date of birth.\n| Unexpired government-issued photo identification that shows name and date of birth:\n\n* Driver's license or state-issued identification card\n* Passport\n\n| EmailIssue   +\n`failure`\n| Invalid, insufficient, mismatched, or other risk signal on provided email address.\n| Unexpired government-issued photo identification that shows name and date of birth:\n\n* Driver's license or state-issued identification card\n* US Passport\n* US Military identification Card\n* Native American tribal identification card\n* Government employee identification card\n* Permanent Resident Alien Card\n\n| NameIssue   +\n`failure`\n| Invalid or mismatched name.\n| Unexpired government-issued photo identification that has name and date of birth:\n\n* Driver's license or state-issued identification card\n* Passport or US passport card\n\n| NoRecordFound   +\n`failure`\n| No records were found for this individual.\n| As no record was found for this individual, supporting documentation must be provided for each attribute (name, date of birth, address, and SSN):\n\n* To verify an individual's address, provide one of these documents:\n** Unexpired state-issued driver's license or identification card\n** US Military Identification Card\n** Utility bill\n** Bank statement\n** Current rental or lease agreement\n** Mortgage statement\n* To verify an individual's name and date of birth, provide one of these documents:\n** Driver's license or state-issued identification card\n** Passport\n* To verify an individual's Social Security Number, provide one of these documents:\n** Social Security card\n** Recent W-2 or 1099 showing nine-digit SSN, full name, and address.\n** ITIN card or document showing ITIN approval\n\n| OFACFailure   +\n`failure`\n| Appears on an Office of Foreign Assets Control (OFAC) list.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n| PhoneIssue   +\n`failure`\n| Invalid, insufficient, mismatched, or other risk signal on provided phone number.\n| Unexpired government-issued photo identification that shows name and date of birth:\n\n* Driver's license or state-issued identification card\n* US Passport\n* US Military identification Card\n* Native American tribal identification card\n* Government employee identification card\n* Permanent Resident Alien Card\n\n| RiskIssue   +\n`failure`\n| Appears on a non-OFAC screening list, bankruptcy, or alert list, or has an insufficient record.\n| This outcome requires a manual review by Marqeta to determine the next appropriate step.\nContact your Marqeta representative.\n\n//| SSNFail   +\n//`failure`\n//| Social Security Number (SSN) appears on Network Alert List, is of a deceased person, or was issued before the individual's date of birth.\n//| This outcome requires a manual review by Marqeta to determine the next appropriate step.\n//Contact your Marqeta representative.\n//Code removed per https://marqeta.atlassian.net/browse/ID-3574, commenting out in case we ever add it back.\n\n| SSNIssue   +\n`failure`\n| Missing, invalid, or mismatched SSN.\n| * Social Security card\n* Recent W-2 or 1099 showing nine-digit SSN, full name, and address.\n* ITIN card or document showing ITIN approval\n\n| warmaddressalert   +\n`failure`\n| Address is a PO box or other post office address, virtual address, UPS store, mail forward, or mail drop.\nSuch addresses are not valid for KYC verification.\n| One of the following documents.\nDocument must show the full name and valid street address:\n\n* Unexpired state-issued driver's license or identification card\n* US Military Identification Card\n* Utility bill\n* Bank statement\n* Current rental or lease agreement\n* Mortgage statement\n|==="
      operationId: getKycUserUsertoken
      parameters:
        - name: user_token
          in: path
          description: Unique identifier of the user resource for which you want to retrieve KYC verification results.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KYCListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/kyc/{token}':
    get:
      tags:
        - KYC Verification
      summary: Retrieve KYC result
      description: Use this endpoint to retrieve a specific KYC result.
      operationId: getKycToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the KYC verification for which you want to retrieve the result.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kyc_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /mccgroups:
    get:
      tags:
        - MCC Groups
      summary: List MCC groups
      description: "Use this endpoint to list all MCC groups defined in your program or list MCC groups that contain a specified code.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getMccgroups
      parameters:
        - name: mcc
          in: query
          description: Returns all MCC groups that contain the specified merchant category code.
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: The number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MCCGroupListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - MCC Groups
      summary: Create MCC group
      description: Use this endpoint to create an MCC group.
      operationId: postMccgroups
      requestBody:
        description: MCC group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mcc_group_model'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mcc_group_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/mccgroups/{token}':
    get:
      tags:
        - MCC Groups
      summary: Retrieve MCC group
      description: Use this endpoint to retrieve a specific MCC group.
      operationId: getMccgroupsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the MCC group.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mcc_group_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - MCC Groups
      summary: Update MCC group
      description: "Use this endpoint to update an MCC group.\nInclude the `token` path parameter to identify the MCC group to update.\nYou must pass all the merchant category codes you want included in the group, including existing ones you want to retain."
      operationId: putMccgroupsToken
      parameters:
        - name: token
          in: path
          description: "The unique identifier of the MCC group.\nSend a `GET` request to `/mccgroups` to retrieve MCC group tokens."
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: MCC group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mcc_group_update_model'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mcc_group_update_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /merchantgroups:
    get:
      tags:
        - Merchant Groups
      summary: List merchant groups
      description: "To return an array of all merchant groups, send a `GET` request to the `/merchantgroups` endpoint.\n\nTo return an array of all merchant groups that include a specific merchant identifier, send a `GET` request to the `/merchantgroups` endpoint that includes the merchant identifier in the query parameters."
      operationId: getMerchantGroups
      parameters:
        - name: mid
          in: query
          description: Returns all merchant groups that contain the specified merchant identifier.
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantGroupListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Merchant Groups
      summary: Create merchant group
      description: 'To create a merchant group, send a `POST` request to the `/merchantgroups` endpoint.'
      operationId: postMerchantGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant_group_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/merchantgroups/{token}':
    get:
      tags:
        - Merchant Groups
      summary: Retrieve merchant group
      description: "To retrieve a specific merchant group, send a `GET` request to the `/merchantgroups/{token}` endpoint.\nInclude the merchant group `token` path parameter to specify the merchant group to return."
      operationId: getMerchantGroup
      parameters:
        - name: token
          in: path
          description: Unique identifier of the merchant group.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Merchant Groups
      summary: Update merchant group
      description: "To update a merchant group, send a `PUT` request to the `/merchantgroups/{token}` endpoint.\nInclude the merchant group `token` path parameter to specify the merchant group to update."
      operationId: putMerchantGroupsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the merchant group.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Merchant Group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant_group_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant_group_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /merchants:
    get:
      summary: Get merchants.
      operationId: getMerchants
      parameters:
        - name: count
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      summary: Create merchant.
      operationId: createMerchant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantModel'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/merchants/{token}':
    delete:
      summary: Delete merchant by token.
      operationId: deleteMerchantByToken
      parameters:
        - name: token
          in: path
          description: Merchant token
          required: true
          style: simple
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      summary: Get merchant by token.
      operationId: getMerchantByToken
      parameters:
        - name: token
          in: path
          description: Merchant token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          style: form
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      summary: Update merchant by token.
      operationId: updateMerchantByToken
      parameters:
        - name: token
          in: path
          description: Merchant token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantUpdateModel'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/merchants/{token}/stores':
    get:
      summary: Get merchant stores.
      operationId: getMerchantStores
      parameters:
        - name: token
          in: path
          description: Merchant token
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/merchants/{token}/transactions':
    get:
      summary: Get merchant transactions.
      operationId: getMerchantTransactions
      parameters:
        - name: token
          in: path
          description: Merchant token
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          style: form
          schema:
            type: string
            default: '-id'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: true
  /migration/transactions:
    post:
      tags:
        - post transactions
      summary: Post transaction
      operationId: migratetransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/internal_transaction_message'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalTransactionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /offers:
    get:
      summary: Get offers.
      operationId: getOffers
      parameters:
        - name: count
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      summary: Create offer.
      operationId: createOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer_model'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/offers/{token}':
    delete:
      summary: Delete offer.
      operationId: deleteOffer
      parameters:
        - name: token
          in: path
          description: Offer token
          required: true
          style: simple
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      summary: Get offer.
      operationId: getOffer
      parameters:
        - name: token
          in: path
          description: Offer token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          style: form
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      summary: Update offer.
      operationId: updateOffer
      parameters:
        - name: token
          in: path
          description: Offer token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferUpdateModel'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /peertransfers:
    post:
      tags:
        - Peer Transfers
      summary: Create peer transfer
      description: "Use this endpoint to request a peer transfer.\nAdd the source details to the body of the request in link:http://www.json.org/[JSON, window=\"_blank\"] format.\n\nWhen creating a peer transfer request, you must pass in both a token to identify the transfer sender (either `sender_user_token` or `sender_business_token`) and a token to identify the transfer recipient (either `recipient_user_token` or `recipient_business_token`).\nThe sender and recipient objects must already exist.\n\n[NOTE]\nThis feature is disabled by default and requires activation by Marqeta.   +\n  +\nThis feature enables you to transfer or reallocate funds where the `sender_*\\_token` and the `recipient_*_token` belong to the same program.\nIt does not allow you to transfer or reallocate funds between different programs.\nContact your Marqeta representative for more information."
      operationId: postPeertransfers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/peer_transfer_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/peertransfers/user/{user_or_business_token}':
    get:
      tags:
        - Peer Transfers
      summary: List peer transfers by account holder
      description: "Use this endpoint to list peer transfers sent or received by a particular account holder.\nInclude a user or business token as a path parameter to identify the account holder whose transfers you want to list.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getPeertransfersUserUserorbusinesstoken
      parameters:
        - name: user_or_business_token
          in: path
          description: "Existing user or business token.\n\nSend a `GET` request to `/users` to retrieve user tokens or to `/businesses` to retrieve business tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of peer transfer resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 25
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/peertransfers/user/{user_or_business_token}/recipient':
    get:
      tags:
        - Peer Transfers
      summary: List received peer transfers
      description: "Use this endpoint to list peer transfers sent by an account holder.\nInclude a user or business token as a path parameter to identify the recipient.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getPeertransfersUserUserorbusinesstokenRecipient
      parameters:
        - name: user_or_business_token
          in: path
          description: "Existing user or business token.\n\nSend a `GET` request to `/users` to retrieve user tokens or to `/businesses` to retrieve business tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of peer transfer resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 25
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/peertransfers/user/{user_or_business_token}/sender':
    get:
      tags:
        - Peer Transfers
      summary: List sent peer transfers
      description: "Use this endpoint to list peer transfers sent by an account holder.\nInclude a user or business token as a path parameter to identify the sender.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getPeertransfersUserUserorbusinesstokenSender
      parameters:
        - name: user_or_business_token
          in: path
          description: "Existing user or business token.\n\nSend a `GET` request to `/users` to retrieve user tokens or to `/businesses` to retrieve business tokens."
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of peer transfer resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 25
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/peertransfers/{token}':
    get:
      tags:
        - Peer Transfers
      summary: Retrieve peer transfer
      description: "Use this endpoint to retrieve a peer transfer request.\nInclude the peer transfer `token` as a path parameter in the URL to identify the peer transfer to return."
      operationId: getPeertransfersToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the peer transfer.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /ping:
    get:
      tags:
        - ping
      summary: Returns a heartbeat to the consumer
      description: Tests if the Marqeta server is available and responsive.
      operationId: getPing
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ping_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - ping
      summary: Echo test for sending payload to server
      operationId: postPing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/echo_ping_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo_ping_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /pins:
    put:
      tags:
        - PINs
      summary: Create or update PIN
      description: "Creates or updates a personal identification number (PIN) for an existing card.\nAlthough cardholders might choose a four-, five-, or six-digit PIN if they set their PIN at an automated teller machine, they can only set a four-digit PIN using Marqeta's Set PIN widget or the create or update PIN endpoint (`PUT /pins`).\nCardholders can update their PIN through the API regardless of its length, but the new PIN value they choose must contain four digits.\n\nIf you want to manage a card's PIN, first create a new control token for the card by sending a `POST` request to `/pins/controltoken`, and then use that token to update the PIN.\nYou must create a card before you can manage a PIN.\n\nUnless PIN reveal functionality has been enabled for your program, you cannot retrieve a PIN that has previously been created.\nIf the PIN has been forgotten, you must either update the card's PIN or create a new card and PIN.\n\nIf you have enabled PIN reveal functionality for your program, you can send a `POST` request to the `/pins/reveal` endpoint to retrieve an existing PIN.\nSee <</core-api/pins#revealPins, Reveal PIN>> on this page for details.\n\n[WARNING]\nSending a request to this endpoint requires PCI DSS compliance.\nYou must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date."
      operationId: putPins
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pin_request'
      responses:
        '204':
          description: PIN was successfully set
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /pins/controltoken:
    post:
      tags:
        - PINs
      summary: Create PIN control token
      description: "Creates a control token necessary when creating or updating a card's personal identification number (PIN).\n\nCreating, updating, or revealing a card's PIN is a two-step process.\nYou must first create the control token that is required to create the PIN, and then you create, update, or reveal the PIN itself.\n\nThe lifespan of the control token in a production environment is either five minutes or one hour from creation, depending on the token type.\nIf multiple tokens are requested for a single card, only the most recent one is valid.\nOnce redeemed, a token cannot be reused."
      operationId: postPinsControltoken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/control_token_request'
      responses:
        '201':
          description: Control token created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/control_token_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /pins/reveal:
    post:
      tags:
        - PINs
      summary: Reveal PIN
      description: "Reveals the personal identification number (PIN) of an existing, active card.\nBe aware that while a cardholder can only set a four-digit PIN using the Marqeta Set PIN widget or `PUT /pins` API, you may see a four-, five-, or six-digit PIN in cases where your cardholders have set a new PIN at an automated teller machine.\n\n[WARNING]\nOnly use this endpoint to access a PIN in order to reveal it to its cardholder.\nDo not use this endpoint for the purpose of storing a PIN at any location.\n\nSending a request to this endpoint requires PCI DSS compliance.\nYou must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date.\n\nIf you want to update a card's PIN instead, send a `PUT` request to the `/pins` endpoint.\nSee <</core-api/pins#putPins, Create or Update PIN>> on this page for details.\n\nRevealing a card's PIN is a two-step process.\nYou must first create a new control token for the card by sending a `POST` request to `/pins/controltoken`, and then use that token to reveal the PIN."
      operationId: revealPins
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pin_reveal_request'
      responses:
        '204':
          description: PIN was successfully revealed
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /programreserve/balances:
    get:
      tags:
        - Program Reserve
      summary: Retrieve reserve account balances
      description: Use this endpoint to return balances for your program reserve account (sometimes referred to as a _program funding account_).
      operationId: getProgramreserveBalances
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_reserve_account_balance'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /programreserve/deposits:
    get:
      tags:
        - program reserve
      operationId: getProgramReserveDeposits
      parameters:
        - name: count
          in: query
          description: Number of items to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: true
    post:
      tags:
        - program reserve
      operationId: deposit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/program_reserve_deposit_request'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      deprecated: true
  /programreserve/transactions:
    get:
      tags:
        - Program Reserve
      summary: List program reserve transactions
      description: "Use this endpoint to return a list of credits and debits made to your program reserve account.\n\nThis endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>."
      operationId: getProgramreserveTransactions
      parameters:
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramReserveTransactionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /programtransfers:
    get:
      tags:
        - Program Transfers
      summary: List program transfers
      description: "Use this endpoint to list all program transfers.\n\nTo narrow your result set to program transfers of a particular type or that are associated with a particular account holder, include the appropriate parameters from the following URL Query Parameters table.\nThis endpoint also supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, pagination>>, and <</core-api/sorting-and-pagination, sorting>>."
      operationId: getProgramtransfers
      parameters:
        - name: count
          in: query
          description: Number of program transfers to retrieve.
          style: form
          schema:
            maximum: 100
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
        - name: user_token
          in: query
          description: "Unique identifier of the user account holder whose program transfers you want to retrieve.\n\nSend a `GET` request to `/users` to retrieve user tokens."
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: "Unique identifier of the business account holder whose program transfers you want to retrieve.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
          style: form
          schema:
            type: string
        - name: type_token
          in: query
          description: Unique identifier of the program transfer type to retrieve.
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTransferListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Program Transfers
      summary: Create program transfer
      description: "Use this endpoint to create a program transfer.\nAdd the program transfer details to the body of the request in link:http://www.json.org/[JSON, window=\"_blank\"] format.\n\nInclude either `user_token` or `business_token` in the message body to specify the account holder whose general purpose account (GPA) will be debited by the program transfer.\nThe user or business must already exist.\n\n[NOTE]\nIf the GPA has insufficient funds to cover both the amount of the program transfer and all attached fees, then no funds are transferred."
      operationId: postProgramtransfers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/program_transfer'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /programtransfers/types:
    get:
      tags:
        - Program Transfers
      summary: List program transfer types
      description: "Use this endpoint to list all program transfer types.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, pagination>>, and <</core-api/sorting-and-pagination, sorting>>."
      operationId: getProgramtransfersTypes
      parameters:
        - name: count
          in: query
          description: Number of program transfer types to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramTransferTypeListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Program Transfers
      summary: Create program transfer type
      description: "Use this endpoint to create a program transfer type.\nAdd the program transfer details to the body of the request in link:http://www.json.org/[JSON, window=\"_blank\"] format.\n\nYou are required to pass in a `program_funding_source_token` to associate a program funding source with the program transfer type.\nYou must therefore create a program funding source before creating a program transfer type."
      operationId: postProgramtransfersTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/program_transfer_type_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_transfer_type_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/programtransfers/types/{type_token}':
    get:
      tags:
        - Program Transfers
      summary: Retrieve program transfer type
      description: "Use this endpoint to retrieve a specific program transfer.\nInclude the `type_token` path parameter to indicate the program transfer type to return."
      operationId: getProgramtransfersTypesTypetoken
      parameters:
        - name: type_token
          in: path
          description: Unique identifier of the program transfer type.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_transfer_type_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Program Transfers
      summary: Update program transfer type
      description: "Use this endpoint to update a program transfer type.\nInclude the `type_token` path parameter to indicate the program transfer type to update.\nAdd the modified detail parameters to the body of the request in link:http://www.json.org/[JSON, window=\"_blank\"] format.\nOnly values of parameters in the request are modified; all others are left unchanged."
      operationId: putProgramtransfersTypesTypetoken
      parameters:
        - name: type_token
          in: path
          description: Unique identifier of the program transfer type.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/program_transfer_type_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_transfer_type_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/programtransfers/{token}':
    get:
      tags:
        - Program Transfers
      summary: Retrieve program transfer
      description: "Use this endpoint to retrieve a specific program transfer.\nInclude the program transfer `token` path parameter to specify the program transfer to retrieve."
      operationId: getProgramtransfersToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the program transfer.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/program_transfer_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /pushtocards/disburse:
    get:
      tags:
        - push to card
      summary: Lists all push-to-card disbursements
      operationId: getPushtocardsDisburse
      parameters:
        - name: count
          in: query
          description: Number of push-to-card disbursements to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushToCardDisburseListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - push to card
      summary: Initiates a push-to-card money disbursement
      operationId: postPushtocardsDisburse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/push_to_card_disburse_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_disbursement_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/pushtocards/disburse/{token}':
    get:
      tags:
        - push to card
      summary: Returns a specific push-to-card disbursement
      operationId: getPushtocardsDisburseToken
      parameters:
        - name: token
          in: path
          description: Push-to-card disbursement token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_disbursement_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /pushtocards/paymentcard:
    get:
      tags:
        - push to card
      summary: Returns all push-to-card payment card details
      operationId: getPushtocardsPaymentcard
      parameters:
        - name: count
          in: query
          description: Number of push-to-card payment cards to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: user_token
          in: query
          description: User token
          required: true
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushToCardListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - push to card
      summary: Adds an external card to which funds will be pushed
      operationId: postPushtocardsPaymentcard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/push_to_card_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/pushtocards/paymentcard/{token}':
    get:
      tags:
        - push to card
      summary: Returns a specific paymentcard object
      operationId: getPushtocardsPaymentcardToken
      parameters:
        - name: token
          in: path
          description: Push-to-card token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /realtimefeegroups:
    get:
      tags:
        - Real-Time Fee Groups
      summary: List real-time fee groups
      description: "Use this endpoint to list existing real-time fee groups.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getRealtimefeegroups
      parameters:
        - name: count
          in: query
          description: Number of real-time fee groups to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\n\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealTimeFeeGroupListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Real-Time Fee Groups
      summary: Create real-time fee group
      description: Use this endpoint to create a real-time fee group.
      operationId: postRealtimefeegroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/real_time_fee_group_create_request'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/real_time_fee_group'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/realtimefeegroups/{token}':
    get:
      tags:
        - Real-Time Fee Groups
      summary: Retrieve real-time fee group
      description: "Use this endpoint to retrieve a specific real-time fee group.\nInclude the real-time fee group `token` path parameter to specify the real-time fee group to return."
      operationId: getRealtimefeegroupsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the real-time fee group.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/real_time_fee_group'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Real-Time Fee Groups
      summary: Update real-time fee group
      description: "Use this endpoint to update a real-time fee group.\nInclude the real-time fee group `token` path parameter to specify the real-time fee group to update."
      operationId: putRealtimefeegroupsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the real-time fee group.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/real_time_fee_group_request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/real_time_fee_group'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/authorization:
    post:
      tags:
        - simulate
      summary: Simulates an authorization
      operationId: postSimulateAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_request_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/authorization/advice:
    post:
      tags:
        - simulate
      summary: Simulates an authorization advice transaction
      operationId: postSimulateAuthorizationAdvice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorization_advice_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/clearing:
    post:
      tags:
        - simulate
      summary: Simulates a clearing/settlement transaction
      operationId: postSimulateClearing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearingModel'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/directdeposits:
    post:
      tags:
        - simulate
      summary: Simulates the creation of direct deposit
      operationId: postSimulateDirectdeposits
      requestBody:
        description: Direct deposit simulate request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectDepositRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDepositResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/financial:
    post:
      tags:
        - simulate
      summary: Simulates a financial request (PIN debit) transaction with optional cash back
      operationId: postSimulateFinancial
      requestBody:
        description: Financial request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/financial_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/financial/advice:
    post:
      tags:
        - simulate
      summary: Simulates a financial advice transaction
      operationId: postSimulateFinancialAdvice
      requestBody:
        description: Financial advice request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorization_advice_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/financial/balanceinquiry:
    post:
      tags:
        - simulate
      summary: Simulates a balance inquiry
      operationId: postSimulateFinancialBalanceinquiry
      requestBody:
        description: Balance inquiry request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/balance_inquiry_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/financial/originalcredit:
    post:
      tags:
        - simulate
      summary: Simulates an orignal credit transaction
      operationId: postSimulateFinancialOriginalcredit
      requestBody:
        description: Orignal Credit request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orignalcredit_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/financial/withdrawal:
    post:
      tags:
        - simulate
      summary: Simulates an ATM withdrawal transaction
      operationId: postSimulateFinancialWithdrawal
      requestBody:
        description: ATM withdrawal request model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/withdrawal_request_model'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /simulate/reversal:
    post:
      tags:
        - simulate
      summary: Simulates a reversal transaction
      operationId: postSimulateReversal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReversalModel'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /spaces:
    get:
      summary: Get spaces.
      operationId: getSpaces
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      summary: Create space.
      operationId: createSpace
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/spaces/redis-queue/{queueName}':
    delete:
      operationId: deleteQueue
      parameters:
        - name: queueName
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/spaces/{space}/{key}':
    delete:
      summary: Delete space.
      operationId: deleteSpace
      parameters:
        - name: space
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: key
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      summary: Get space.
      operationId: getSpace
      parameters:
        - name: space
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: key
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: timeout
          in: query
          style: form
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      summary: Create space for key.
      operationId: createSpaceForKey
      parameters:
        - name: space
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: key
          in: path
          required: true
          style: simple
          schema:
            type: string
        - name: timeout
          in: query
          style: form
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /stores:
    get:
      summary: Get stores.
      operationId: getStores
      parameters:
        - name: count
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      summary: Create store.
      operationId: createStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store_model'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/stores/mid/{mid}':
    get:
      summary: Get store by mid.
      operationId: getStoreByMid
      parameters:
        - name: mid
          in: path
          description: Mid
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          style: form
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/stores/{token}':
    delete:
      summary: Delete store.
      operationId: deleteStore
      parameters:
        - name: token
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      summary: Get store.
      operationId: getStore
      parameters:
        - name: token
          in: path
          description: Store token
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          style: form
          schema:
            type: string
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      summary: Update store.
      operationId: updateStore
      parameters:
        - name: token
          in: path
          description: Store token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store_update_model'
      responses:
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /transactions:
    get:
      tags:
        - Transactions
      summary: List transactions
      description: "List all transactions.\n\nBy default, this endpoint returns transactions conducted within the last 30 days.\nTo return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.\n\nBy default, `GET /transactions` returns transactions having either `PENDING` or `COMPLETION` states.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getTransactions
      parameters:
        - name: count
          in: query
          description: The number of transactions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            enum:
              - '-created_time'
              - created_time
              - '-user_transaction_time'
              - user_transaction_time
            type: string
            default: '-user_transaction_time'
        - name: start_date
          in: query
          description: "The starting date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields."
          style: form
          schema:
            type: string
        - name: end_date
          in: query
          description: "The ending date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields."
          style: form
          schema:
            type: string
        - name: type
          in: query
          description: Comma-delimited list of transaction types to include.
          style: form
          schema:
            type: string
        - name: user_token
          in: query
          description: The unique identifier of the user account holder.
          style: form
          schema:
            type: string
        - name: business_token
          in: query
          description: The unique identifier of the business account holder.
          style: form
          schema:
            type: string
        - name: acting_user_token
          in: query
          description: The unique identifier of the acting user.
          style: form
          schema:
            type: string
        - name: card_token
          in: query
          description: The unique identifier of the card.
          style: form
          schema:
            type: string
        - name: state
          in: query
          description: Comma-delimited list of transaction states to display.
          style: form
          schema:
            type: string
            default: 'PENDING,COMPLETION'
        - name: version
          in: query
          description: Specifies the API version for the request.
          style: form
          schema:
            type: string
        - name: verbose
          in: query
          description: 'If `true`, the query returns additional information for diagnostic purposes.'
          style: form
          schema:
            type: boolean
        - name: start_identifier
          in: query
          description: Start identifier
          style: form
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModelListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/transactions/fundingsource/{funding_source_token}':
    get:
      tags:
        - Transactions
      summary: List transactions for a funding account
      description: "List transactions for a specific funding source.\n\nBy default, this endpoint returns transactions conducted within the last 30 days.\nTo return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.\n\nBy default, `GET /transactions/fundingsource/{funding_source_token}` returns transactions having either `PENDING` or `COMPLETION` states.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getTransactionsFundingsourceFundingsourcetoken
      parameters:
        - name: funding_source_token
          in: path
          description: The unique identifier of the funding account.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: The number of transactions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            enum:
              - '-created_time'
              - created_time
              - '-user_transaction_time'
              - user_transaction_time
            type: string
            default: '-user_transaction_time'
        - name: start_date
          in: query
          description: "The starting date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields."
          style: form
          schema:
            type: string
        - name: end_date
          in: query
          description: "The ending date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields."
          style: form
          schema:
            type: string
        - name: type
          in: query
          description: Comma-delimited list of transaction types to include.
          style: form
          schema:
            type: string
        - name: polarity
          in: query
          description: Specifies whether to return credit or debit transactions.
          style: form
          schema:
            enum:
              - CREDIT
              - DEBIT
              - PENDING_CREDIT
              - PENDING_DEBIT
            type: string
        - name: version
          in: query
          description: Specifies the API version for the request.
          style: form
          schema:
            type: string
        - name: verbose
          in: query
          description: 'If `true`, the query returns additional information for diagnostic purposes.'
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModelListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/transactions/{token}':
    get:
      tags:
        - Transactions
      summary: Retrieve transaction
      description: "Retrieve a specific transaction.\nInclude the `token` path parameter to identify the transaction.\n\n[NOTE]\nTransactions are not available in real time via this endpoint, and typically appear after 30 seconds.\nOn occasion, a transaction may require up to four hours to appear."
      operationId: getTransactionsToken
      parameters:
        - name: token
          in: path
          description: The unique identifier of the transaction.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: version
          in: query
          description: Specifies the API version for the request.
          style: form
          schema:
            type: string
        - name: verbose
          in: query
          description: 'If `true`, the query returns additional information for diagnostic purposes.'
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/transactions/{token}/related':
    get:
      tags:
        - Transactions
      summary: List related transactions
      description: "List all transactions related to the specified transaction.\n\nBy default, this endpoint returns transactions conducted within the last 30 days.\nTo return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.\n\nBy default, this endpoint returns transactions of any state.\nTo return transactions in specific states, you must include the `state` query parameter in your request.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getTransactionsTokenRelated
      parameters:
        - name: token
          in: path
          description: The unique identifier of the transaction.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: The number of transactions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            enum:
              - '-created_time'
              - created_time
              - '-user_transaction_time'
              - user_transaction_time
            type: string
            default: '-user_transaction_time'
        - name: start_date
          in: query
          description: "The starting date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields."
          style: form
          schema:
            type: string
        - name: end_date
          in: query
          description: "The ending date (or date-time) of a date range from which to return transactions.\nTo return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields."
          style: form
          schema:
            type: string
        - name: type
          in: query
          description: Comma-delimited list of transaction types to include.
          style: form
          schema:
            type: string
        - name: state
          in: query
          description: Comma-delimited list of transaction states to display.
          style: form
          schema:
            type: string
            default: ALL
        - name: version
          in: query
          description: Specifies the API version for the request.
          style: form
          schema:
            type: string
        - name: verbose
          in: query
          description: 'If `true`, the query returns additional information for diagnostic purposes.'
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModelListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users:
    get:
      tags:
        - Users
      summary: List users
      description: "To return an array of all of a program's users, send a `GET` request to the `/users` endpoint.\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.\nTo narrow your result set to users that match certain criteria, see the <<search_users,Search users>> endpoint.\n\nThe `business_token` field is conditionally returned in the response (it cannot be set through the API).\nYou can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:\n\n[cols=\"1,1,1\"]\n|===\n| parent_token | business_token | Description\n\n| Not populated\n| Not populated\n| User does not have a parent.\n\n| Populated\n| Not populated\n| User's parent is a user.\n\n| Populated; matches `business_token`\n| Populated; matches `parent_token`\n| User's parent is a business.\n\n| Populated; does not match `business_token`\n| Populated; does not match `parent_token`\n| User's parent is a user and their grandparent is a business.\n|==="
      operationId: getUsers
      parameters:
        - name: count
          in: query
          description: Number of user resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: search_type
          in: query
          description: Search type.
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCardHolderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Users
      summary: Create user
      description: "This endpoint enables you to create a user.\nA new user's initial status depends on the <</core-api/kyc-verification, Know Your Customer (KYC) requirements>> of the program or associated <</core-api/account-holder-groups, account holder group>>.\n\n[cols=\"1,1,1,1\"]\n|===\n| KYC Required | Initial User Status | User Active on Creation | User Limitations\n\n| Always\n| `UNVERIFIED`\n| Optional\n| Cannot load funds; cannot activate cards.\n\n| Conditionally\n| `LIMITED`\n| Optional\n| Restricted by rules in `accountholdergroups.pre_kyc_controls`.\n\n| Never\n| `ACTIVE`\n| Required\n| None.\n|===\n\n[NOTE]\nUse the `/usertransitions` endpoints to transition user resources between statuses and to view the history of a user's status.\nDo not set the value of the `user.active` field directly.\nFor more information on status changes, see <</core-api/user-transitions#postUsertransitions, Create User Transition>>.\n\nTo perform KYC verification on users, the user object must have the following fields configured:\n\n* `first_name` (legal first name only, no prefixes)\n* `last_name` (legal last name only, no suffixes)\n* `address1` (cannot be a PO Box)\n* `city`\n* `state`\n* `postal_code`\n* `country`\n* `birth_date`\n* `identifications`\n* `phone` (required in some cases)\n* `email` (required in some cases)\n\n[NOTE]\nThe `identifications` requirement depends on your program's configuration.\nTo determine if you should provide a full or abbreviated identification number, contact your Marqeta representative.\nKYC verification requires the full Social Security Number (SSN) of the user.\n\nTo create a child user, you must identify the parent user or business and determine whether the child user shares an account with the parent.\n\nThe parent must be an existing user or business.\nOn the child user, set the `parent_token` field to the value of the parent's `token` field.\nIf either the parent or the grandparent is a business, a `business_token` field is added to the user.\nThis field's value is set to the token of either the parent or grandparent (whichever is the business).\n\nThe `uses_parent_account` field determines whether the child shares balances with the parent (`true`) or whether the child balances are independent of the parent (`false`).\nIf you do not specify a value for `uses_parent_account`, it is set to `false` by default (the user does not share the parent's balance) and returned in the response body.\nThis field cannot be updated, so you must decide upon creation whether the child user shares the parent balance.\n\nSharing an account with a parent user affects how the child user interacts with cards as follows:\n\n* A child user cannot spend funds if its parent is not active.\n* An active child user can activate cards, whether the parent is active or not."
      operationId: postUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/card_holder_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_card_holder_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/changepassword:
    post:
      tags:
        - Users
      summary: Update user password
      description: "To change a user password, send a `POST` request to the `/users/auth/changepassword` endpoint and include the `current_password` and `new_password` in link:http://www.json.org/[JSON, window=\"_blank\"] format in the body of the request.\nThis endpoint operates in the context of a currently logged-in user.\n\nA successful password change returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthChangepassword
      requestBody:
        description: Password update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/password_update_model'
        required: true
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/clientaccesstoken:
    post:
      tags:
        - Users
      summary: Create client access token
      description: "Each time you want to display a virtual card's sensitive data (for example, when using `marqeta.js`), you must first request a new, single-use client access token from the Marqeta platform by sending a `POST` request to the `/users/auth/clientaccesstoken` endpoint.\nUnredeemed client access tokens expire after five minutes."
      operationId: postUsersAuthClientaccesstoken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client_access_token_request'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_access_token_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/auth/clientaccesstoken/{token}':
    get:
      tags:
        - Users
      summary: Retrieve client access token
      description: 'To retrieve application and card information using a client access token, send a `GET` request to the `/users/auth/clientaccesstoken/{token}` endpoint.'
      operationId: getUsersAuthClientaccesstokenToken
      parameters:
        - name: token
          in: path
          description: Client access token.
          required: true
          style: simple
          schema:
            type: string
        - name: application_token
          in: query
          description: Unique identifier of the `application` object.
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_access_token_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/login:
    post:
      tags:
        - Users
      summary: Log in user
      description: "To log in a user and return a user access token, send a `POST` request to the `/users/auth/login` endpoint and include the user details in link:http://www.json.org/[JSON, window=\"_blank\"] format in the body of the request.\n\n[TIP]\nTo check a user's credentials without logging out the user, call the `/users/auth/onetime` endpoint."
      operationId: postUsersAuthLogin
      requestBody:
        description: User login object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_request_model'
      responses:
        '204':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/logout:
    post:
      tags:
        - Users
      summary: Log out user
      description: "To log out a user, send a `POST` request to the `/users/auth/logout` endpoint.\n\nA successful logout returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthLogout
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/onetime:
    post:
      tags:
        - Users
      summary: Create single-use token
      description: "This endpoint returns a single-use access token.\nThis type of token authorizes a single request to access API endpoints and data associated with a particular user.\nA single-use access token differs from a user access token (as returned by `POST` `/users/auth/login`) only in the number of times it can be used.\n\nTo return a single-use access token, send a `POST` request to the `/users/auth/onetime` endpoint.\nProvide one of these sets of input data:\n\n* *Case #1* – Application token and user access token\n* *Case #2* – Application token, admin access token, and user token\n* *Case #3* – Application token, user's Marqeta password, and user's email address\n\nIn each case, provide the application token as the HTTP Basic Authentication username in the request header's Authorization field.\nWhen applicable, provide the user access token or admin access token as the HTTP Basic Authentication password.\nWhen applicable, provide the user token or user's Marqeta password and email address in link:http://www.json.org/[JSON, window=\"_blank\"] format in the request body.\n\nBefore instantiating an embedded Marqeta widget, call this endpoint to obtain the single-use access token required as input (cases #1 and #2).\n\nThis endpoint is also useful when you want to check a user's credentials before performing a sensitive operation without having to log out the user (case #3).\n\n[NOTE]\nCalling this endpoint and returning a single-use access token does not invalidate the user's current user access token."
      operationId: postUsersAuthOnetime
      requestBody:
        description: One-time object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/one_time_request_model'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_token_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/resetpassword:
    post:
      tags:
        - Users
      summary: Request user password reset token
      description: "Use this endpoint to generate a password reset token for a user.\nSend a `POST` request to the `/users/auth/resetpassword` endpoint and include the user's email address in link:http://www.json.org/[JSON, window=\"_blank\"] format in the body of the request.\nThis request generates and sends an email message containing the `user_token` and `password_reset_token` to the user's email address.\nYou must customize the email message with a link that passes the `user_token` and `password_reset_token` to a web page where a subsequent request updates the password.\n\nA successful request returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthResetpassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reset_user_password_email_model'
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/auth/resetpassword/{token}':
    post:
      tags:
        - Users
      summary: Reset user password
      description: "To reset the user's password, send a `POST` request to the `/users/auth/resetpassword/{token}` endpoint that includes a password reset token generated using the `POST /users/auth/resetpassword` operation.\nInclude the `user_token` and `new_password` in link:http://www.json.org/[JSON, window=\"_blank\"] format in the body of the request.\nInclude the `password_reset_token` as a path parameter.\n\nA successful password reset returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthResetpasswordToken
      parameters:
        - name: token
          in: path
          description: Password reset token generated using the `POST /users/auth/resetpassword` operation.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reset_user_password_model'
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/auth/verifyemail:
    post:
      tags:
        - Users
      summary: Request email verification token
      description: "Send a `POST` request to the `/users/auth/verifyemail` endpoint to request an email verification token.\nNo input parameters are required because this operation is performed in the context of an authenticated user.\n\nThis initial request generates and sends an email message containing the email verification token to the cardholder's email address.\nThis email message must include a link that passes the email verification token to a web page where a subsequent request verifies the email address.\n\nA successful request returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthVerifyemail
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/auth/verifyemail/{token}':
    post:
      tags:
        - Users
      summary: Verify email address
      description: "To verify a user's email address, send a `POST` request to the `/users/auth/verifyemail/{email_verification_token}` endpoint that includes an `email_verification_token` generated using the `POST /users/auth/verifyemail` operation.\nInclude the `email_verification_token` as a path parameter.\n\nA successful email verification returns an empty response body with a response code of `204 No Content`."
      operationId: postUsersAuthVerifyemailToken
      parameters:
        - name: token
          in: path
          description: Email verification token generated using the `POST /users/auth/verifyemail` operation.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /users/lookup:
    post:
      tags:
        - Users
      summary: Search users
      description: "To search for one or more users, send a `POST` request to the `/users/lookup` endpoint.\nInclude in the message body any parameters by which you want to query.\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: postUsersLookup
      parameters:
        - name: count
          in: query
          description: Number of user resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: search_type
          in: query
          description: Search type.
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_card_holder_search_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCardHolderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/phonenumber/{phone_number}':
    get:
      tags:
        - users
      summary: Lists all users who match a phone number
      operationId: getUsersPhonenumberPhonenumber
      parameters:
        - name: phone_number
          in: path
          description: Phone number
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of users to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCardHolderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/{parent_token}/children':
    get:
      tags:
        - Users
      summary: List user child accounts
      description: "To retrieve users who are children of a parent user or business, send a `GET` request to the `/users/{parent_token}/children` endpoint.\nInclude the parent's user or business token as a URL path parameter.\n\nThe `business_token` field is conditionally returned in the response (it cannot be set through the API).\nYou can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:\n\n[cols=\"1,1,1\"]\n|===\n| parent_token | business_token | Description\n\n| Not populated\n| Not populated\n| User does not have a parent.\n\n| Populated\n| Not populated\n| User's parent is a user.\n\n| Populated; matches `business_token`\n| Populated; matches `parent_token`\n| User's parent is a business.\n\n| Populated; does not match `business_token`\n| Populated; does not match `parent_token`\n| User's parent is a user and their grandparent is a business.\n|===\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getUsersParenttokenChildren
      parameters:
        - name: count
          in: query
          description: Number of user resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: parent_token
          in: path
          description: Unique identifier of the parent account holder.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCardHolderListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/{token}':
    get:
      tags:
        - Users
      summary: Retrieve user
      description: "To retrieve a specific user, send a `GET` request to the `/users/{token}` endpoint.\nInclude the user `token` path parameter to specify the user to return.\n\nThe `business_token` field is conditionally returned in the response (it cannot be set through the API).\nYou can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:\n\n[cols=\"1,1,1\"]\n|===\n| parent_token | business_token | Description\n\n| Not populated\n| Not populated\n| User does not have a parent.\n\n| Populated\n| Not populated\n| User's parent is a user.\n\n| Populated; matches `business_token`\n| Populated; matches `parent_token`\n| User's parent is a business.\n\n| Populated; does not match `business_token`\n| Populated; does not match `parent_token`\n| User's parent is a user and their grandparent is a business.\n|===\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>."
      operationId: getUsersToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the user resource.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_card_holder_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Users
      summary: Update user
      description: "To update a specific user resource, send a `PUT` request to the `/users/{token}` endpoint.\nInclude the user `token` path parameter to specify the user to update.\n\nTo unlink a child user account from a parent account, pass a null value to the `parent_token` field of the child user resource."
      operationId: putUsersToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the user resource you want to update.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCardHolderUpdateModel'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/card_holder_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/{token}/notes':
    get:
      tags:
        - users
      summary: Lists cardholder notes
      operationId: getUsersTokenNotes
      parameters:
        - name: token
          in: path
          description: User token
          required: true
          style: simple
          schema:
            type: string
        - name: start_index
          in: query
          description: Start index
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: count
          in: query
          description: Number of notes to retrieve
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: created_by
          in: query
          description: Created by
          style: form
          schema:
            type: string
        - name: created_by_user_role
          in: query
          description: Comma-delimited list of created by user roles
          style: form
          schema:
            type: string
        - name: include_private
          in: query
          description: Include private notes and private fields in note response
          style: form
          schema:
            type: boolean
        - name: search_type
          in: query
          description: Search type
          style: form
          schema:
            type: string
        - name: fields
          in: query
          description: 'Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.'
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort order
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardHolderNoteListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - users
      summary: Creates a note for the cardholder
      operationId: postUsersTokenNotes
      parameters:
        - name: token
          in: path
          description: User token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cardholder_note_request_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardholder_note_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/{token}/notes/{notes_token}':
    put:
      tags:
        - users
      summary: Updates a specific note for a cardholder
      operationId: putUsersTokenNotesNotestoken
      parameters:
        - name: token
          in: path
          description: User token
          required: true
          style: simple
          schema:
            type: string
        - name: notes_token
          in: path
          description: Notes token
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cardholder_note_update_request_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardholder_note_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/users/{token}/ssn':
    get:
      tags:
        - Users
      summary: Retrieve user identification number
      description: "To retrieve the government-issued identification number for a user, send a `GET` request to the `/users/{token}/ssn` endpoint.\nInclude the `token` path parameter to specify the user whose identification number (SSN, TIN, NIN, SIN) you wish to return.\nYou can indicate whether to return the full number or the last four digits only."
      operationId: getUsersTokenSsn
      parameters:
        - name: token
          in: path
          description: Unique identifier of the user resource.
          required: true
          style: simple
          schema:
            type: string
        - name: full_ssn
          in: query
          description: "To return the full identification number, set to `true`.\nTo return only the last four digits, set to `false`.\n\nIf the identifications array contains only the last four digits of the identification number, the `/users/{token}/ssn` endpoint will return only the last four digits, regardless of the `full_ssn` parameter."
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ssn_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /usertransitions:
    post:
      tags:
        - User Transitions
      summary: Create user transition
      description: "This endpoint enables you to change a user's status, depending on your role and the previous status change.\nBy changing a user's status, you can control the user's capabilities and the setting of the `user.active` field.\nDo not set the value of the `user.active` field directly.\n\n[cols=\"2a,4a,3a\"]\n|===\n| The user.status Field | Description | User Limitations\n\n| `UNVERIFIED`\n| Initial status of a new user belonging to an account holder group where KYC is always required.\n\n*Allowable Transitions:*  +\n`ACTIVE`, `CLOSED`, `TERMINATED`\n| Cannot activate cards or load funds.\n\n*user.active Field:*  +\n`false`\n\n| `LIMITED`\n| Initial status of a new user belonging to an account holder group where KYC is conditionally required.\n\n*Allowable Transitions:*  +\n`ACTIVE`, `SUSPENDED`, `CLOSED`\n| Restricted by rules in `accountholdergroups.pre_kyc_controls`.\n\n*user.active Field:*  +\n`true`\n\n| `ACTIVE`\n| Status of a user who has passed KYC, or initial status of a new user belonging to an account holder group where KYC is never required.\n\n*Allowable Transitions:*  +\n`SUSPENDED`, `CLOSED`, `UNVERIFIED`\n| None.\n\n*user.active Field:*  +\n`true`\n\n| `SUSPENDED`\n| The user is temporarily inactive.\n\nTransitioning a suspended user to the `ACTIVE` status is restricted, based on your role and the details of the previous status change.\n\n*Allowable Transitions:*  +\n`ACTIVE`, `LIMITED`, `UNVERIFIED`, `CLOSED`, `TERMINATED`\n| Cannot activate cards, load funds, or transact.\n\n*user.active Field:*  +\n`false`\n\n| `CLOSED`\n| The user is permanently inactive.\n\nIn general, the `CLOSED` status should be terminal.\nFor exceptional cases, you can transition a user to other statuses, depending on your role and the details of the previous status change.\nContact your Marqeta representative for more information.\n\n*Allowable Transitions:*  +\n`ACTIVE`, `LIMITED`, `UNVERIFIED`, `SUSPENDED`, `TERMINATED`\n| Cannot activate cards, load funds, or transact.\n\n*user.active Field:*  +\n`false`\n\n| `TERMINATED`\n| The user account is permanently closed.\nUse the `TERMINATED` state to comply with regulatory requirements, such as the requirement that a user account be irreversibly closed when it does not pass Know Your Customer (KYC) verification.\n\n*NOTE:* `TERMINATED` is a terminal status.\nYou must have the Admin or Program Manager role to transition a user to the `TERMINATED` state.\nYou cannot transition a user from `TERMINATED` to any other state.\nContact your Marqeta representative for more information.\n\n*Allowable Transitions:*   +\nNone\n| Cannot load funds, activate cards, or transact.\n\n*The user.active field:*   +\n`false`\n\n|===\n\n[NOTE]\nThe Marqeta platform transitions a user's status in response to certain events.\nFor example, a user in the `UNVERIFIED` status is transitioned to `ACTIVE` when the user passes KYC verification."
      operationId: postUsertransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTransitionRequest'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/usertransitions/user/{user_token}':
    get:
      tags:
        - User Transitions
      summary: List transitions for user
      description: List all transitions for a given user.
      operationId: getUsertransitionsUserUsertoken
      parameters:
        - name: user_token
          in: path
          description: Unique identifier of the user resource.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of user transitions to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-id'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransitionListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/usertransitions/{token}':
    get:
      tags:
        - User Transitions
      summary: Retrieve user transition
      description: Retrieve a user transition.
      operationId: getUsertransitionsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the user transition you want to retrieve.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransitionResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /velocitycontrols:
    get:
      tags:
        - Velocity Controls
      summary: List velocity controls
      description: "Retrieves a list of all the velocity controls associated with a specific user or card product, or lists all the velocity controls defined for your program.\n\nInclude either a `user` or a `card_product` query parameter to indicate the user or card product whose associated velocity controls you want to retrieve (do not include both).\n\nTo list all velocity controls for your program, omit the `user` and `card_product` query parameters from your request.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getVelocitycontrols
      parameters:
        - name: card_product
          in: query
          description: "Unique identifier of the card product.\nEnter the string `null` to retrieve velocity controls that are not associated with any card product."
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: "Unique identifier of the user.\nEnter the string `null` to retrieve velocity controls that are not associated with any user."
          style: form
          schema:
            type: string
        - name: count
          in: query
          description: Number of velocity control resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VelocityControlListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Velocity Controls
      summary: Create velocity control
      description: "Limits how much and how frequently a user can spend funds.\nIf multiple velocity controls apply to the same user, the user cannot exceed any of the defined spending limits.\n\n[TIP]\nYou can create program-level controls in the sandbox environment.\nHowever, you must work with your Marqeta representative to create program-level controls in a production environment."
      operationId: postVelocitycontrols
      requestBody:
        description: Velocity control object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/velocity_control_request'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/velocity_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/velocitycontrols/user/{user_token}/available':
    get:
      tags:
        - Velocity Controls
      summary: List user velocity control balances
      description: "Retrieves a list of the available balances of the velocity controls associated with a user.\nThis operation is unavailable for velocity controls with a window of `TRANSACTION`, because available balances do not apply to single-transaction velocity windows.\n\nDepending on the control, the balance can include an available monetary amount, the number of transactions remaining, and the number of days remaining in the time window.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getVelocitycontrolsUserUsertokenAvailable
      parameters:
        - name: user_token
          in: path
          description: Unique identifier of the cardholder.
          required: true
          style: simple
          schema:
            type: string
        - name: count
          in: query
          description: Number of available balance resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: The sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-lastModifiedTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VelocityControlBalanceListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/velocitycontrols/{token}':
    get:
      tags:
        - Velocity Controls
      summary: Returns a specific velocity control
      description: Retrieves a specific velocity control.
      operationId: getVelocitycontrolsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the velocity control resource.
          required: true
          style: simple
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/velocity_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Velocity Controls
      summary: Update velocity control
      description: Updates a specific velocity control.
      operationId: putVelocitycontrolsToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the velocity control resource.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Velocity control object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/velocity_control_update_request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/velocity_control_response'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /webhooks:
    get:
      tags:
        - Webhooks
      summary: List webhooks
      description: "Returns an array of all webhooks.\n\nThis endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, sorting>>, and <</core-api/sorting-and-pagination, pagination>>."
      operationId: getWebhooks
      parameters:
        - name: active
          in: query
          description: Set to `true` to return only active webhook configurations.
          style: form
          schema:
            type: boolean
            default: false
        - name: count
          in: query
          description: Number of resources to retrieve.
          style: form
          schema:
            type: integer
            format: int32
            default: 5
        - name: start_index
          in: query
          description: Sort order index of the first resource in the returned array.
          style: form
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields
          in: query
          description: "Comma-delimited list of fields to return (`field_1,field_2`, and so on).\nLeave blank to return all fields."
          style: form
          schema:
            type: string
        - name: sort_by
          in: query
          description: "Field on which to sort.\nUse any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.\nPrefix the field name with a hyphen (`-`) to sort in descending order.\nOmit the hyphen to sort in ascending order."
          style: form
          schema:
            type: string
            default: '-createdTime'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponseModelListResponse'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - Webhooks
      summary: Create webhook
      description: Creates a webhook.
      operationId: postWebhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_request_model'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/webhooks/customheaders/{token}':
    put:
      tags:
        - Webhooks
      summary: Update webhook custom headers
      description: Adds or updates a webhook's custom HTTP headers.
      operationId: putWebhooksCustomHeadersToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the webhook.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateCustomHeaderRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/webhooks/{token}':
    get:
      tags:
        - Webhooks
      summary: Retrieve webhook
      description: Retrieves a webhook.
      operationId: getWebhooksToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the webhook.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      tags:
        - Webhooks
      summary: Update webhook
      description: "Updates a webhook.\n\nYou can also use this endpoint to disable webhooks you no longer want to receive—there is no `DELETE` method available to remove unneeded webhooks.\nTo disable a webhook, use this endpoint to set its `active` field to `false`.\n\nFor instructions on managing your webhooks via the Developer Dashboard, see the <</developer-guides/developer-tools/#_to_disable_a_webhook, Developer Tools>> guide."
      operationId: putWebhooksToken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the webhook.
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_base_model'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/webhooks/{token}/ping':
    post:
      tags:
        - Webhooks
      summary: Ping webhook
      description: "Pings your webhook endpoint.\n\nSend a ping request to your webhook endpoint to validate credentials and connectivity.\nYour webhook endpoint must be configured to respond.\n\n=== Configuring your webhook endpoint\n\nWhen the Marqeta platform receives the ping request, it sends a `POST` request containing the following body to the URL of your webhook endpoint:\n\n[#ping-webhook-sample]\n[source,json]\n----\n{\n  \"pings\": [\n    {\n      \"token\": \"marqeta\",\n      \"payload\": \"healthcheck\"\n    }\n  ]\n}\n----\n\nTo indicate that it is functioning properly, your webhook endpoint must respond with a status code of `200` (see <</developer-guides/signature-verification, Signature Verification>> for a code example that identifies a ping request).\nThe response can optionally include a link:http://www.json.org/[JSON, window=\"_blank\"]-formatted body, for example:\n\n[#ping-webhook-sample-2]\n[source,json]\n----\n{\"my_endpoint_status\": \"alive\"}\n----\n\nThe Marqeta platform then responds to its requestor by echoing, as-is, the response code and body received from your webhook endpoint.\n\n=== Using the ping facility\n\nTo ping a webhook endpoint, send a `POST` request to `/webhooks/{token}/ping` and use the `token` path parameter to specify which webhook you want to reach.\nInclude an empty, link:http://www.json.org/[JSON, window=\"_blank\"]-formatted body in the request, that is:\n\n[#ping-webhook-sample-3]\n[source,json]\n----\n{}\n----\n\nThe following chain of actions occurs during the successful execution of a ping operation:\n\n. The Marqeta platform receives the ping request (`POST` to `/webhooks/{token}/ping`).\n. The Marqeta platform sends a request to your webhook endpoint.\n. Your webhook endpoint responds with a status code of \"200\" and an optional body.\n. The Marqeta platform responds to its requestor by echoing, as-is, the response code and body it received from your webhook endpoint.\n\n[NOTE]\nIf the customer-hosted endpoint fails to respond within five seconds, the Marqeta platform times out the request and responds with the following message body (where `<optional message>` represents additional details you can choose to include in the response):\n\n[#ping-webhook-sample-4]\n[source,json]\n----\n{\n  \"error_message\": \"Webhook operation failed \" + <optional message>,\n  \"error_code\": \"422600\"\n}\n----\n\nFailed pings are not automatically retried."
      operationId: postWebhooksTokenPing
      parameters:
        - name: token
          in: path
          description: Unique identifier of the webhook.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_ping_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/webhooks/{token}/{event_type}/{event_token}':
    post:
      tags:
        - Webhooks
      summary: Resend event notification
      description: "Resends an event notification to your webhook endpoint.\n\nAlthough you send this request as a `POST`, all parameters are passed in the URL and the body is empty.\nThe event notification is resent to your webhook endpoint and is also returned in the response to this request."
      operationId: postWebhooksTokenEventtypeEventtoken
      parameters:
        - name: token
          in: path
          description: Unique identifier of the webhook.
          required: true
          style: simple
          schema:
            type: string
        - name: event_type
          in: path
          description: Specifies the type of event you want to resend.
          required: true
          style: simple
          schema:
            enum:
              - chargebacktransition
              - digitalwallettokentransition
              - cardtransition
              - usertransition
              - businesstransition
              - transaction
              - threedstransition
            type: string
        - name: event_token
          in: path
          description: Unique identifier of the event for which you want to resend a notification.
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /transactions/authorizationreversal:
    summary: Reverse an authorization.
    post:
      tags:
        - Transactions
      summary: Reverse an authorization
      operationId: authorizationReversal
      requestBody:
        description: Identifies the transaction to reverse.
        content:
          application/json:
            schema:
              required:
                - original_transaction_token
              properties:
                original_transaction_token:
                  maxLength: 36
                  minLength: 1
                  type: string
                  description: Identifies the transaction to reverse.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/transaction_model'
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
components:
  schemas:
    ACHListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/base_ach_response_model'
          description: "Array of ACH funding source objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    ATCInformationModel:
      type: object
      properties:
        atc_discrepancy_indicator:
          type: string
        atc_discrepancy_value:
          type: number
        atc_value:
          type: number
    AcceptedCountriesListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/accepted_countries_model'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    AccountHolderGroupListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/account_holder_group_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    AddressRequestModel:
      type: object
      properties:
        address1:
          maxLength: 35
          minLength: 0
          type: string
        address2:
          maxLength: 35
          minLength: 0
          type: string
        city:
          maxLength: 35
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        postal_code:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 35
          minLength: 0
          type: string
        zip:
          maxLength: 20
          minLength: 0
          type: string
    AddressResponseModel:
      type: object
      properties:
        address1:
          maxLength: 35
          minLength: 0
          type: string
        address2:
          maxLength: 35
          minLength: 0
          type: string
        city:
          maxLength: 35
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        postal_code:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 35
          minLength: 0
          type: string
        zip:
          maxLength: 20
          minLength: 0
          type: string
    AndroidPushTokenRequestAddress:
      type: object
      properties:
        address1:
          type: string
          description: Street address of the cardholder.
        address2:
          type: string
          description: "Additional address information for the cardholder, such as a suite or apartment number.\n\n`Suite 600`, for example."
        city:
          type: string
          description: City of the cardholder.
        country:
          type: string
          description: "Two-character link:https://www.iso.org/iso-3166-country-codes.html[ISO alpha-2 country code, window=\"_blank\"].\n`US`, for example."
        name:
          type: string
          description: Name of the cardholder.
        phone:
          type: string
          description: Telephone number of the cardholder.
        postal_code:
          type: string
          description: "Postal code of the cardholder, such as a United States ZIP code.\n`94612`, for example."
        state:
          type: string
          description: "Two-character <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, state or province code>>.\n`CA`, for example."
        zip:
          type: string
      description: Specifies the cardholder address.
    Application:
      type: object
      properties:
        access_code:
          type: string
          description: Access code of the client application.
        assets_url:
          type: string
          description: URL of the client application assets.
        client_api_base_url:
          type: string
          description: Base URL of the client API.
        environment:
          type: string
          description: Client application's environment.
        program:
          type: string
          description: Name of the program on the Marqeta platform.
        program_short_code:
          type: string
          description: Short code of the program on the Marqeta platform.
        token:
          type: string
          description: Unique identifier of the `application` object.
      description: Contains client application information.
    AuthControlExemptMidsListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/auth_control_exempt_mids_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    AuthControlListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/auth_control_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    Authentication:
      type: object
      properties:
        email_verified:
          type: boolean
          description: Specifies whether the email address has been verified.
          default: false
        email_verified_time:
          type: string
          description: Date and time when the email address was verified.
          format: date-time
        last_password_update_channel:
          enum:
            - USER_CHANGE
            - USER_RESET
          type: string
          description: Specifies the channel through which the password was last changed.
        last_password_update_time:
          type: string
          description: Date and time when the password was last changed.
          format: date-time
      description: Contains the cardholder's email address and password information.
    AutoReloadListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/auto_reload_response_model'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    BankTransferListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/bank_transfer_response_model'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    BankTransferTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/bank_transfer_transition_response_model'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    BillPayResponse:
      type: object
      properties:
        amount:
          type: string
        biller_token:
          type: string
        created_time:
          type: string
        delivery_date:
          type: string
        last_modified_time:
          type: string
        payment_token:
          type: string
        payment_type:
          type: string
        processing_date:
          type: string
        status:
          type: string
        user_token:
          type: string
    BillingAddress:
      type: object
      properties:
        address:
          type: string
        compressed_zip:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        zip:
          type: string
    BulkCardOrderListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/bulk_issuance_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    BusinessCardHolderListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/business_card_holder_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    BusinessTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/BusinessTransitionResponse'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    BusinessTransitionRequest:
      required:
        - business_token
        - channel
        - reason_code
        - status
      type: object
      properties:
        business_token:
          type: string
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        idempotentHash:
          type: string
        reason:
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
            - TERMINATED
          type: string
        token:
          type: string
    BusinessTransitionResponse:
      required:
        - channel
        - reason_code
        - status
        - token
      type: object
      properties:
        business_token:
          type: string
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        created_time:
          type: string
          format: date-time
        last_modified_time:
          type: string
          format: date-time
        reason:
          type: string
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
            - TERMINATED
          type: string
        token:
          type: string
    BusinessUserCardHolderListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/user_card_holder_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    CardFulfillmentRequest:
      required:
        - card_personalization
      type: object
      properties:
        card_fulfillment_reason:
          enum:
            - NEW
            - LOST_STOLEN
            - EXPIRED
          type: string
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/shipping'
    CardFulfillmentResponse:
      required:
        - card_personalization
      type: object
      properties:
        card_fulfillment_reason:
          enum:
            - NEW
            - LOST_STOLEN
            - EXPIRED
          type: string
          description: Descriptive reason for the card fulfillment.
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/ShippingInformationResponse'
      description: Determines physical characteristics of a card and shipment information.
    CardHolderNoteListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/cardholder_note_response_model'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    CardListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/card_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    CardProductListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/card_product_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    CardTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/card_transition_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    CardholderAddressListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/CardholderAddressResponse'
          description: "Array of address objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    CardholderAddressResponse:
      required:
        - address_1
        - city
        - country
        - created_time
        - first_name
        - last_modified_time
        - last_name
        - postal_code
        - state
        - token
        - zip
      type: object
      properties:
        active:
          type: boolean
          description: Whether the address is active.
          default: false
        address_1:
          maxLength: 255
          minLength: 0
          type: string
          description: Street address of the funding source.
        address_2:
          maxLength: 255
          minLength: 0
          type: string
          description: "Additional address information for the funding source.\n\nThis field is returned if it exists in the resource."
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business account holder associated with the address.\n\nThis field is returned if it exists in the resource."
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: City of the funding source.
        country:
          maxLength: 40
          minLength: 1
          type: string
          description: Country of the funding source.
        created_time:
          type: string
          description: 'Date and time when the address was created, in UTC.'
          format: date-time
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: First name of the account holder associated with the funding source.
        is_default_address:
          type: boolean
          description: Whether this address is the default address used by the funding source.
          default: false
        last_modified_time:
          type: string
          description: "Date and time when the address was last modified, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Last name of the account holder associated with the funding source.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: "Phone number of the funding source.\n\nThis field is returned if it exists in the resource."
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal code of the funding source.
        state:
          maxLength: 2
          minLength: 0
          type: string
          description: "Two-character state, province, or territorial abbreviation.\n\nFor the complete list, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the `funding_source_address` object.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user account holder associated with the address.\n\nThis field is returned if it exists in the resource."
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: United States ZIP code of the funding source.
      description: Contains information about the billing address of the funding source.
    CashloadsResponseModel:
      type: object
      properties:
        vendor_product_id:
          type: string
    ChargebackListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/chargeback_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    ChargebackTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/chargeback_transition_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    ChargebackUpdateRequest:
      type: object
      properties:
        reason_code:
          type: string
          description: Either 'reason_code' or 'reason_description' is required
        reason_description:
          enum:
            - SERVICE_NOT_PROVIDED_MERCHANDISE_NOT_RECEIVED
            - CANCELLED_RECURRING_TRANSACTION
            - NOT_AS_DESCRIBED_OR_DEFECTIVE_MERCHANDISE
            - FRAUD_MULTIPLE_TRANSACTIONS
            - FRAUD_TRANSACTION
            - NO_AUTHORIZATION
            - LATE_PRESENTMENT
            - TRANSACTION_NOT_RECOGNIZED
            - INCORRECT_CURRENCY
            - INCORRECT_TRANSACTION_CODE
            - INCORRECT_CURRENCY_OR_TRANSACTION_CODE
            - INCORRECT_TRANSACTION_AMOUNT
            - INCORRECT_ACCOUNT_NUMBER
            - INCORRECT_TRANSACTION_AMOUNT_OR_ACCOUNT_NUMBER
            - NOT_AUTHORIZED_CARD_PRESENT
            - NOT_AUTHORIZED_CARD_ABSENT
            - CREDIT_NOT_PROCESSED
            - NON_RECEIPT_OF_CASH_OR_LOAD_TRANSACTION_VALUE_AT_ATM
            - DUPLICATE_PROCESSING_OR_PAID_BY_OTHER_MEANS
          type: string
          description: Either 'reason_description' or 'reason_code' is required
        status:
          enum:
            - ARBITRATION
            - CASE_LOST
            - CASE_WON
            - INITIATED
            - NETWORK_REJECTED
            - PREARBITRATION
            - PRE_INITIATED
            - REPRESENTMENT
            - WITHDRAWN
            - WRITTEN_OFF_ISSUER
            - WRITTEN_OFF_PROGRAM
          type: string
    ClearingModel:
      required:
        - amount
        - original_transaction_token
      type: object
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        force_post:
          type: boolean
          default: false
        is_refund:
          type: boolean
          default: false
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
    CommandoModeListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/commando_mode_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    CommandoModeTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/commando_mode_transition_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    CustomerDueDiligenceRequest:
      required:
        - answer
        - question
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    CustomerDueDiligenceUpdateRequest:
      type: object
      properties:
        answer:
          type: string
    DDARequest:
      required:
        - dda
      type: object
      properties:
        dda:
          type: string
    DepositAccountUpdateRequest:
      type: object
      properties:
        allow_immediate_credit:
          type: boolean
          default: false
    DepositDepositResponse:
      type: object
      properties:
        amount:
          type: number
          description: Amount being debited or credited.
        business_token:
          type: string
          description: The unique identifier of the business account holder.
        company_discretionary_data:
          type: string
          description: Company-specific data provided by the direct deposit originator.
        company_entry_description:
          type: string
          description: Company-specific data provided by the direct deposit originator.
        company_identification:
          type: string
          description: Alphanumeric code that identifies the direct deposit originator.
        company_name:
          type: string
          description: Name of the direct deposit originator.
        created_time:
          type: string
          description: Date and time when the direct deposit account was created.
          format: date-time
        direct_deposit_account_token:
          type: string
          description: The unique identifier of the direct deposit account.
        individual_identification_number:
          type: string
          description: Accounting number by which the recipient is known to the direct deposit originator.
        individual_name:
          type: string
          description: Name of the direct deposit recipient.
        last_modified_time:
          type: string
          description: Date and time when the direct deposit account was last modified.
          format: date-time
        settlement_date:
          type: string
          description: Date and time when the credit or debit is applied.
          format: date-time
        standard_entry_class_code:
          type: string
          description: Three-letter code identifying the type of entry.
        state:
          enum:
            - PENDING
            - APPLIED
            - REVERSED
            - REJECTED
          type: string
          description: Current status of the direct deposit record.
        state_reason:
          type: string
          description: Explanation for why the direct deposit record is in the current state.
        state_reason_code:
          type: string
          description: Standard code describing the reason for the current state.
        token:
          type: string
          description: The unique identifier of the direct deposit record.
        type:
          enum:
            - CREDIT
            - DEBIT
          type: string
          description: Determines whether funds are being debited from or credited to the account.
        user_token:
          type: string
          description: The unique identifier of the user account holder.
      description: Contains information about a direct deposit.
    DigitalWalletTokenListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources returned.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/digital_wallet_token'
          description: "Array of digital wallet token resources.\n\nResources are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    DigitalWalletTokenTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources returned.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/digital_wallet_token_transition_response'
          description: "Array of digital wallet token transition resources.\n\nResources are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    DigitalWalletTokenization:
      type: object
      properties:
        card_art_id:
          type: string
        provisioning_controls:
          $ref: '#/components/schemas/provisioning_controls'
    DirectDepositAccountListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/direct_deposit_account_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    DirectDepositListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/DirectDepositResponse'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    DirectDepositRequest:
      required:
        - account_number
        - amount
        - settlement_date
        - type
      type: object
      properties:
        account_number:
          type: string
        amount:
          type: number
        company_discretionary_data:
          maxLength: 20
          minLength: 0
          type: string
        company_entry_description:
          maxLength: 10
          minLength: 0
          type: string
        company_identification:
          maxLength: 10
          minLength: 0
          type: string
        company_name:
          maxLength: 16
          minLength: 0
          type: string
        earlyPayEligible:
          type: boolean
          default: false
        individual_identification_number:
          maxLength: 22
          minLength: 0
          type: string
        individual_name:
          maxLength: 35
          minLength: 0
          type: string
        settlement_date:
          type: string
          format: date-time
        standard_entry_class_code:
          maxLength: 3
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 0
          type: string
        type:
          enum:
            - CREDIT
            - DEBIT
          type: string
    DirectDepositResponse:
      type: object
      properties:
        amount:
          type: number
        business_token:
          type: string
        company_discretionary_data:
          type: string
        company_entry_description:
          type: string
        company_identification:
          type: string
        company_name:
          type: string
        created_time:
          type: string
          format: date-time
        direct_deposit_account_token:
          type: string
        early_direct_deposit:
          type: string
        individual_identification_number:
          type: string
        individual_name:
          type: string
        last_modified_time:
          type: string
          format: date-time
        originator_status_code:
          type: string
        settlement_date:
          type: string
          format: date-time
        standard_entry_class_code:
          type: string
        state:
          enum:
            - PENDING
            - APPLIED
            - REVERSED
            - REJECTED
          type: string
        state_reason:
          type: string
        state_reason_code:
          type: string
        token:
          type: string
        trace_number:
          type: string
        type:
          enum:
            - CREDIT
            - DEBIT
          type: string
        user_token:
          type: string
    DirectDepositTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/DirectDepositTransitionResponse'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    DirectDepositTransitionRequest:
      required:
        - channel
        - direct_deposit_token
        - reason
        - state
      type: object
      properties:
        channel:
          enum:
            - API
            - SYSTEM
            - PROD_SUPPORT
          type: string
        direct_deposit_token:
          type: string
        idempotentHash:
          type: string
        reason:
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          enum:
            - R01
            - R02
            - R03
            - R04
            - R06
            - R08
            - R09
            - R10
            - R11
            - R14
            - R15
            - R16
            - R17
            - R18
            - R20
            - R23
            - R24
            - R29
          type: string
        state:
          enum:
            - PENDING
            - APPLIED
            - REVERSED
            - REJECTED
          type: string
        token:
          type: string
    DirectDepositTransitionResponse:
      type: object
      properties:
        amount:
          type: number
        business_token:
          type: string
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
            - NETWORK
            - PROD_SUPPORT
            - UNSUPPORTED
          type: string
        company_discretionary_data:
          type: string
        company_entry_description:
          type: string
        company_identification:
          type: string
        company_name:
          type: string
        created_time:
          type: string
          format: date-time
        direct_deposit_account_token:
          type: string
        direct_deposit_token:
          type: string
        early_direct_deposit:
          type: string
        individual_identification_number:
          type: string
        individual_name:
          type: string
        last_modified_time:
          type: string
          format: date-time
        originator_status_code:
          type: string
        reason:
          type: string
        reason_code:
          type: string
        settlement_date:
          type: string
          format: date-time
        standard_entry_class_code:
          type: string
        state:
          enum:
            - PENDING
            - APPLIED
            - REVERSED
            - REJECTED
          type: string
        token:
          type: string
        trace_number:
          type: string
        transaction_token:
          type: string
        type:
          type: string
        user_token:
          type: string
    DisputeModel:
      type: object
      properties:
        case_management_identifier:
          type: string
          description: The unique identifier of the dispute case.
        reason:
          type: string
          description: The reason for the dispute.
      description: Contains information about a disputed transaction.
    ExpirationOffset:
      type: object
      properties:
        min_offset:
          $ref: '#/components/schemas/MinOffset'
        unit:
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
          description: specify if a value is provided; default is YEARS
        value:
          type: integer
          description: specify if unit is provided; default is 4
          format: int32
    FeeListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/fee_response'
          description: "An array of fee objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    FraudFeedbackRequest:
      required:
        - actor
        - amount
        - is_fraud
        - status
        - transaction_token
      type: object
      properties:
        actor:
          enum:
            - UNKNOWN
            - THIRD_PARTY_FRAUD
            - CARD_USER_FRAUD
          type: string
          description: This is the party making a call.
        amount:
          type: string
        is_fraud:
          type: boolean
        status:
          enum:
            - CONFIRMED
            - DISPUTED
          type: string
          description: This is the value of the status of the fraud.
        transaction_token:
          maxLength: 64
          minLength: 3
          type: string
      description: of the fraud object
    FraudFeedbackResponse:
      required:
        - message
      type: object
      properties:
        message:
          maxLength: 256
          type: string
      description: of the fraudfeedback response object
    FulfillmentAddressResponse:
      type: object
      properties:
        address1:
          maxLength: 255
          minLength: 0
          type: string
          description: "Number and street of the address.\n\nThis field is returned if it exists in the resource."
        address2:
          maxLength: 255
          minLength: 0
          type: string
          description: "Additional address information.\n\nThis field is returned if it exists in the resource."
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: "City of the address.\n\nThis field is returned if it exists in the resource."
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: "Country of the address.\n\nThis field is returned if it exists in the resource."
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "First name of the addressee.\n\nThis field is returned if it exists in the resource."
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Last name of the addressee.\n\nThis field is returned if it exists in the resource."
        middle_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Middle name of the addressee.\n\nThis field is returned if it exists in the resource."
        phone:
          maxLength: 20
          minLength: 0
          type: string
          description: "Telephone number of the addressee.\n\nThis field is returned if it exists in the resource."
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: "Postal code of the address.\n\nThis field is returned if it exists in the resource."
        state:
          maxLength: 32
          minLength: 0
          type: string
          description: "State or province of the address.\n\nThis field is returned if it exists in the resource."
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: "United States ZIP code of the address.\n\nThis field is returned if it exists in the resource."
      description: Specifies a fulfillment shipping or return address.
    FulfillmentRequest:
      required:
        - card_personalization
      type: object
      properties:
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/shipping'
    FulfillmentResponse:
      required:
        - card_personalization
      type: object
      properties:
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/ShippingInformationResponse'
    FundingAccountListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/funding_account_response_model'
          description: "Array of funding account objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    GPA:
      required:
        - reload_amount
        - trigger_amount
      type: object
      properties:
        reload_amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        trigger_amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
    GPAUnloadListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/gpa_returns'
          description: "Array of GPA unload order objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    IdentificationRequestModel:
      required:
        - type
      type: object
      properties:
        expiration_date:
          type: string
          description: 'Expiration date of the identification, if applicable.'
        type:
          enum:
            - SSN
            - TIN
            - SIN
            - NIN
            - PASSPORT_NUMBER
            - DRIVERS_LICENSE
            - BUSINESS_NUMBER
            - BUSINESS_TAX_ID
            - TAXPAYER_REFERENCE
          type: string
          description: "Type of identification.\n\n*NOTE:* Full Social Security Number (SSN) is required for US-based cardholder KYC verification.\nNine digits only, no delimiters.\n`123456789`, for example."
        value:
          type: string
          description: Number associated with the identification.
      description: Contains identifications associated with the cardholder.
    IdentificationResponseModel:
      type: object
      properties:
        expiration_date:
          type: string
          description: 'Expiration date for the identification, if applicable.'
        type:
          enum:
            - SSN
            - TIN
            - SIN
            - NIN
            - PASSPORT_NUMBER
            - DRIVERS_LICENSE
            - BUSINESS_NUMBER
            - BUSINESS_TAX_ID
            - TAXPAYER_REFERENCE
          type: string
          description: Type of identification.
        value:
          type: string
          description: Number associated with the identification.
      description: Contains identifications associated with the cardholder.
    ImagesCarrier:
      type: object
      properties:
        message_1:
          type: string
          description: Specifies a custom message that appears on the card carrier.
        name:
          type: string
          description: Specifies a PNG image to display on the card carrier.
      description: Specifies personalized images that appear on the card carrier.
    InternalDigitalWallet:
      type: object
      properties:
        address_verification:
          $ref: '#/components/schemas/address_verification'
        card:
          $ref: '#/components/schemas/internal_card'
        created_time:
          type: string
          format: date-time
        device:
          $ref: '#/components/schemas/device'
        fulfillment_status:
          type: string
        id:
          type: integer
          format: int64
        issuer_eligibility_decision:
          type: string
        last_modified_time:
          type: string
          format: date-time
        response:
          $ref: '#/components/schemas/response'
        state:
          type: string
        state_reason:
          type: string
        token:
          type: string
        token_service_provider:
          $ref: '#/components/schemas/token_service_provider'
        wallet_provider_profile:
          $ref: '#/components/schemas/wallet_provider_profile'
    InternalGPAOrder:
      required:
        - amount
        - token
      type: object
      properties:
        amount:
          type: number
        created_time:
          type: string
          format: date-time
        currency:
          type: string
        fundingSource:
          $ref: '#/components/schemas/internal_funding_source'
        last_modified_time:
          type: string
          format: date-time
        memo:
          type: string
        orderState:
          enum:
            - PENDING
            - REVERSED
            - CLEARED
            - COMPLETION
            - DECLINED
            - ERROR
          type: string
        orderType:
          type: string
        originalOrderId:
          type: string
        responseCode:
          type: string
        responseMemo:
          type: string
        tags:
          type: string
        token:
          type: string
    InternalGatewayLog:
      required:
        - funding_source
      type: object
      properties:
        amount:
          type: number
        apiDuration:
          type: integer
          format: int64
        funding_source:
          $ref: '#/components/schemas/internal_funding_source'
        gatewayDuration:
          type: integer
          format: int64
        gatewayMerchant:
          $ref: '#/components/schemas/InternalGatewayMerchant'
        gatewayRequestMethod:
          type: string
        gatewayResponseMessage:
          type: string
        gatewayTransactionId:
          type: string
        gatewayVersion:
          type: string
        internalUser:
          $ref: '#/components/schemas/internal_user'
        memo:
          type: string
        network_metadata:
          $ref: '#/components/schemas/network_metadata'
        orderId:
          type: string
        requestMethod:
          type: string
        responseCode:
          type: string
        responseMessage:
          type: string
        responseReasonCode:
          type: string
        responseStatus:
          type: string
        responseSubCode:
          type: string
    InternalGatewayMerchant:
      required:
        - id
        - token
      type: object
      properties:
        id:
          type: integer
          format: int64
        token:
          type: string
    InternalTransactionResponse:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/response'
    KYCListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/kyc_response'
          description: "Array of KYC verification response objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    LinkedAccountBalanceResponse:
      type: object
      properties:
        account_balance:
          type: number
        available_balance:
          type: number
        balance_iso_currency_code:
          type: string
        created_time:
          type: string
          format: date-time
        last_modified_time:
          type: string
          format: date-time
        processor_token:
          type: string
    MCCGroupListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "The number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/mcc_group_model'
          description: "An array of MCC group objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "The sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "The sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    MSA:
      required:
        - campaign_token
        - reload_amount
        - trigger_amount
      type: object
      properties:
        campaign_token:
          type: string
        reload_amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        trigger_amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
    MerchantGroupListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/merchant_group_response'
          description: "Array of merchant group resources.\n\nResources are returned as appropriate to your query."
        end_index:
          type: integer
          description: "The sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    MerchantModel:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          default: true
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        name:
          maxLength: 40
          minLength: 0
          type: string
        partial_auth_flag:
          type: boolean
          default: true
        phone:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 2
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: The unique identifier of the merchant
        zip:
          maxLength: 10
          minLength: 0
          type: string
    MerchantUpdateModel:
      type: object
      properties:
        active:
          type: boolean
          default: true
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        name:
          maxLength: 40
          minLength: 0
          type: string
        partial_auth_flag:
          type: boolean
          description: 1 char max
          default: true
        phone:
          maxLength: 40
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 255
          minLength: 0
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
    MinOffset:
      type: object
      properties:
        unit:
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
          description: specify if a value is provided; default is expiration_offset.unit
        value:
          type: integer
          description: specify if unit is provided; default is expiration_offset.value
          format: int32
    OfferUpdateModel:
      type: object
      properties:
        active:
          type: boolean
          default: true
        end_date:
          type: string
          description: yyyy-MM-ddThh:mm:ssZ
        name:
          type: string
          description: 255 char max
        start_date:
          type: string
          description: yyyy-MM-ddThh:mm:ssZ
    OrderScope:
      type: object
      properties:
        gpa:
          $ref: '#/components/schemas/GPA'
        msa:
          $ref: '#/components/schemas/MSA'
    PTCAddress:
      required:
        - city
        - county
        - line1
        - postal_code
        - state
      type: object
      properties:
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          maxLength: 3
          minLength: 3
          type: string
        county:
          maxLength: 3
          minLength: 3
          type: string
        line1:
          maxLength: 255
          minLength: 1
          type: string
        line2:
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          type: string
        state:
          type: string
    PTCPhone:
      required:
        - number
      type: object
      properties:
        country_code:
          type: string
        number:
          maxLength: 14
          minLength: 4
          type: string
    PTCSoftDescriptor:
      required:
        - address
        - name
      type: object
      properties:
        address:
          $ref: '#/components/schemas/PTCAddress'
        email:
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
        phone:
          $ref: '#/components/schemas/PTCPhone'
    PrimaryContactInfoModel:
      type: object
      properties:
        department:
          maxLength: 255
          minLength: 0
          type: string
        email:
          maxLength: 255
          minLength: 0
          type: string
        extension:
          maxLength: 255
          minLength: 0
          type: string
        fax:
          maxLength: 255
          minLength: 0
          type: string
        full_name:
          maxLength: 255
          minLength: 0
          type: string
        mobile:
          maxLength: 255
          minLength: 0
          type: string
        phone:
          maxLength: 255
          minLength: 0
          type: string
        title:
          maxLength: 255
          minLength: 0
          type: string
    ProgramReserveTransactionListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/program_reserve_transaction_response'
          description: "List of program reserve transactions.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    ProgramTransferListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of program transfer resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/program_transfer_response'
          description: "Array of program transfer objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    ProgramTransferTypeListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of program transfer resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/program_transfer_type_response'
          description: "Array of program transfer types.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    PushToCardDisburseListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/push_to_card_disbursement_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    PushToCardListResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/push_to_card_response'
        end_index:
          type: integer
          format: int32
        is_more:
          type: boolean
          default: false
        start_index:
          type: integer
          format: int32
    RealTimeFeeGroupListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/real_time_fee_group'
          description: "Array of real time fee group objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    ReversalModel:
      required:
        - amount
        - original_transaction_token
      type: object
      properties:
        amount:
          type: number
        find_original_window_days:
          type: integer
          format: int32
        is_advice:
          type: boolean
          default: false
        network_fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
    ShippingInformationResponse:
      type: object
      properties:
        care_of_line:
          type: string
          description: "Specifies the value of the care of (C/O) line on the mailing carrier.\n\nThis field is returned if it exists in the resource."
        method:
          enum:
            - LOCAL_MAIL
            - LOCAL_MAIL_PACKAGE
            - GROUND
            - TWO_DAY
            - OVERNIGHT
            - INTERNATIONAL
            - INTERNATIONAL_PRIORITY
            - LOCAL_PRIORITY
            - FEDEX_EXPEDITED
            - FEDEX_REGULAR
            - UPS_EXPEDITED
            - UPS_REGULAR
            - USPS_EXPEDITED
            - USPS_REGULAR
          type: string
          description: "Specifies the shipping service.\n\nThis field is returned if it exists in the resource."
        recipient_address:
          $ref: '#/components/schemas/FulfillmentAddressResponse'
        return_address:
          $ref: '#/components/schemas/FulfillmentAddressResponse'
      description: "Specifies shipping details for the order.\n\nThis object is returned if it exists in the resource."
    Special:
      type: object
      properties:
        merchant_on_boarding:
          type: boolean
          default: false
    TransactionModelListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "The number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/transaction_model'
          description: "An array of transaction objects.\nSee the <</core-api/transactions/#transaction_model, Transaction object>> description at the top of this page.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "The sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "The sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    ApiError:
      type: object
      properties:
        error_code:
          type: string
        error_message:
          type: string
        message:
          type: string
    UserCardHolderListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/card_holder_model'
          description: "Array of user objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    UserCardHolderUpdateModel:
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Associates the specified account holder group with the cardholder.\nSend a `GET` request to `/accountholdergroups` to retrieve account holder group tokens."
        address1:
          maxLength: 255
          minLength: 0
          type: string
          description: "Cardholder address.\n\n*NOTE:* Required for KYC verification (US-based cardholders only).\nCannot perform KYC if set to a PO Box."
        address2:
          maxLength: 255
          minLength: 0
          type: string
          description: "Additional address information for the cardholder.\n\n*NOTE:* Cannot perform KYC if set to a PO Box."
        birth_date:
          type: string
          description: "Cardholder date of birth.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: "The city that corresponds to the address.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        company:
          maxLength: 255
          minLength: 0
          type: string
          description: Company name.
        corporate_card_holder:
          type: boolean
          description: Specifies if the cardholder holds a corporate card.
          default: false
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: "Country in which the cardholder resides.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: "Valid email address for the cardholder.\n\nThis value must be unique among cardholders."
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Cardholder first name.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        gender:
          maxLength: 1
          minLength: 0
          enum:
            - F
            - M
          type: string
          description: Gender of the cardholder.
        honorific:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Cardholder title or prefix: Ms., Mr., Miss, Mrs.'
        id_card_expiration_date:
          type: string
          description: Expiration date of the cardholder's identification card.
        id_card_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's identification card number.
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          description: One or more objects containing identifications associated with the cardholder.
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
          description: Cardholder IP address.
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Cardholder last name.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
        middle_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder middle name.
        nationality:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder nationality.
        notes:
          maxLength: 255
          minLength: 0
          type: string
          description: Any additional information pertaining to the cardholder.
        parent_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of an existing user or business resource.\n\nRequired if `uses_parent_account = true`.\nThis account holder is configured as the parent of the current cardholder.\n\nTo unlink a child account from a parent account, update this field to a null value."
        passport_expiration_date:
          type: string
          description: Expiration date of the cardholder's passport.
        passport_number:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder passport number.
        password:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's user account password on the Marqeta platform.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: "Cardholder telephone number (including area code), prepended by the `+` symbol and the 1- to 3-digit country calling code.\nDo not include hyphens, spaces, or parentheses."
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: "Postal code of the cardholder's address.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        ssn:
          type: string
          description: Cardholder's Social Security Number (SSN).
        state:
          maxLength: 32
          minLength: 0
          type: string
          description: "State where the cardholder resides.\n\n*NOTE:* <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid two-character abbreviation>> required for KYC verification (US-based cardholders only)."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the cardholder.
        uses_parent_account:
          type: boolean
          description: "Indicates whether the child shares balances with the parent (`true`), or the child's balances are independent of the parent (`false`).\n\nIf set to `true`, you must also include a `parent_token` in the request.\nThis value cannot be updated."
          default: false
    UserTransitionListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserTransitionResponse'
          description: "Array of user transition resources.\n\nResources are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    UserTransitionRequest:
      required:
        - channel
        - reason_code
        - status
        - user_token
      type: object
      properties:
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
          description: Mechanism by which the transaction was initiated.
        idempotentHash:
          type: string
          description: Unique hashed value that identifies subsequent submissions of the user transition request.
        reason:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional information about the status change.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "Identifies the standardized reason for the transition:\n\n*00:* Object activated for the first time.\n\n*01:* Requested by you.\n\n*02:* Inactivity over time.\n\n*03:* This address cannot accept mail or the addressee is unknown.\n\n*04:* Negative account balance.\n\n*05:* Account under review.\n\n*06:* Suspicious activity was identified.\n\n*07:* Activity outside the program parameters was identified.\n\n*08:* Confirmed fraud was identified.\n\n*09:* Matched with an Office of Foreign Assets Control list.\n\n*10:* Card was reported lost.\n\n*11:* Card information was cloned.\n\n*12:* Account or card information was compromised.\n\n*13:* Temporary status change while on hold/leave.\n\n*14:* Initiated by Marqeta.\n\n*15:* Initiated by issuer.\n\n*16:* Card expired.\n\n*17:* Failed KYC.\n\n*18:* Changed to `ACTIVE` because information was properly validated.\n\n*19:* Changed to `ACTIVE` because account activity was properly validated.\n\n*20:* Change occurred prior to the normalization of reason codes.\n\n*21:* Initiated by a third party, often a digital wallet provider.\n\n*22:* PIN retry limit reached.\n\n*23:* Card was reported stolen.\n\n*24:* Address issue.\n\n*25:* Name issue.\n\n*26:* SSN issue.\n\n*27:* DOB issue.\n\n*28:* Email issue.\n\n*29:* Phone issue.\n\n*30:* Account/fulfillment mismatch.\n\n*31:* Other reason."
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
            - TERMINATED
          type: string
          description: Specifies the new status of the user.
        token:
          type: string
          description: "Unique identifier of the user transition.\n\nIf you do not include a token, the system generates one automatically.\nThis token is referenced in other API calls, so we recommend that you define a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          type: string
          description: Unique identifier of the user whose status you want to transition.
    UserTransitionResponse:
      required:
        - channel
        - reason_code
        - status
        - token
      type: object
      properties:
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
          description: Mechanism by which the transaction was initiated.
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        reason:
          type: string
          description: Additional information about the status change.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "Identifies the standardized reason for the transition:\n\n*00:* Object activated for the first time.\n\n*01:* Requested by you.\n\n*02:* Inactivity over time.\n\n*03:* This address cannot accept mail or the addressee is unknown.\n\n*04:* Negative account balance.\n\n*05:* Account under review.\n\n*06:* Suspicious activity was identified.\n\n*07:* Activity outside the program parameters was identified.\n\n*08:* Confirmed fraud was identified.\n\n*09:* Matched with an Office of Foreign Assets Control list.\n\n*10:* Card was reported lost.\n\n*11:* Card information was cloned.\n\n*12:* Account or card information was compromised.\n\n*13:* Temporary status change while on hold/leave.\n\n*14:* Initiated by Marqeta.\n\n*15:* Initiated by issuer.\n\n*16:* Card expired.\n\n*17:* Failed KYC.\n\n*18:* Changed to `ACTIVE` because information was properly validated.\n\n*19:* Changed to `ACTIVE` because account activity was properly validated.\n\n*20:* Change occurred prior to the normalization of reason codes.\n\n*21:* Initiated by a third party, often a digital wallet provider.\n\n*22:* PIN retry limit reached.\n\n*23:* Card was reported stolen.\n\n*24:* Address issue.\n\n*25:* Name issue.\n\n*26:* SSN issue.\n\n*27:* DOB issue.\n\n*28:* Email issue.\n\n*29:* Phone issue.\n\n*30:* Account/fulfillment mismatch.\n\n*31:* Other reason."
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
            - TERMINATED
          type: string
          description: Specifies the new status of the user.
        token:
          type: string
          description: Unique identifier of the user transition.
        user_token:
          type: string
          description: Unique identifier of the user whose status was transitioned.
    UserValidationRequest:
      type: object
      properties:
        birth_date:
          type: string
          description: yyyy-MM-dd
          format: date-time
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: 'Phone #'
        random_name_line1_postfix:
          maxLength: 6
          minLength: 6
          type: string
          description: Six-char random name postfix
        ssn:
          maxLength: 255
          minLength: 0
          type: string
          description: Last four digits of SSN
    UserValidationResponse:
      required:
        - birth_date
        - phone
        - random_name_line1_postfix
        - ssn
      type: object
      properties:
        birth_date:
          type: boolean
          description: yyyy-MM-dd
          default: false
        phone:
          type: boolean
          description: '10 char max, phone number'
          default: false
        random_name_line1_postfix:
          type: boolean
          description: Six-char random name postfix
          default: false
        ssn:
          type: boolean
          description: Last four digits of SSN
          default: false
    ValidationsRequest:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserValidationRequest'
    ValidationsResponse:
      required:
        - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserValidationResponse'
    VelocityCache:
      type: object
      properties:
        cardHolderId:
          type: integer
          format: int64
        createdTime:
          type: string
          format: date-time
        lastModifiedTime:
          type: string
          format: date-time
        maxId:
          type: integer
          format: int64
        usageCount:
          type: integer
          format: int32
        usedAmount:
          type: number
        vcSignature:
          type: string
        velocityControlId:
          type: integer
          format: int64
        windowStartTime:
          type: string
          format: date-time
    VelocityControlBalanceListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of velocity control resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/velocity_control_balance_response'
          description: "Array of velocity control objects that include available balances.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    VelocityControlListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources retrieved.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/velocity_control_response'
          description: "Array of velocity control objects.\n\nObjects are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "The sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    WebhookResponseModelListResponse:
      type: object
      properties:
        count:
          type: integer
          description: "Number of resources to retrieve.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/webhook_response_model'
          description: "Array of webhooks resources.\n\nResources are returned as appropriate to your query."
        end_index:
          type: integer
          description: "Sort order index of the last resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
        is_more:
          type: boolean
          description: "A value of `true` indicates that more unreturned resources exist.\nA value of `false` indicates that no more unreturned resources exist.\n\nThis field is returned if there are resources in your returned array."
          default: false
        start_index:
          type: integer
          description: "Sort order index of the first resource in the returned array.\n\nThis field is returned if there are resources in your returned array."
          format: int32
    WebhookUpdateCustomHeaderRequest:
      type: object
      properties:
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: "Additional custom information included in the HTTP header.\nFor example, this might contain security information, along with Basic Authentication, when making a JIT Funding request."
    accepted_countries_model:
      required:
        - country_codes
        - is_whitelist
        - name
      type: object
      properties:
        country_codes:
          type: array
          items:
            type: string
        created_time:
          type: string
          format: date-time
        is_whitelist:
          type: boolean
          default: false
        last_modified_time:
          type: string
          format: date-time
        name:
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    access_token_response:
      required:
        - expires
      type: object
      properties:
        accesstoken_id:
          type: string
        application:
          $ref: '#/components/schemas/Application'
        expires:
          type: string
          description: Date and time when the access token expires.
          format: date-time
        master_roles:
          type: array
          items:
            type: string
          description: Array of master roles.
        one_time:
          type: boolean
          description: Indicates whether the access token is a single-use token.
        token:
          type: string
          description: Unique identifier of the access token.
        token_type:
          type: string
          description: Specifies the type of access token.
        user_token:
          type: string
          description: Unique identifier of the user resource.
      description: Contains a cardholder's login access information.
    account:
      type: object
      properties:
        email_address:
          type: string
          description: Digital wallet provider's email address for the cardholder.
        id:
          type: string
          description: Digital wallet provider's identity number for the cardholder.
        score:
          type: string
          description: Score from the digital wallet provider.
      description: Contains information related to the cardholder and provided by the digital wallet provider.
    account_funding:
      type: object
      properties:
        funding_source:
          enum:
            - CREDIT
            - DEBIT
            - PREPAID
            - DEPOSIT_ACCOUNT
            - CASH
            - MOBILE_MONEY_ACCOUNT
            - NON_VISA_CREDIT
            - CHECK
            - ACH
          type: string
          description: Specifies the type of account from which the transaction was funded.
        receiver_account_type:
          enum:
            - OTHER
            - RTN_BANK_ACCOUNT
            - IBAN
            - CARD_ACCOUNT
            - EMAIL
            - PHONE_NUMBER
            - BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE
            - WALLET_ID
            - SOCIAL_NETWORK_ID
          type: string
          description: Specifies the type of account receiving the funding.
        receiver_name:
          type: string
          description: Specifies the name of the account holder receiving the funding.
        screening_score:
          type: string
          description: "Sanctions screening score to assist with meeting Anti-Money Laundering (AML) obligations.\n\nHigher scores indicate that the sender's data more closely resembles an entry on the regulatory watchlist.\n\nA value of 999 means no score was available."
        sender_account_number:
          type: string
          description: Account number of the sender funding the transaction.
        sender_address:
          type: string
          description: Street address of the sender funding the transaction.
        sender_city:
          type: string
          description: City of the sender funding the transaction.
        sender_country:
          type: string
          description: Country of the sender funding the transaction.
        sender_name:
          type: string
          description: Name of the sender funding the transaction.
        sender_state:
          type: string
          description: State or province of the sender funding the transaction.
        transaction_purpose:
          type: string
          description: Describes the purpose of the account funding transaction.
        transaction_type:
          enum:
            - ACCOUNT_TO_ACCOUNT
            - PERSON_TO_PERSON
            - WALLET_TRANSFER
            - MONEY_TRANSFER_BY_BANK
            - BUSINESS_TO_BUSINESS
            - DISBURSEMENT
            - GOVERNMENT_DISBURSEMENT
            - GAMBLING_PAYOUT
            - LOYALTY
            - MERCHANT_DISBURSEMENT
            - ONLINE_GAMBLING_PAYOUT
            - PENSION_DISBURSEMENT
            - PREPAID_LOADS
            - CARD_BILL_PAYMENT
            - BILL_PAYMENT
            - CASH_CLAIM
            - CASH_IN
            - CASH_OUT
            - MOBILE_AIR_TIME_PAYMENT
            - MONEY_TRANSFER_BY_MERCHANT
            - FACE_TO_FACE_MERCHANT_PAYMENT
            - GOVERNMENT_PAYMENT
            - PAYMENTS_GOODS_SERVICES
            - FUNDS_TRANSFER
            - GENERAL_BUSINESS_TO_BUSINESS_TRANSFER
            - BUSINESS_TO_BUSINESS_TRANSFER
            - CASH_DEPOSIT
            - PURCHASE_REPAYMENT
            - AFT_OR_OCT_ELIGIBILITY
            - CONSUMER_BILL_PAYMENT
            - REQUEST_TO_PAY
            - LIQUID_ASSET
            - FAST_REFUND
          type: string
          description: Specifies the account funding transaction type.
      description: "Contains details about account funding transactions.\nAccount funding transactions move money into a cardholder's general purpose account (GPA)."
    account_holder_group_config:
      type: object
      properties:
        is_reloadable:
          type: boolean
          default: false
        kyc_required:
          enum:
            - ALWAYS
            - CONDITIONAL
            - NEVER
          type: string
        pre_kyc_controls:
          $ref: '#/components/schemas/pre_kyc_controls'
        real_time_fee_group_token:
          maxLength: 36
          minLength: 0
          type: string
    account_holder_group_request:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/account_holder_group_config'
        name:
          maxLength: 40
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    account_holder_group_response:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/account_holder_group_config'
        name:
          type: string
          description: 40 char max
        token:
          type: string
          description: 36 char max
    account_holder_group_update_request:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/account_holder_group_config'
        name:
          maxLength: 40
          minLength: 1
          type: string
    account_name_verification_model:
      type: object
      properties:
        on_file:
          $ref: '#/components/schemas/ani_information'
        request:
          $ref: '#/components/schemas/ani_information'
        request_type:
          enum:
            - SENDER
            - RECEIVER
          type: string
        response:
          $ref: '#/components/schemas/response'
      description: 'Contains name verification data: the full name entered by the cardholder, name data held by the Marqeta platform, and an assertion by the Marqeta platform as to whether the two sets of data match.'
    account_name_verification_source:
      type: object
      properties:
        first_name:
          type: string
          description: First or given name of the cardholder.
        last_name:
          type: string
          description: Last or family name of the cardholder.
        middle_name:
          type: string
          description: Middle name of the cardholder.
        on_file:
          $ref: '#/components/schemas/ani_information'
        response:
          $ref: '#/components/schemas/response'
      description: Contains account name verification data used to make JIT Funding decisions.
    account_owner_model:
      type: object
      properties:
        country_of_birth:
          type: string
          description: Account owner's country of birth.
        dob:
          type: string
          description: Account owner's date of birth.
        email_address:
          type: string
          description: Account owner's email address.
        nationality:
          type: string
          description: Account owner's nationality.
        occupation:
          type: string
          description: Account owner's occupation.
      description: Information about the owner of an account participating in an account funding or original credit transaction.
    ach_model:
      required:
        - account_number
        - account_type
        - name_on_account
        - routing_number
      type: object
      properties:
        account_number:
          type: string
          description: ACH account number.
        account_type:
          enum:
            - checking
            - savings
            - corporate
            - loan
          type: string
          description: Type of account.
        bank_name:
          type: string
          description: Name of the financial institution where the ACH account is held.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business account holder.\nThis token is required if a `user_token` is not specified."
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        name_on_account:
          maxLength: 50
          minLength: 1
          type: string
          description: Name on the ACH account.
        routing_number:
          type: string
          description: Routing number for the ACH account.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source.\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user account holder.\nThis token is required if a `business_token` is not specified."
        verification_notes:
          type: string
          description: "Free-form text field for holding notes about verification.\nThis field is returned only if `verification_override = true`."
        verification_override:
          type: boolean
          description: "Allows the ACH funding source to be used, regardless of its verification status.\nSet this field to `true` if you can attest that you have verified the account on your own and that it will not be returned by the Federal Reserve.\n\n*NOTE:* When using `PLAID` to validate a funding source, this field is always set to `true`."
          default: false
    ach_partner_request_model:
      required:
        - partner
        - partner_account_link_reference_token
      type: object
      properties:
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Required if 'user_token' is null
        idempotentHash:
          type: string
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        partner:
          enum:
            - PLAID
          type: string
          description: "Name of the partner who validated the account holder.\nReturned when a third-party partner was used for account validation."
        partner_account_link_reference_token:
          type: string
          description: "Supplied by the account validation partner, this value is a reference to the account holder's details, such as the account number and routing number.\nReturned when a third-party partner was used for account validation."
        token:
          type: string
          description: "Unique identifier of the funding source.\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Supplied by the account validation partner, this value is a reference to the account holder's details, such as the account number and routing number.\nThis token is required if a `business_token` is not specified.\n\nSend a `GET` request to `/users` to retrieve user tokens."
    ach_response_model:
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - last_modified_time
        - name_on_account
        - token
      type: object
      properties:
        account_suffix:
          type: string
          description: ACH account identifier appended to the bank account number.
        account_type:
          type: string
          description: Type of account.
        active:
          type: boolean
          description: Specifies whether the account is active.
          default: false
        bank_name:
          type: string
          description: "Name of the bank holding the account.\nThis field is returned if it exists in the resource."
        business_token:
          type: string
          description: "Unique identifier of the business account holder.\nThis token is returned if a `user_token` is not specified."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        date_sent_for_verification:
          type: string
          description: "Date and time in UTC when the request for account validation was sent to the third-party partner.\n\nThis field is returned if it exists in the resource."
          format: date-time
        date_verified:
          type: string
          description: "Date and time when the account was verified, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source.\n\nThis field is returned if it exists in the resource."
          default: false
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        name_on_account:
          type: string
          description: Name on the ACH account.
        partner:
          type: string
          description: "Name of the partner who validated the account holder.\nReturned when a third-party partner was used for account validation."
        partner_account_link_reference_token:
          type: string
          description: "Supplied by the account validation partner, this value is a reference to the account holder's details, such as the account number and routing number.\nReturned when a third-party partner was used for account validation."
        token:
          type: string
          description: Unique identifier of the funding source.
        user_token:
          type: string
          description: "Unique identifier of the user account holder.\nThis token is returned if a `business_token` is not specified."
        verification_notes:
          type: string
          description: "Free-form text field for holding notes about verification.\nThis field is returned only if `verification_override = true`."
        verification_override:
          type: boolean
          description: "Allows the ACH funding source to be used regardless of its verification status.\nThis field is returned if it exists in the resource.\n\n*NOTE:* When using `PLAID` to validate a funding source, this field is always set to `true`."
          default: false
        verification_status:
          type: string
          description: "Account verification status.\nThis field is returned if it exists in the resource."
    ach_verification_model:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the ACH funding source is active.
          default: false
        verify_amount1:
          type: number
          description: Verification amount.
        verify_amount2:
          type: number
          description: Verification amount.
    acquirer:
      type: object
      properties:
        city:
          type: string
          description: "City of the merchant's financial institution.\nThis field appears only in account funding and original credit transactions."
        country_code:
          type: string
          description: "Country code of the merchant's financial institution.\nThis field appears only in account funding and original credit transactions."
        institution_country:
          type: string
          description: Country code of the merchant's financial institution.
        institution_id_code:
          type: string
          description: Identifier code of the merchant's financial institution.
        merchant_street_address:
          type: string
          description: "Street address of the merchant.\nThis field appears only in account funding and original credit transactions."
        name:
          type: string
          description: "Name of the merchant's financial institution.\nThis field appears only in account funding and original credit transactions."
        network_international_id:
          type: string
          description: International network identifier.
        postal_code:
          type: string
          description: "Postal code of the merchant's financial institution.\nThis field appears only in account funding and original credit transactions."
        retrieval_reference_number:
          type: string
          description: Retrieval reference number of the merchant's financial institution.
        state:
          type: string
          description: "State where the merchant's financial institution is located.\nThis field appears only in account funding and original credit transactions."
        street_address:
          type: string
        system_trace_audit_number:
          type: string
          description: System trace audit number of the merchant's financial institution.
      description: Contains information about the merchant's financial institution.
    activation_actions:
      type: object
      properties:
        swap_digital_wallet_tokens_from_card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Moves all digital wallet tokens from the specified card to the new card.\n\nNot relevant when `reissue_pan_from_card_token` is set.\n\nSend a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user."
        terminate_reissued_source_card:
          type: boolean
          description: "If you are reissuing a card, the source card is terminated by default.\nTo prevent the source card from being terminated, set this field to `false`.\n\nOnly relevant when `reissue_pan_from_card_token` is set."
          default: true
      description: "Defines actions to execute when the card is activated.\nThe fields in this object are mutually exclusive."
    address_verification:
      type: object
      properties:
        name:
          type: string
          description: Name of the cardholder.
        postal_code:
          type: string
          description: Postal code.
        street_address:
          type: string
          description: Street address provided by the cardholder.
        zip:
          type: string
          description: United States ZIP code.
      description: Contains address verification information.
    address_verification_model:
      type: object
      properties:
        on_file:
          $ref: '#/components/schemas/avs_information'
        request:
          $ref: '#/components/schemas/avs_information'
        response:
          $ref: '#/components/schemas/response'
      description: 'Contains address verification data consisting of address data entered by the cardholder, address data held by the Marqeta platform, and an assertion by the Marqeta platform as to whether the two sets of data match.'
    address_verification_source:
      type: object
      properties:
        on_file:
          $ref: '#/components/schemas/avs_information'
        response:
          $ref: '#/components/schemas/response'
      description: 'Contains address verification data consisting of address data entered by the cardholder, address data held by the Marqeta platform, and an assertion by the Marqeta platform as to whether the two sets of data match.'
    airline:
      type: object
      properties:
        depart_date:
          type: string
          description: The date and time of departure.
          format: date-time
        origination_city:
          type: string
          description: The city where the flight originates.
        passenger_name:
          type: string
          description: The name of the passenger.
      description: Contains information about airline-related transactions.
    android_push_tokenize_request_data:
      type: object
      properties:
        display_name:
          type: string
          description: "Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).\n`Visa 5678`, for example."
        last_digits:
          type: string
          description: Last four digits of the primary account number of the physical or virtual card.
        network:
          type: string
          description: Specifies the card network of the physical or virtual card.
        opaque_payment_card:
          type: string
          description: Encrypted data field created by the issuer and passed to Google Wallet during the push provisioning process.
        token_service_provider:
          type: string
          description: Specifies the network that provides the digital wallet token service.
        user_address:
          $ref: '#/components/schemas/AndroidPushTokenRequestAddress'
      description: Contains details about a card tokenization push request.
    ani_information:
      type: object
      properties:
        card_name:
          type: string
          description: Full name of the cardholder as it appears on the card.
        first_name:
          type: string
          description: First or given name of the cardholder.
        last_name:
          type: string
          description: Last or family name of the cardholder.
        middle_name:
          type: string
          description: Middle name of the cardholder.
      description: Contains the name of the cardholder for account name verification.
    ani_information_1:
      type: object
      properties:
        first_name:
          type: string
          description: First or given name of the cardholder.
        last_name:
          type: string
          description: Last or family name of the cardholder.
        middle_name:
          type: string
          description: Middle name of the cardholder.
      description: Contains account name verification data used to make JIT Funding decisions.
    atc_information:
      type: object
      properties:
        atc_discrepancy_indicator:
          type: string
        atc_discrepancy_value:
          type: number
        atc_value:
          type: number
    auth_control_exempt_mids_request:
      required:
        - name
      type: object
      properties:
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          type: string
          format: date-time
        merchant_group_token:
          maxLength: 36
          minLength: 1
          type: string
          description: 36 char max
        mid:
          maxLength: 36
          minLength: 1
          type: string
        name:
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          type: string
          format: date-time
        token:
          type: string
    auth_control_exempt_mids_response:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          default: false
        association:
          $ref: '#/components/schemas/spend_control_association'
        created:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        last_updated:
          type: string
          format: date-time
        merchant_group_token:
          maxLength: 36
          minLength: 1
          type: string
          description: 36 char max
        mid:
          maxLength: 36
          minLength: 1
          type: string
        name:
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          type: string
          format: date-time
        token:
          type: string
    auth_control_exempt_mids_update_request:
      type: object
      properties:
        active:
          type: boolean
          default: false
    auth_control_merchant_scope:
      type: object
      properties:
        mcc:
          maxLength: 4
          minLength: 1
          type: string
          description: 4 char max
        mcc_group:
          maxLength: 36
          minLength: 1
          type: string
          description: 36 char max
        merchant_group_token:
          maxLength: 36
          minLength: 1
          type: string
          description: 36 char max
        mid:
          maxLength: 36
          minLength: 1
          type: string
          description: 36 char max
    auth_control_request:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          default: true
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          type: string
          format: date-time
        merchant_scope:
          $ref: '#/components/schemas/auth_control_merchant_scope'
        name:
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          type: string
          format: date-time
        token:
          maxLength: 36
          minLength: 1
          type: string
    auth_control_response:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          default: true
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          type: string
          format: date-time
        merchant_scope:
          $ref: '#/components/schemas/auth_control_merchant_scope'
        name:
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          type: string
          format: date-time
        token:
          maxLength: 36
          minLength: 1
          type: string
    auth_control_update_request:
      required:
        - token
      type: object
      properties:
        active:
          type: boolean
          default: true
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          type: string
          format: date-time
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        name:
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          type: string
          format: date-time
        token:
          maxLength: 36
          minLength: 1
          type: string
    auth_request_model:
      required:
        - amount
        - card_token
        - mid
      type: object
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_options:
          $ref: '#/components/schemas/card_options'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        cash_back_amount:
          type: number
        is_pre_auth:
          type: boolean
          default: false
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
        network_metadata:
          $ref: '#/components/schemas/network_metadata'
        pin:
          maxLength: 50
          minLength: 1
          type: string
        transaction_options:
          $ref: '#/components/schemas/transaction_options'
        webhook:
          $ref: '#/components/schemas/webhook'
    authorization_advice_model:
      required:
        - amount
        - original_transaction_token
      type: object
      properties:
        amount:
          type: number
        network_fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        transaction_options:
          $ref: '#/components/schemas/transaction_options'
        webhook:
          $ref: '#/components/schemas/webhook'
    authorization_controls:
      type: object
      properties:
        hold_expiration_days:
          type: integer
          description: Specifies the number of days after which an authorization associated with this group expires.
          format: int32
          default: 7
        hold_increase:
          $ref: '#/components/schemas/hold_increase'
      description: "Controls the expiration of authorizations and automatic increases to the authorization amount for MCCs specified in this group.\n\nBy default, these authorization controls apply program-wide, meaning that they apply to every card in your program.\nYou can, however, exempt cards associated with any particular card product by setting that card product's `allow_mcc_group_authorization_controls` field to `false`."
    auto_reload_association:
      type: object
      properties:
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business for which the auto reload is configured.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        card_product_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the card product for which the auto reload is configured.\n\nSend a `GET` request to `/cardproducts` to retrieve card product tokens."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user for which the auto reload is configured.\n\nSend a `GET` request to `/users` to retrieve user tokens."
      description: "Specifies the scope of the auto reload.\n\nInput no more than one field.\nIf no value is supplied, the auto reload applies at the program level."
    auto_reload_model:
      required:
        - currency_code
        - order_scope
      type: object
      properties:
        active:
          type: boolean
          description: "Specifies whether the auto reload is active.\n\nOnly one auto reload per level, per object, can be active."
          default: true
        association:
          $ref: '#/components/schemas/auto_reload_association'
        currency_code:
          type: string
          description: 'Three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO 4217 currency code, window="_blank"].'
        funding_source_address_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source address to use for this auto reload.\n\nIf your funding source is an ACH account, then a `funding_source_address_token` is not required.\nIf your funding source is a payment card, you must have at least one funding source address in order to create a GPA order.\n\nSend a `GET` request to `/fundingsources/addresses/user/{user_token}` to retrieve address tokens for a user.\n\nSend a `GET` request to `/fundingsources/addresses/business/{business_token}` to retrieve address tokens for a business."
        funding_source_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source to use for this auto reload.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve funding source tokens for a user.\n\nSend a `GET` request to `/fundingsources/business/{business_token}` to retrieve funding source tokens for a business."
        order_scope:
          $ref: '#/components/schemas/order_scope'
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the auto reload.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
      description: "Contains information about an auto reload.\nSee <</core-api/auto-reload, Auto Reloads>> for more information.\n\nReturned if an auto reload was executed."
    auto_reload_response_model:
      required:
        - created_time
        - currency_code
        - last_modified_time
        - order_scope
      type: object
      properties:
        active:
          type: boolean
          default: true
        association:
          $ref: '#/components/schemas/auto_reload_association'
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        currency_code:
          type: string
        funding_source_address_token:
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Required when order scope is GPA
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        order_scope:
          $ref: '#/components/schemas/OrderScope'
        token:
          maxLength: 36
          minLength: 1
          type: string
    auto_reload_update_model:
      type: object
      properties:
        active:
          type: boolean
          default: true
        association:
          $ref: '#/components/schemas/auto_reload_association'
        currency_code:
          type: string
        funding_source_address_token:
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          maxLength: 36
          minLength: 1
          type: string
        order_scope:
          $ref: '#/components/schemas/OrderScope'
        token:
          maxLength: 36
          minLength: 1
          type: string
    available:
      required:
        - amount
        - uses
      type: object
      properties:
        amount:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: Total amount of spend remaining in the velocity control.
        days_remaining:
          type: integer
          description: Number of days remaining in the velocity control time window.
          format: int32
        uses:
          type: integer
          description: Number of uses remaining in the velocity control.
          format: int32
          default: 0
      description: "Specifies the available balances of the velocity controls associated with a user.\n\nThis object is not returned if the velocity control window is `TRANSACTION`, because available balances do not apply to single-transaction velocity windows."
    avs_control_options:
      type: object
      properties:
        decline_on_address_number_mismatch:
          type: boolean
          default: false
        decline_on_postal_code_mismatch:
          type: boolean
          default: true
        validate:
          type: boolean
          default: true
    avs_controls:
      type: object
      properties:
        auth_messages:
          $ref: '#/components/schemas/avs_control_options'
        av_messages:
          $ref: '#/components/schemas/avs_control_options'
    avs_information:
      type: object
      properties:
        postal_code:
          type: string
          description: Postal code of the address.
        street_address:
          type: string
          description: Street name and number of the address.
        zip:
          type: string
          description: United States ZIP code of the address.
      description: Contains address verification information.
    balance_inquiry_request_model:
      required:
        - account_type
        - card_acceptor
        - card_token
        - mid
      type: object
      properties:
        account_type:
          enum:
            - checking
            - savings
            - credit
          type: string
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
        pin:
          maxLength: 15
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
    bank_account_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - account_suffix
            - account_type
            - name_on_account
            - routing_number
            - verification_status
          type: object
          properties:
            account_suffix:
              type: string
            account_type:
              type: string
            business_token:
              type: string
              description: Required if 'user_token' is null
            name_on_account:
              type: string
            routing_number:
              type: string
            user_token:
              type: string
              description: Required if 'business_token' is null
            verification_status:
              type: string
    bank_transfer_request_model:
      required:
        - amount
        - funding_source_token
        - type
      type: object
      properties:
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        channel:
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
          description: default = API
        created_by:
          maxLength: 255
          minLength: 0
          type: string
        currency_code:
          type: string
          description: default = USD
        funding_source_token:
          maxLength: 36
          minLength: 0
          type: string
        memo:
          type: string
        standard_entry_class_code:
          enum:
            - WEB
            - PPD
            - CCD
          type: string
        statement_descriptor:
          maxLength: 10
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 0
          type: string
        transfer_speed:
          enum:
            - STANDARD
            - SAME_DAY
          type: string
          description: default = STANDARD
        type:
          enum:
            - PUSH
            - PULL
          type: string
    bank_transfer_response_model:
      required:
        - amount
        - funding_source_token
        - type
      type: object
      properties:
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        batch_number:
          type: string
        channel:
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
          description: default = API
        created_by:
          maxLength: 255
          minLength: 0
          type: string
        created_time:
          type: string
          format: date-time
        currency_code:
          type: string
          description: default = USD
        funding_source_token:
          maxLength: 36
          minLength: 0
          type: string
        is_early_funded:
          type: boolean
        last_modified_time:
          type: string
          format: date-time
        memo:
          type: string
        return_code:
          type: string
        return_reason:
          type: string
        standard_entry_class_code:
          enum:
            - WEB
            - PPD
            - CCD
          type: string
        statement_descriptor:
          maxLength: 10
          minLength: 0
          type: string
        status:
          enum:
            - INITIATED
            - PENDING
            - PROCESSING
            - SUBMITTED
            - RETURNED
            - COMPLETED
            - ERROR
            - CANCELLED
            - REVERSAL_PEND
            - REVERSAL_COMP
            - REVERSAL_DECL
          type: string
        token:
          maxLength: 36
          minLength: 0
          type: string
        transfer_speed:
          enum:
            - STANDARD
            - SAME_DAY
          type: string
          description: default = STANDARD
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/bank_transfer_transition_response_model'
        type:
          enum:
            - PUSH
            - PULL
          type: string
    bank_transfer_transition_request_model:
      required:
        - bank_transfer_token
        - channel
        - status
      type: object
      properties:
        amount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        bank_transfer_token:
          maxLength: 36
          minLength: 0
          type: string
        batch_number:
          type: string
        channel:
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
        effective_date:
          type: string
          format: date-time
        program_reserve_token:
          maxLength: 36
          minLength: 0
          type: string
        reason:
          type: string
        return_code:
          type: string
        reversal_after_45_days:
          type: boolean
        status:
          enum:
            - PENDING
            - PROCESSING
            - SUBMITTED
            - RETURNED
            - COMPLETED
            - CANCELLED
            - REVERSAL_PEND
            - REVERSAL_COMP
          type: string
        token:
          maxLength: 36
          minLength: 0
          type: string
    bank_transfer_transition_response_model:
      required:
        - bank_transfer_token
        - channel
        - status
      type: object
      properties:
        amount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        bank_transfer_token:
          maxLength: 36
          minLength: 0
          type: string
        batch_number:
          type: string
        channel:
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
        created_time:
          type: string
          format: date-time
        effective_date:
          type: string
          format: date-time
        last_modified_time:
          type: string
          format: date-time
        program_reserve_token:
          maxLength: 36
          minLength: 0
          type: string
        reason:
          type: string
        return_code:
          type: string
        return_reason:
          type: string
        reversal_after_45_days:
          type: boolean
        status:
          enum:
            - PENDING
            - PROCESSING
            - SUBMITTED
            - RETURNED
            - COMPLETED
            - CANCELLED
            - REVERSAL_PEND
            - REVERSAL_COMP
          type: string
        token:
          maxLength: 36
          minLength: 0
          type: string
        transaction_jit_token:
          type: string
        transaction_token:
          type: string
    base_ach_request_model:
      required:
        - account_number
        - account_type
        - name_on_account
        - routing_number
      type: object
      properties:
        account_number:
          type: string
          description: ACH account number.
        account_type:
          enum:
            - checking
            - savings
            - corporate
            - loan
          type: string
          description: Type of account.
        bank_name:
          type: string
          description: Name of the bank holding the account.
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        name_on_account:
          maxLength: 50
          minLength: 1
          type: string
          description: Name on the ACH account.
        routing_number:
          type: string
          description: Routing number for the ACH account.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source.\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        verification_notes:
          type: string
          description: "Free-form text field for holding notes about verification.\nThis field is returned only if `verification_override = true`."
        verification_override:
          type: boolean
          description: "Allows the ACH funding source to be used, regardless of its verification status.\nSet this field to `true` if you can attest that you have verified the account on your own and that it will not be returned by the Federal Reserve.\n\n*NOTE:* When using `PLAID` to validate a funding source, this field is always set to `true`."
          default: false
    base_ach_response_model:
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - last_modified_time
        - name_on_account
        - token
      type: object
      properties:
        account_suffix:
          type: string
          description: ACH account identifier appended to the bank account number.
        account_type:
          type: string
          description: Type of account.
        active:
          type: boolean
          description: Specifies whether the account is active.
          default: false
        bank_name:
          type: string
          description: "Name of the bank holding the account.\nThis field is returned if it exists in the resource."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        date_sent_for_verification:
          type: string
          description: "Date and time in UTC when the request for account validation was sent to the third-party partner.\n\nThis field is returned if it exists in the resource."
          format: date-time
        date_verified:
          type: string
          description: "Date and time when the account was verified, in UTC.\n\nThis field is returned if it exists in the resource."
          format: date-time
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        name_on_account:
          type: string
          description: Name on the ACH account.
        partner:
          type: string
        partner_account_link_reference_token:
          type: string
        token:
          type: string
          description: Unique identifier of the funding source.
        verification_notes:
          type: string
          description: "Free-form text field for holding notes about verification.\nThis field is returned only if `verification_override = true`."
        verification_override:
          type: boolean
          description: "Allows the ACH funding source to be used regardless of its verification status.\nThis field is returned if it exists in the resource.\n\n*NOTE:* When using `PLAID` to validate a funding source, this field is always set to `true`."
          default: false
        verification_status:
          type: string
          description: "Account verification status.\nThis field is returned if it exists in the resource."
    beneficial_owner_request:
      type: object
      properties:
        dob:
          type: string
          format: date-time
        first_name:
          type: string
        home:
          $ref: '#/components/schemas/AddressRequestModel'
        last_name:
          type: string
        middle_name:
          type: string
        phone:
          type: string
        ssn:
          type: string
        title:
          type: string
    beneficial_owner_response:
      type: object
      properties:
        first_name:
          type: string
        getdob:
          type: string
          format: date-time
        home:
          $ref: '#/components/schemas/AddressResponseModel'
        last_name:
          type: string
        middle_name:
          type: string
        phone:
          type: string
        title:
          type: string
    bulk_issuance_request:
      required:
        - card_allocation
        - card_product_token
        - fulfillment
        - token
      type: object
      properties:
        card_allocation:
          maximum: 50000
          type: integer
          format: int32
        card_product_token:
          maxLength: 36
          minLength: 1
          type: string
        expedite:
          type: boolean
          default: false
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset'
        fulfillment:
          $ref: '#/components/schemas/FulfillmentRequest'
        name_line_1_numeric_postfix:
          type: boolean
          default: false
        name_line_1_random_postfix:
          type: boolean
          default: false
        token:
          maxLength: 36
          minLength: 1
          type: string
        user_association:
          $ref: '#/components/schemas/user_association'
    bulk_issuance_response:
      required:
        - card_allocation
        - card_product_token
        - fulfillment
        - token
      type: object
      properties:
        card_allocation:
          maximum: 50000
          type: integer
          format: int32
        card_fulfillment_time:
          type: string
          format: date-time
        card_product_token:
          maxLength: 36
          minLength: 1
          type: string
        cards_processed:
          type: integer
          format: int32
        created_time:
          type: string
          format: date-time
        expedite:
          type: boolean
          default: false
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset'
        fulfillment:
          $ref: '#/components/schemas/FulfillmentResponse'
        name_line1_end_index:
          type: integer
          format: int32
        name_line1_start_index:
          type: integer
          format: int32
        name_line_1_numeric_postfix:
          type: boolean
          default: false
        name_line_1_random_postfix:
          type: boolean
          default: false
        provider_ship_date:
          type: string
          format: date-time
        provider_shipping_method:
          type: string
        provider_tracking_number:
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        user_association:
          $ref: '#/components/schemas/user_association'
    business_card_holder_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
        active:
          type: boolean
          description: default = true
          default: false
        attestation_consent:
          type: boolean
          default: false
        attestation_date:
          type: string
          format: date-time
        attester_name:
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          maxLength: 64
          minLength: 0
          type: string
        authentication:
          $ref: '#/components/schemas/Authentication'
        beneficial_owner1:
          $ref: '#/components/schemas/beneficial_owner_response'
        beneficial_owner2:
          $ref: '#/components/schemas/beneficial_owner_response'
        beneficial_owner3:
          $ref: '#/components/schemas/beneficial_owner_response'
        beneficial_owner4:
          $ref: '#/components/schemas/beneficial_owner_response'
        business_name_dba:
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          maxLength: 255
          minLength: 0
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        date_established:
          type: string
          format: date-time
        duns_number:
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          maxLength: 255
          minLength: 0
          type: string
        history:
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationResponseModel'
        in_current_location_since:
          type: string
          format: date-time
        incorporation:
          $ref: '#/components/schemas/business_incorporation_response'
        international_office_locations:
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
        notes:
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: '#/components/schemas/AddressResponseModel'
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: Strong password required
        phone:
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: '#/components/schemas/PrimaryContactInfoModel'
        proprietor_is_beneficial_owner:
          type: boolean
          default: false
        proprietor_or_officer:
          $ref: '#/components/schemas/business_proprietor_response'
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
            - TERMINATED
          type: string
        taxpayer_id:
          maxLength: 255
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        website:
          maxLength: 255
          minLength: 0
          type: string
    business_card_holder_update:
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
        active:
          type: boolean
          default: true
        attestation_consent:
          type: boolean
          default: false
        attestation_date:
          type: string
          format: date-time
        attester_name:
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          maxLength: 64
          minLength: 0
          type: string
        beneficial_owner1:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner2:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner3:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner4:
          $ref: '#/components/schemas/beneficial_owner_request'
        business_name_dba:
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          maxLength: 255
          minLength: 0
          type: string
        date_established:
          type: string
          format: date-time
        duns_number:
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          maxLength: 255
          minLength: 0
          type: string
        history:
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
        in_current_location_since:
          type: string
          format: date-time
        incorporation:
          $ref: '#/components/schemas/business_incorporation'
        international_office_locations:
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        notes:
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: '#/components/schemas/AddressRequestModel'
        password:
          maxLength: 255
          minLength: 0
          type: string
        phone:
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: '#/components/schemas/PrimaryContactInfoModel'
        proprietor_is_beneficial_owner:
          type: boolean
          default: false
        proprietor_or_officer:
          $ref: '#/components/schemas/business_proprietor'
        taxpayer_id:
          maxLength: 255
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        website:
          maxLength: 255
          minLength: 0
          type: string
    business_cardholder:
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
        active:
          type: boolean
          default: true
        attestation_consent:
          type: boolean
          default: false
        attestation_date:
          type: string
          description: YYYY-MM-DDThh:mm:ssZ
          format: date-time
        attester_name:
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          maxLength: 64
          minLength: 0
          type: string
        beneficial_owner1:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner2:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner3:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner4:
          $ref: '#/components/schemas/beneficial_owner_request'
        business_name_dba:
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          maxLength: 255
          minLength: 0
          type: string
        date_established:
          type: string
          format: date-time
        duns_number:
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          maxLength: 255
          minLength: 0
          type: string
        history:
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
        in_current_location_since:
          type: string
          format: date-time
        incorporation:
          $ref: '#/components/schemas/business_incorporation'
        international_office_locations:
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        notes:
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: '#/components/schemas/AddressRequestModel'
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: Strong password required
        phone:
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: '#/components/schemas/PrimaryContactInfoModel'
        proprietor_is_beneficial_owner:
          type: boolean
          default: false
        proprietor_or_officer:
          $ref: '#/components/schemas/business_proprietor'
        taxpayer_id:
          maxLength: 255
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        website:
          maxLength: 255
          minLength: 0
          type: string
    business_incorporation:
      type: object
      properties:
        address_registered_under:
          $ref: '#/components/schemas/AddressRequestModel'
        incorporation_type:
          maxLength: 255
          minLength: 0
          enum:
            - LLC
            - CORPORATION
            - SOLE_PROPRIETORSHIP
            - PARTNERSHIP
            - COOPERATIVE
            - OTHER
          type: string
        is_public:
          type: boolean
          default: false
        name_registered_under:
          maxLength: 255
          minLength: 0
          type: string
        state_of_incorporation:
          maxLength: 255
          minLength: 0
          type: string
        stock_symbol:
          maxLength: 255
          minLength: 0
          type: string
    business_incorporation_response:
      type: object
      properties:
        address_registered_under:
          $ref: '#/components/schemas/AddressResponseModel'
        incorporation_type:
          maxLength: 255
          minLength: 0
          enum:
            - LLC
            - CORPORATION
            - SOLE_PROPRIETORSHIP
            - PARTNERSHIP
            - OTHER
          type: string
        is_public:
          type: boolean
          default: false
        name_registered_under:
          maxLength: 255
          minLength: 0
          type: string
        state_of_incorporation:
          maxLength: 255
          minLength: 0
          type: string
        stock_symbol:
          maxLength: 255
          minLength: 0
          type: string
    business_metadata:
      type: object
      properties:
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the business.
      description: Contains customer-provided information about the business that funded the transaction.
    business_proprietor:
      required:
        - first_name
        - last_name
      type: object
      properties:
        alternative_names:
          type: string
        dob:
          type: string
          format: date-time
        email:
          type: string
        first_name:
          type: string
        home:
          $ref: '#/components/schemas/AddressRequestModel'
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
        last_name:
          type: string
        middle_name:
          type: string
        phone:
          type: string
        ssn:
          type: string
        title:
          type: string
    business_proprietor_response:
      type: object
      properties:
        alternative_names:
          type: string
        dob:
          type: string
          format: date-time
        email:
          type: string
        first_name:
          type: string
        home:
          $ref: '#/components/schemas/AddressResponseModel'
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationResponseModel'
        last_name:
          type: string
        middle_name:
          type: string
        phone:
          type: string
        ssn:
          type: string
        title:
          type: string
    campaign_model:
      required:
        - active
        - name
        - token
      type: object
      properties:
        active:
          type: boolean
          default: true
        end_date:
          type: string
          format: date-time
        name:
          maxLength: 40
          minLength: 0
          type: string
        start_date:
          type: string
          format: date-time
        store_tokens:
          maxItems: 36
          minItems: 0
          type: array
          items:
            type: string
          description: Enclose tokens in brackets
        token:
          maxLength: 36
          minLength: 1
          type: string
    campaign_update_model:
      type: object
      properties:
        active:
          type: boolean
          default: false
        end_date:
          type: string
          description: yyyy-MM-dd
        name:
          maxLength: 40
          minLength: 0
          type: string
        start_date:
          type: string
          description: yyyy-MM-dd
        store_tokens:
          maxItems: 36
          minItems: 0
          type: array
          items:
            type: string
          description: enclose tokens in brackets
    card_acceptor_model:
      type: object
      properties:
        address:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        country:
          type: string
        customer_service_phone:
          type: string
        ecommerce_security_level_indicator:
          type: string
        geographic_coordinates:
          type: string
        mcc:
          maxLength: 5
          minLength: 0
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
        partial_approval_capable:
          type: boolean
          default: false
        phone:
          type: string
        service_geographic_coordinates:
          type: string
        state:
          type: string
        url:
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
    card_holder_address_model:
      required:
        - address_1
        - city
        - country
        - first_name
        - last_name
        - state
      type: object
      properties:
        active:
          type: boolean
          description: Specifies whether the address is active.
          default: true
        address_1:
          maxLength: 255
          minLength: 0
          type: string
          description: Street name and number of the address.
        address_2:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional address information.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business account holder.\nThis token is required if a `user_token` is not specified."
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: City of the address.
        country:
          maxLength: 40
          minLength: 1
          type: string
          description: Country of the address.
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: First name or given name of the account holder.
        is_default_address:
          type: boolean
          description: "A value of `true` specifies that this address is the default address used by the account holder's funding source.\nIf this is the account holder's only address, it is used as the default regardless of this field's setting."
          default: false
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Last name or family name of the account holder.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: Telephone number of the account holder.
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal code of the address.
        state:
          maxLength: 2
          minLength: 0
          type: string
          description: "Two-character state, province, or territorial abbreviation.\n\nFor a complete list of valid state and province abbreviations, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the address.\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user account holder.\nThis token is required if a `business_token` is not specified."
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: "United States ZIP code.\nThis field is required if `postal_code` is not specified."
    card_holder_address_update_model:
      type: object
      properties:
        active:
          type: boolean
          description: Specifies whether the address is active.
          default: true
        address_1:
          maxLength: 255
          minLength: 0
          type: string
          description: Street name and number of the address.
        address_2:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional address information.
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: City of the address.
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: Country of the address.
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: First name or given name of the account holder.
        is_default_address:
          type: boolean
          description: "A value of `true` specifies that this address is the default address used by the account holder's funding source.\nIf this is the account holder's only address, it is used as the default regardless of this field's setting."
          default: false
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Last name or family name of the account holder.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: Telephone number of the account holder.
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal code of the address.
        state:
          maxLength: 2
          minLength: 0
          type: string
          description: "Two-character state, province, or territorial abbreviation.\n\nFor a complete list, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>."
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: United States ZIP code of the address.
    card_holder_model:
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Associates the specified account holder group with the cardholder.\n\nSend a `GET` request to `/accountholdergroups` to retrieve account holder group tokens."
        active:
          type: boolean
          description: "Specifies if the cardholder is in the `ACTIVE` state on the Marqeta platform.\n\n*NOTE:* Do not set the value of the `user.active` field directly.\nInstead, use the `/usertransitions` endpoints to transition user resources between statuses.\nFor more information on status changes, see <</core-api/user-transitions#postUsertransitions, Create User Transition>>."
          default: true
        address1:
          maxLength: 255
          minLength: 0
          type: string
          description: "Cardholder's address.\n\n*NOTE:* Required for KYC verification (US-based cardholders only).\nCannot perform KYC if set to a PO Box."
        address2:
          maxLength: 255
          minLength: 0
          type: string
          description: "Additional address information for the cardholder.\n\n*NOTE:* Cannot perform KYC if set to a PO Box."
        birth_date:
          type: string
          description: "Cardholder's date of birth.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: "City where the cardholder resides.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        company:
          maxLength: 255
          minLength: 0
          type: string
          description: Company name.
        corporate_card_holder:
          type: boolean
          description: Specifies if the cardholder holds a corporate card.
          default: false
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: "Country where the cardholder resides.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: "Valid email address of the cardholder.\n\nThis value must be unique among users.\n\n*NOTE:* Required for KYC verification by certain banks (US-based cardholders only).\nTo determine if you must provide an email address, contact your Marqeta representative."
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Cardholder's first name.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        gender:
          maxLength: 1
          minLength: 0
          enum:
            - F
            - M
          type: string
          description: Gender of the cardholder.
        honorific:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Cardholder''s title or prefix: Dr., Miss, Mr., Ms., and so on.'
        id_card_expiration_date:
          type: string
          description: Expiration date of the cardholder's identification card.
        id_card_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's identification card number.
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          description: One or more objects containing identifications associated with the cardholder.
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
          description: Cardholder's IP address.
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Cardholder's last name.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
        middle_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's middle name.
        nationality:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's nationality.
        notes:
          maxLength: 255
          minLength: 0
          type: string
          description: Any additional information pertaining to the cardholder.
        parent_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the parent user or business resource.\nSend a `GET` request to `/users` to retrieve user resource tokens or to `/businesses` to retrieve business resource tokens.\n\nRequired if `uses_parent_account = true`.\nThis user or business is configured as the parent of the current user."
        passport_expiration_date:
          type: string
          description: Expiration date of the cardholder's passport.
        passport_number:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's passport number.
        password:
          maxLength: 255
          minLength: 0
          type: string
          description: "Password to the cardholder's user account on the Marqeta platform.\n\n* Must contain at least one numeral +\n* Must contain at least one lowercase letter +\n* Must contain at least one uppercase letter +\n* Must contain at least one of these symbols: `@ # $ % ! ^ & * ( ) \\ _ + ~ ` - = [ ] { } , ; : ' \" , . / < > ?`"
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: "Telephone number of the cardholder (including area code), prepended by the `+` symbol and the 1- to 3-digit country calling code.\nDo not include hyphens, spaces, or parentheses.\n\n*NOTE:* Required for KYC verification by certain banks (US-based cardholders only).\nTo determine if you must provide a phone number, contact your Marqeta representative."
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: "Postal code of the cardholder's address.\n\n*NOTE:* Required for KYC verification (US-based cardholders only)."
        ssn:
          type: string
          description: Cardholder's Social Security Number (SSN).
        state:
          maxLength: 32
          minLength: 0
          type: string
          description: "State or province where the cardholder resides.\n\n*NOTE:* <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid two-character abbreviation>> required for KYC verification (US-based cardholders only)."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the cardholder.\nIf you do not include a token, the system generates one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        uses_parent_account:
          type: boolean
          description: "Indicates whether the child shares balances with the parent (`true`), or the child's balances are independent of the parent (`false`).\n\nIf set to `true`, you must also include a `parent_token` in the request.\nThis value cannot be updated."
          default: false
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
          description: Specifies the status of the cardholder on the Marqeta platform.
      description: Contains information about a cardholder.
    card_life_cycle:
      type: object
      properties:
        activate_upon_issue:
          type: boolean
          default: false
        card_service_code:
          type: integer
          format: int32
          default: 101
        expiration_offset:
          $ref: '#/components/schemas/ExpirationOffset'
        reloadability:
          enum:
            - SINGLE_USE_VIRTUAL
            - NON_RELOADABLE
            - RELOADABLE
          type: string
        update_expiration_upon_activation:
          type: boolean
          default: false
    card_metadata:
      type: object
      properties:
        metadata:
          type: object
          additionalProperties:
            type: string
    card_options:
      type: object
      properties:
        billing_address:
          $ref: '#/components/schemas/BillingAddress'
        card_present:
          type: boolean
          default: false
        cvv:
          maxLength: 3
          minLength: 0
          type: string
        expiration:
          maxLength: 4
          minLength: 4
          type: string
    card_personalization:
      required:
        - text
      type: object
      properties:
        carrier:
          $ref: '#/components/schemas/carrier'
        images:
          $ref: '#/components/schemas/images'
        perso_type:
          enum:
            - EMBOSS
            - LASER
            - FLAT
          type: string
          description: Specifies the type of card personalization.
        text:
          $ref: '#/components/schemas/text'
      description: Specifies personalized attributes to be added to the card.
    card_product_config:
      type: object
      properties:
        card_life_cycle:
          $ref: '#/components/schemas/card_life_cycle'
        clearing_and_settlement:
          $ref: '#/components/schemas/clearing_and_settlement'
        digital_wallet_tokenization:
          $ref: '#/components/schemas/DigitalWalletTokenization'
        fulfillment:
          $ref: '#/components/schemas/card_product_fulfillment'
        jit_funding:
          $ref: '#/components/schemas/jit_funding'
        poi:
          $ref: '#/components/schemas/poi'
        selective_auth:
          $ref: '#/components/schemas/selective_auth'
        special:
          $ref: '#/components/schemas/Special'
        transaction_controls:
          $ref: '#/components/schemas/transaction_controls'
    card_product_fulfillment:
      required:
        - card_personalization
      type: object
      properties:
        all_zero_card_security_code:
          type: boolean
          default: false
        allow_card_creation:
          type: boolean
          default: true
        bin_prefix:
          type: string
        bulk_ship:
          type: boolean
          default: false
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        enable_offline_pin:
          type: boolean
          default: false
        fulfillment_provider:
          enum:
            - PERFECTPLASTIC
            - ARROWEYE
            - IDEMIA
            - IDEMIA_UK
            - IDEMIA_FR
            - IDEMIA_CZ
            - IDEMIA_APAC
            - IDEMIA_PL
            - IDEMIA_AU
            - IDEMIA_LA
            - GEMALTO
            - NITECREST
            - OBERTHUR
            - ALLPAY
          type: string
          default: PERFECTPLASTIC
        package_id:
          maxLength: 50
          minLength: 1
          type: string
          default: '0'
        pan_length:
          type: string
          default: '16'
        payment_instrument:
          enum:
            - PHYSICAL_MSR
            - PHYSICAL_ICC
            - PHYSICAL_CONTACTLESS
            - PHYSICAL_COMBO
            - VIRTUAL_PAN
          type: string
          default: PHYSICAL_MSR
        shipping:
          $ref: '#/components/schemas/shipping'
        uppercase_name_lines:
          type: boolean
          default: true
    card_product_request:
      required:
        - name
        - start_date
      type: object
      properties:
        active:
          type: boolean
          default: false
        config:
          $ref: '#/components/schemas/card_product_config'
        end_date:
          type: string
          description: yyyy-MM-dd
          format: date
        name:
          maxLength: 40
          minLength: 1
          type: string
        start_date:
          type: string
          description: yyyy-MM-dd
          format: date
        token:
          maxLength: 36
          minLength: 1
          type: string
    card_product_response:
      required:
        - created_time
        - last_modified_time
        - name
        - start_date
      type: object
      properties:
        active:
          type: boolean
          default: false
        config:
          $ref: '#/components/schemas/card_product_config'
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        end_date:
          type: string
          description: yyyy-MM-dd
          format: date
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        name:
          maxLength: 40
          minLength: 1
          type: string
        start_date:
          type: string
          description: yyyy-MM-dd
          format: date
        token:
          maxLength: 36
          minLength: 1
          type: string
    card_product_update_model:
      type: object
      properties:
        active:
          type: boolean
          default: false
        config:
          $ref: '#/components/schemas/card_product_config'
        end_date:
          type: string
          description: yyyy-MM-dd
          format: date
        name:
          maxLength: 40
          minLength: 0
          type: string
        start_date:
          type: string
          description: yyyy-MM-dd
          format: date
    card_request:
      required:
        - card_product_token
        - user_token
      type: object
      properties:
        activation_actions:
          $ref: '#/components/schemas/activation_actions'
        bulk_issuance_token:
          type: string
        card_product_token:
          maxLength: 36
          minLength: 1
          type: string
        expedite:
          type: boolean
          default: false
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset'
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentRequest'
        metadata:
          type: object
          additionalProperties:
            type: string
        new_pan_from_card_token:
          maxLength: 36
          minLength: 0
          type: string
        reissue_pan_from_card_token:
          maxLength: 36
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        translate_pin_from_card_token:
          maxLength: 36
          minLength: 0
          type: string
        user_token:
          maxLength: 36
          minLength: 1
          type: string
    card_response:
      required:
        - barcode
        - card_product_token
        - created_time
        - expiration
        - expiration_time
        - fulfillment_status
        - last_four
        - last_modified_time
        - pan
        - pin_is_set
        - state
        - state_reason
        - token
        - user_token
      type: object
      properties:
        activation_actions:
          $ref: '#/components/schemas/activation_actions'
        barcode:
          type: string
          description: 'Barcode printed on the card, expressed as numerals.'
        bulk_issuance_token:
          type: string
          description: Unique identifier of the bulk card order.
        card_product_token:
          type: string
          description: Unique identifier of the card product.
        chip_cvv_number:
          type: string
          description: Three-digit card verification value (ICVV) stored on the chip of the card.
        contactless_exemption_counter:
          type: integer
          description: "Running count of the contactless transactions successfully completed since the last strong customer authentication (SCA) challenge was issued.\nYou can limit the number of contactless transactions that can be performed without issuing an SCA challenge at the card product level.\n\nFor more information about strong customer authentication, see <</core-api/card-products, Card Products>>."
          format: int32
        contactless_exemption_total_amount:
          type: number
          description: "Running total of the money spent in contactless transactions successfully completed since the last strong customer authentication (SCA) challenge was issued.\nYou can limit the total amount that can be spent in contactless transactions without issuing an SCA challenge at the card product level.\n\nFor more information about strong customer authentication, see <</core-api/card-products, Card Products>>."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        cvv_number:
          type: string
          description: Three-digit card verification value (CVV2 or CVC2) printed on the card.
        expedite:
          type: boolean
          description: A value of `true` indicates that you requested expedited processing of the card from your card fulfillment provider.
          default: false
        expiration:
          type: string
          description: Expiration date in `MMyy` format.
        expiration_time:
          type: string
          description: 'Expiration date and time, in UTC.'
          format: date-time
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentResponse'
        fulfillment_status:
          enum:
            - ISSUED
            - ORDERED
            - REORDERED
            - REJECTED
            - SHIPPED
            - DELIVERED
            - DIGITALLY_PRESENTED
          type: string
          description: "Card fulfillment status:\n\n* *ISSUED:* Initial state of all newly created/issued cards.\n* *ORDERED:* Card ordered through the card fulfillment provider.\n* *REORDERED:* Card reordered through the card fulfillment provider.\n* *REJECTED:* Card rejected by the card fulfillment provider.\n* *SHIPPED:* Card shipped by the card fulfillment provider.\n* *DELIVERED:* Card delivered by the card fulfillment provider.\n* *DIGITALLY_PRESENTED:* Card digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards."
        instrument_type:
          enum:
            - PHYSICAL_MSR
            - PHYSICAL_ICC
            - PHYSICAL_CONTACTLESS
            - PHYSICAL_COMBO
            - VIRTUAL_PAN
          type: string
          description: "Instrument type of the card:\n\n* *PHYSICAL_MSR:* A physical card with a magnetic stripe. This is the default physical card type.\n* *PHYSICAL_ICC:* A physical card with an integrated circuit, or \"chip.\"\n* *PHYSICAL_CONTACTLESS:* A physical card that uses radio frequency identification (RFID) or near-field communication (NFC) to enable payment over a secure radio interface.\n* *PHYSICAL_COMBO:* A physical card with a chip that also supports contactless payments.\n* *VIRTUAL_PAN:* A virtual card with a primary account number (PAN)."
        last_four:
          type: string
          description: Last four digits of the card primary account number (PAN).
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
        new_pan_from_card_token:
          type: string
          description: Reissues the specified card (known as the "source" card) with a new primary account number (PAN).
        pan:
          type: string
          description: Primary account number (PAN) of the card.
        pin_is_set:
          type: boolean
          description: Specifies if the personal identification number (PIN) has been set for the card.
          default: false
        reissue_pan_from_card_token:
          type: string
          description: Reissues the specified card (known as the "source" card).
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNSUPPORTED
            - UNACTIVATED
            - LIMITED
          type: string
          description: Indicates the state of the card.
        state_reason:
          type: string
          description: "Descriptive reason for why the card is in its current state.\nFor example, \"Card activated by cardholder\"."
        token:
          type: string
          description: Unique identifier of the card.
        translate_pin_from_card_token:
          type: string
          description: Copies the personal identification number (PIN) from the specified source card to the newly created card.
        user_token:
          type: string
          description: Unique identifier of the cardholder.
      description: Contains information about the card used in the transaction.
    card_security_code_verification:
      required:
        - response
        - type
      type: object
      properties:
        response:
          $ref: '#/components/schemas/response'
        type:
          enum:
            - CVV1
            - CVV2
            - ICVV
            - DCVV
          type: string
          description: "Indicates the type of security code.\nCan have these possible values:\n\n* *CVV1* – the security code stored in the magnetic stripe on the card.\n* *CVV2* – the security code printed on the card.\n* *ICVV* – the security code stored on the chip of the card.\n* *DCVV* – a dynamic security code used in some contactless payments when a card or device is tapped against the card reader."
      description: Contains information about a verification check performed on the card's security code.
    card_swap_hash:
      required:
        - new_card_token
        - previous_card_token
      type: object
      properties:
        new_card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the new card resource to which the digital wallet tokens are assigned.
        previous_card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the existing card resource that has digital wallet tokens assigned to it.
      description: Contains identifiers for swapping digital wallet tokens between cards.
    card_transition_request:
      required:
        - card_token
        - channel
        - state
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        reason:
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
        state:
          enum:
            - ACTIVE
            - LIMITED
            - SUSPENDED
            - TERMINATED
          type: string
        sync_state_with_dwts:
          type: boolean
        token:
          maxLength: 36
          minLength: 1
          type: string
        validations:
          $ref: '#/components/schemas/ValidationsRequest'
    card_transition_response:
      required:
        - barcode
        - card_product_token
        - card_token
        - channel
        - expiration
        - expiration_time
        - fulfillment_status
        - last_four
        - pan
        - pin_is_set
        - state
        - token
        - type
        - user_token
      type: object
      properties:
        barcode:
          type: string
        bulk_issuance_token:
          type: string
        card:
          $ref: '#/components/schemas/card_metadata'
        card_product_token:
          maxLength: 36
          minLength: 0
          type: string
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        created_time:
          type: string
          format: date-time
        expedite:
          type: boolean
          default: false
        expiration:
          type: string
        expiration_time:
          type: string
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentRequest'
        fulfillment_status:
          enum:
            - ISSUED
            - ORDERED
            - REJECTED
            - SHIPPED
            - DELIVERED
            - DIGITALLY_PRESENTED
          type: string
        last_four:
          type: string
        new_pan_from_card_token:
          type: string
        pan:
          type: string
        pin_is_set:
          type: boolean
          default: false
        reason:
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
        reissue_pan_from_card_token:
          type: string
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNACTIVATED
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        type:
          enum:
            - fulfillment.issued
            - state.activated
            - state.suspended
            - state.reinstated
            - state.terminated
            - state.limited
            - fulfillment.ordered
            - fulfillment.rejected
            - fulfillment.shipped
            - fulfillment.delivered
            - fulfillment.digitally_presented
          type: string
        user:
          $ref: '#/components/schemas/cardholder_metadata'
        user_token:
          maxLength: 36
          minLength: 1
          type: string
        validations:
          $ref: '#/components/schemas/ValidationsResponse'
    card_update_request:
      required:
        - token
      type: object
      properties:
        expedite:
          type: boolean
          default: false
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentRequest'
        metadata:
          type: object
          additionalProperties:
            type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          maxLength: 36
          minLength: 1
          type: string
    cardholder_authentication_data:
      type: object
      properties:
        acquirer_exemption:
          type: array
          items:
            type: string
          description: "Indicates 3D Secure authentication exemptions from the acquirer.\nThis array is returned if it is included in the transaction data from the card network."
        authentication_method:
          type: string
          description: Specifies the 3D Secure authentication method.
        authentication_status:
          type: string
          description: "Specifies the status of the 3D Secure authentication:\n\n* `ATTEMPTED`: Indicates that 3D Secure authentication was requested and processed by the card network.\n* `DATA_SHARE_EXEMPTED`: Indicates that 3D Secure authentication was for information only and exempted.\n* `EXEMPTED`: Indicates that 3D Secure authentication was requested but the challenge was exempted.\n* `EXEMPTION_CLAIMED`: Indicates that 3D Secure authentication was exempted because acquirer transaction risk analysis (TRA) was already performed.\n* `SCA_EXEMPTION`: Indicates that 3D Secure authentication was exempted because strong customer authentication (SCA) was already performed.\n* `SUCCESSFUL`: Indicates that 3D Secure authentication was successful.\n* `SUCCESSFUL_NON_PAYMENT`: Indicates that 3D Secure non-payment authentication was successful.\n* `THREEDS_REQUESTER_DATA_SHARE_EXEMPTION`: Status is deprecated and will be removed from a future release of the Marqeta platform.\nAfter June 2023, use `DATA_SHARE_EXEMPTION` instead.\n* `THREEDS_REQUESTER_SCA_EXEMPTION`: Status is deprecated and will be removed in a June 2023 release of the Marqeta platform.\nAfter June 2023, use `SCA_EXEMPTION` instead.\n* `THREEDS_REQUESTER_TRA_EXEMPTION`: Status is deprecated and will be removed in a June 2023 release of the Marqeta platform.\nAfter June 2023, use `EXEMPTION_CLAIMED` instead.\n* `UNAVAILABLE`:\n** For Visa transactions, this status indicates that 3D Secure authentication was requested, but Marqeta's access control server (ACS) was not available.\n** For Mastercard transactions, this status indicates that 3D Secure authentication was not available."
        cavv_authentication_amount:
          type: string
          description: "Authentication amount from the cardholder authentication verification value (CAVV) used to validate an authorization.\nThis field is returned if it is included in the transaction data from the card network.\n\nTo enable this field, contact your Marqeta representative."
        electronic_commerce_indicator:
          type: string
          description: "Status of the 3D Secure or digital wallet token transaction authentication attempt, as provided by a transaction participant.\n\n* `authentication_attempted`: Merchant attempted to authenticate, but either the issuer or the cardholder does not participate in 3D Secure or card tokenization.\n* `authentication_successful`: Cardholder authentication successful.\n* `no_authentication`: Non-authenticated e-commerce transaction."
        issuer_exemption:
          type: string
          description: "Indicates a 3D Secure authentication exemption from the issuer.\nThis field is returned if it is included in the transaction data from the card network."
        raw_cavv_data:
          type: string
          description: "Raw cardholder authentication verification value provided by the card network.\nThis field is returned if it is included in the transaction data from the card network.\n\nTo enable this field, contact your Marqeta representative."
        three_ds_data_quality:
          type: string
        three_ds_message_version:
          type: string
          description: Specifies the 3D Secure message version used for authentication.
        three_ds_reference_id:
          type: string
        threeds_reference_id:
          type: string
          description: 'The 3D Secure authentication indicator, as provided by the Mastercard card network.'
        verification_result:
          type: string
          description: "Result of cardholder authentication verification value (CAVV) or accountholder authentication value (AAV) verification performed by the card network.\n\n* `failed`\n* `not_present`\n* `not_provided`\n* `not_verified`\n* `not_verified_authentication_outage`\n* `verified`\n* `verified_amount_checked`\n* `verified_amount_greater_than_20_percent`: For Mastercard AAV verification, indicates that the original authentication amount and final authorization amount are mismatched, and that the final authorization amount exceeds the original authentication amount by more than 20%.\nThis 20% margin falls outside Mastercard's suggested tolerance for what a European cardholder might reasonably expect when the total transaction amount is not known in advance.\n* `verified_amount_less_than_20_percent`: For Mastercard AAV verification, indicates that the original authentication amount and final authorization amount are mismatched, and that the final authorization amount exceeds the original authentication amount by 20% or less.\nThis 20% margin falls within Mastercard's suggested tolerance for what a European cardholder might reasonably expect when the total transaction amount is not known in advance.\n* `not_verified_mac_key_validation_passed`: For Mastercard only.\nThis field is present when the transaction passes MAC key validation but Dynamic Linking was not performed by the Mastercard card network due to system connectivity issues.\n* `not_verified_mac_key_validation_failed`: For Mastercard only.\nThis field is present when the transaction fails MAC key validation and Dynamic Linking was not performed by the Mastercard card network due to system connectivity issues."
        verification_value_created_by:
          type: string
          description: Transaction participant who determined the verification result.
      description: "Contains authentication data for 3D Secure and digital wallet token transactions:\n\n* `electronic_commerce_indicator` – The level of verification performed.\n* `verification_result` – The result of the verification.\n* `verification_value_created_by` – The transaction participant who determined the verification result.\n* `three_ds_message_version` – The 3D Secure message version used for authentication.\n* `authentication_method` – The 3D Secure authentication method.\n* `authentication_status` – The 3D Secure authentication status.\n* `acquirer_exemption` – Indicates a 3D Secure authentication exemption from the acquirer.\n* `issuer_exemption` – Indicates a 3D Secure authentication exemption from the issuer.\n* `cavv_authentication_amount` – CAVV authentication amount.\n* `raw_cavv_data` – Raw CAVV data provided by the card network."
    cardholder_balance:
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
      properties:
        available_balance:
          type: number
          description: "Ledger balance minus any authorized transactions that have not yet cleared.\nAlso known as the cardholder's purchasing power.\nWhen using JIT Funding, this balance is usually equal to $0.00."
        balances:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/cardholder_balance'
          description: 'Contains GPA balance information, organized by currency code.'
        cached_balance:
          type: number
          description: Not currently in use.
        credit_balance:
          type: number
          description: Not currently in use.
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        impacted_amount:
          type: number
          description: Balance change based on the amount of the transaction.
        last_updated_time:
          type: string
          description: 'Date and time when the resource was last updated, in UTC.'
          format: date-time
        ledger_balance:
          type: number
          description: "When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.\nWhen using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared."
        pending_credits:
          type: number
          description: 'ACH loads that have been accepted, but for which the funding time has not yet elapsed.'
      description: Returns general purpose account (GPA) balances for a user or business.
    cardholder_balances:
      required:
        - gpa
        - links
      type: object
      properties:
        gpa:
          $ref: '#/components/schemas/cardholder_balance'
        links:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/link'
    cardholder_metadata:
      type: object
      properties:
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the cardholder.
      description: Contains customer-provided information about the cardholder that performed the transaction.
    cardholder_note_request_model:
      required:
        - created_by
        - description
      type: object
      properties:
        created_by:
          maxLength: 255
          minLength: 0
          type: string
        created_by_user_role:
          enum:
            - USER
            - ADMIN
            - BANK_USER
            - BANK_ADMIN
            - MARQETA_PD
            - MARQETA_ADMIN
          type: string
        description:
          type: string
        private:
          type: boolean
          default: false
        token:
          maxLength: 36
          minLength: 1
          type: string
    cardholder_note_response_model:
      required:
        - created_by
        - description
      type: object
      properties:
        created_by:
          maxLength: 255
          minLength: 0
          type: string
        created_by_user_role:
          enum:
            - USER
            - ADMIN
            - BANK_USER
            - BANK_ADMIN
            - MARQETA_PD
            - MARQETA_ADMIN
          type: string
        created_time:
          type: string
          format: date-time
        description:
          type: string
        last_modified_time:
          type: string
          format: date-time
        private:
          type: boolean
          default: false
        token:
          maxLength: 36
          minLength: 1
          type: string
    cardholder_note_update_request_model:
      required:
        - description
      type: object
      properties:
        description:
          type: string
    carrier:
      type: object
      properties:
        logo_file:
          type: string
          description: Specifies an image to display on the card carrier.
        logo_thumbnail_file:
          type: string
          description: Specifies a thumbnail-sized rendering of the image specified in the `logo_file` field.
        message_file:
          type: string
          description: Specifies a text file containing a custom message to print on the card carrier.
        message_line:
          type: string
          description: Specifies a custom message that appears on the card carrier.
        template_id:
          type: string
          description: Specifies the card carrier template to use.
      description: Specifies attributes of the card carrier.
    chargeback_allocation_ack_request:
      required:
        - chargeback_token
      type: object
      properties:
        chargeback_token:
          type: string
        token:
          type: string
    chargeback_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - credit
            - name
          type: object
          properties:
            credit:
              type: boolean
            name:
              type: string
    chargeback_request:
      required:
        - amount
        - channel
        - transaction_token
      type: object
      properties:
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        channel:
          enum:
            - GATEWAY
            - GATEWAY_AUTOMATED
            - ISSUER
            - ISSUER_AUTOMATED
          type: string
        credit_user:
          type: boolean
          default: true
        memo:
          maxLength: 1024
          minLength: 1
          type: string
        pre_initiated:
          type: boolean
        reason_code:
          type: string
          description: Either 'reason_code' or 'reason_description' is required
        reason_description:
          enum:
            - SERVICE_NOT_PROVIDED_MERCHANDISE_NOT_RECEIVED
            - CANCELLED_RECURRING_TRANSACTION
            - NOT_AS_DESCRIBED_OR_DEFECTIVE_MERCHANDISE
            - FRAUD_MULTIPLE_TRANSACTIONS
            - FRAUD_TRANSACTION
            - NO_AUTHORIZATION
            - LATE_PRESENTMENT
            - TRANSACTION_NOT_RECOGNIZED
            - INCORRECT_CURRENCY
            - INCORRECT_TRANSACTION_CODE
            - INCORRECT_CURRENCY_OR_TRANSACTION_CODE
            - INCORRECT_TRANSACTION_AMOUNT
            - INCORRECT_ACCOUNT_NUMBER
            - INCORRECT_TRANSACTION_AMOUNT_OR_ACCOUNT_NUMBER
            - NOT_AUTHORIZED_CARD_PRESENT
            - NOT_AUTHORIZED_CARD_ABSENT
            - CREDIT_NOT_PROCESSED
            - NON_RECEIPT_OF_CASH_OR_LOAD_TRANSACTION_VALUE_AT_ATM
            - DUPLICATE_PROCESSING_OR_PAID_BY_OTHER_MEANS
          type: string
          description: Either 'reason_description' or 'reason_code' is required
        regulation_type:
          type: string
        status:
          enum:
            - ARBITRATION
            - CASE_LOST
            - CASE_WON
            - INITIATED
            - NETWORK_REJECTED
            - PREARBITRATION
            - PRE_INITIATED
            - REPRESENTMENT
            - WITHDRAWN
            - WRITTEN_OFF_ISSUER
            - WRITTEN_OFF_PROGRAM
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        transaction_token:
          maxLength: 36
          minLength: 1
          type: string
    chargeback_response:
      required:
        - amount
        - channel
        - created_time
        - credit_user
        - last_modified_time
        - network
        - state
        - token
        - transaction_token
      type: object
      properties:
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: Amount of the chargeback.
        channel:
          enum:
            - GATEWAY
            - GATEWAY_AUTOMATED
            - ISSUER
            - ISSUER_AUTOMATED
          type: string
          description: Channel the chargeback came through.
        created_time:
          type: string
          description: "Date and time when the chargeback was created.\nNot returned for transactions when the associated chargeback is in the `INITIATED` state."
          format: date-time
        credit_user:
          type: boolean
          description: Whether to credit the user for the chargeback amount.
          default: false
        last_modified_time:
          type: string
          description: "Date and time when the chargeback was last modified.\nNot returned for transactions when the associated chargeback is in the `INITIATED` state."
          format: date-time
        memo:
          maxLength: 1024
          minLength: 1
          type: string
          description: Additional comments about the chargeback.
        network:
          enum:
            - MARQETA
            - DISCOVER
            - MASTERCARD
            - PULSE
            - VISA
          type: string
          description: Network handling the chargeback.
        network_case_id:
          maxLength: 50
          minLength: 0
          type: string
          description: Network-assigned identifier of the chargeback.
        reason_code:
          type: string
          description: Identifies the standardized reason for the chargeback.
        state:
          enum:
            - INITIATED
            - REPRESENTMENT
            - PREARBITRATION
            - ARBITRATION
            - CASE_WON
            - CASE_LOST
            - NETWORK_REJECTED
            - WITHDRAWN
          type: string
          description: State of the case.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the chargeback.
        transaction_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the transaction being charged back.
      description: Contains the chargeback object associated with this transaction if a chargeback has been initiated.
    chargeback_transition_request:
      required:
        - chargeback_token
        - state
      type: object
      properties:
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
          description: Representment or prearbitration amount; this is for transitioning to Representment or Prearbitration only
        chargeback_token:
          maxLength: 36
          minLength: 1
          type: string
        reason:
          maxLength: 1024
          minLength: 1
          type: string
        regulation_type:
          type: string
        state:
          enum:
            - REPRESENTMENT
            - PREARBITRATION
            - PREARB_RESPONDED
            - ARBITRATION
            - CASE_WON
            - CASE_LOST
            - WRITTEN_OFF_ISSUER
            - WRITTEN_OFF_PROGRAM
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        type:
          type: string
    chargeback_transition_response:
      required:
        - channel
        - chargeback_token
        - created_time
        - last_modified_time
        - previous_state
        - state
        - token
        - type
      type: object
      properties:
        amount:
          type: number
        channel:
          enum:
            - GATEWAY
            - GATEWAY_AUTOMATED
            - ISSUER
            - ISSUER_AUTOMATED
          type: string
        chargeback_token:
          maxLength: 36
          minLength: 1
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        previous_state:
          enum:
            - INITIATED
            - REPRESENTMENT
            - PREARBITRATION
            - ARBITRATION
            - CASE_WON
            - CASE_LOST
            - NETWORK_REJECTED
            - WITHDRAWN
          type: string
        reason:
          maxLength: 1024
          minLength: 0
          type: string
        state:
          enum:
            - INITIATED
            - REPRESENTMENT
            - PREARBITRATION
            - ARBITRATION
            - CASE_WON
            - CASE_LOST
            - NETWORK_REJECTED
            - WITHDRAWN
            - WRITTEN_OFF_ISSUER
            - WRITTEN_OFF_PROGRAM
          type: string
        token:
          maxLength: 36
          minLength: 0
          type: string
        transaction_token:
          maxLength: 36
          minLength: 0
          type: string
        type:
          enum:
            - initiated
            - representment
            - prearbitration
            - arbitration
            - case.won
            - case.lost
            - network.rejected
            - written.off.issuer
            - written.off.program
          type: string
    clearing_and_settlement:
      type: object
      properties:
        overdraft_destination:
          enum:
            - GPA
            - MSA
            - MERCHANT_CAMPAIGN_ACCOUNT
            - GLOBAL_OVERDRAFT_ACCOUNT
          type: string
          description: Default value of GPA does not apply when JIT funding is enabled
          default: GPA
    click_to_pay_check_eligibility_response:
      type: object
      properties:
        image_assets:
          type: array
          items:
            $ref: '#/components/schemas/media_content'
          description: List of image assets for the Click to Pay logo if `include_asset` is set to `true` in the request.
        is_eligible:
          type: boolean
          description: "Indicates whether the `bin_prefix` is eligible for Click to Pay.\n\n* `true`: The `bin_prefix` is eligible for Click to Pay.\n* `false`: The `bin_prefix` is not eligible for Click to Pay."
          default: false
    click_to_pay_enroll_request:
      required:
        - card_token
        - locale_country
        - locale_language
        - user_details
        - user_token
      type: object
      properties:
        basic_auth_password:
          maxLength: 50
          minLength: 20
          type: string
          description: "Basic auth password to access your callback URL if authentication type is basic.\nIf authentication type is basic, both username and password are required."
        basic_auth_username:
          maxLength: 50
          minLength: 1
          type: string
          description: "Basic auth username to access your callback URL if authentication type is basic.\nIf authentication type is basic, both username and password are required."
        callback_authentication_type:
          enum:
            - OAUTH_BEARER_TOKEN
            - BASIC_AUTH
          type: string
          description: "The type of authentication required for the callback URL.\n\n* `OAUTH_BEARER_TOKEN`: OAuth bearer token for the callback URL.\n* `BASIC_AUTH`: Basic auth username and password for the callback URL."
        callback_secret_for_signature:
          maxLength: 50
          minLength: 20
          type: string
          description: "Randomly chosen string used for implementing HMAC-SHA1.\n\nHMAC-SHA1 provides an added layer of security by authenticating the message and validating message integrity.\nUsing this functionality requires that your callback endpoint verify the message signature.\nFor information about implementing this functionality, see <</developer-guides/signature-verification, Signature Verification>>."
        callback_url:
          type: string
          description: The URL to which the Click to Pay request status is sent via webhooks.
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card resource.
        locale_country:
          maxLength: 2
          minLength: 2
          type: string
          description: "The user-provided country code.\nThe ISO 3166 country code is a two-letter country code that represents a country.\nFor example, the numeric code for the United States is `US`.\n\nThe ISO maintains the link:https://www.iso.org/iso-3166-country-codes.html[ISO-3166 country codes, window=\"_blank\"]."
        locale_language:
          maxLength: 2
          minLength: 2
          type: string
          description: "The user-provided language choice.\nThe ISO 639-2 language code is a two-letter country code that represents a language.\n\nThe ISO maintains the link:https://id.loc.gov/vocabulary/iso639-2.html[ISO 639-2 language codes, window=\"_blank\"]."
        oauth_bearer_token:
          type: string
          description: OAuth bearer token to access your callback URL if the `callback_authentication_type` is `OAUTH_BEARER_TOKEN`.
        user_details:
          type: array
          items:
            $ref: '#/components/schemas/click_to_pay_enroll_request_user_details'
          description: User's email address and mobile phone number with country code.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the cardholder.
    click_to_pay_enroll_request_user_details:
      required:
        - email_address
        - mobile_number
      type: object
      properties:
        email_address:
          type: string
          description: User's email address.
        mobile_number:
          $ref: '#/components/schemas/click_to_pay_enroll_request_user_mobile_number'
      description: User's email address and mobile phone number with country code.
    click_to_pay_enroll_request_user_mobile_number:
      required:
        - country_code
        - phone_number
      type: object
      properties:
        country_code:
          type: string
          description: User's mobile phone number country code only.
        phone_number:
          type: string
          description: User's mobile phone number without country code.
      description: User's mobile phone number and country code.
    click_to_pay_enroll_response:
      type: object
      properties:
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the Click to Pay request.
    click_to_pay_status_response:
      type: object
      properties:
        status:
          enum:
            - SUCCESS
            - FAILED
            - RECEIVED
          type: string
          description: "The status of the Click to Pay request.\n\n* `SUCCESS`: The Click to Pay request was successful.\n* `FAILED`: The Click to Pay request failed.\n* `RECEIVED`: The Click to Pay request was received."
        token:
          maxLength: 36
          type: string
          description: 'Unique identifier of the Click to Pay request, used to track the status of the request.'
        token_reference_id:
          type: string
          description: Unique identifier of the digital wallet token within the card network.
    client_access_token_request:
      required:
        - card_token
      type: object
      properties:
        application_token:
          maxLength: 255
          minLength: 1
          type: string
          description: Unique identifier of the `application` object.
        card_token:
          maxLength: 255
          minLength: 1
          type: string
          description: Unique identifier of the card whose sensitive information you want to display.
    client_access_token_response:
      type: object
      properties:
        application:
          $ref: '#/components/schemas/Application'
        card_token:
          type: string
          description: Unique identifier of the card whose sensitive information you want to display.
        created:
          type: string
          description: 'Date and time when the client access token was created, in UTC.'
          format: date-time
        expires:
          type: string
          description: 'Date and time when the client access token expires, in UTC.'
          format: date-time
        token:
          type: string
          description: Value of the client access token to redeem when displaying sensitive card data.
    commando_mode_enables:
      required:
        - program_funding_source
      type: object
      properties:
        auth_controls:
          type: array
          items:
            type: string
        ignore_card_suspended_state:
          type: boolean
          default: false
        program_funding_source:
          type: string
        use_cache_balance:
          type: boolean
          default: false
        velocity_controls:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            type: string
    commando_mode_nested_transition:
      required:
        - channel
        - commando_enabled
      type: object
      properties:
        channel:
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
        commando_enabled:
          type: boolean
          default: false
        reason:
          type: string
        username:
          type: string
    commando_mode_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        commando_mode_enables:
          $ref: '#/components/schemas/commando_mode_enables'
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        current_state:
          $ref: '#/components/schemas/commando_mode_nested_transition'
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        program_gateway_funding_source_token:
          type: string
        real_time_standin_criteria:
          $ref: '#/components/schemas/real_time_standin_criteria'
        token:
          type: string
    commando_mode_transition_response:
      required:
        - created_time
      type: object
      properties:
        commando_mode_token:
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        name:
          type: string
        token:
          type: string
        transition:
          $ref: '#/components/schemas/commando_mode_nested_transition'
        type:
          type: string
    config:
      type: object
      properties:
        authorization_controls:
          $ref: '#/components/schemas/authorization_controls'
      description: 'Allows for configuration options for this group, including control over the expiration of authorizations and automatic increases to the authorization amount.'
    control_token_request:
      required:
        - card_token
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: The unique identifier of the card for which you want to generate a control token.
        controltoken_type:
          enum:
            - SET_PIN
            - REVEAL_PIN
          type: string
          description: "Specifies the type of action completed by this request.\n\n*WARNING:* Sending a request to this endpoint with a `REVEAL_PIN` control token requires PCI DSS compliance.\n\nThe lifespan of the control token depends on the token type:\n\n* *SET_PIN:* 60 minutes\n* *REVEAL_PIN:* 5 minutes"
    control_token_response:
      required:
        - control_token
      type: object
      properties:
        control_token:
          type: string
          description: "Unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.\nThis value cannot be updated."
    currency_conversion:
      type: object
      properties:
        network:
          $ref: '#/components/schemas/network'
      description: Contains information about currency conversion.
    customer_due_diligence_request:
      required:
        - answer
        - question
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    customer_due_diligence_response:
      required:
        - account_token
        - answer
        - bank
        - question
        - token
        - type
      type: object
      properties:
        account_token:
          type: string
        answer:
          type: string
        bank:
          type: string
        question:
          type: string
        token:
          type: string
        type:
          type: string
    customer_due_diligence_update_response:
      type: object
      properties:
        answer:
          type: string
    deposit_account:
      required:
        - account_number
        - routing_number
        - token
      type: object
      properties:
        account_number:
          type: string
        allow_immediate_credit:
          type: boolean
          default: false
        business_token:
          type: string
        routing_number:
          type: string
        token:
          type: string
        user_token:
          type: string
      xml:
        name: deposit_account
    deposit_account_update_request:
      type: object
      properties:
        allow_immediate_credit:
          type: boolean
          default: false
      xml:
        name: deposit_account_update_request
    device:
      type: object
      properties:
        device_id:
          type: string
          description: Identity number of the device.
        ip_address:
          type: string
          description: Device's IP address.
        language_code:
          type: string
          description: Language the device is configured to use.
        location:
          type: string
          description: Geographic coordinates of the device.
        name:
          type: string
          description: Name of the device.
        phone_number:
          type: string
          description: Device's telephone number.
        token:
          type: string
          description: Unique identifier of the device object.
        type:
          type: string
          description: Type of device being provisioned.
      description: Contains information related to the device being provisioned.
    digital_service_provider:
      type: object
      properties:
        cvm_authentication_indicator:
          type: string
        cvm_authentication_method:
          type: string
        first_authentication_factor:
          type: string
        second_authentication_factor:
          type: string
    digital_wallet_android_pay_provision_request:
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - wallet_account_id
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        device_id:
          maxLength: 24
          minLength: 1
          type: string
          description: 'Unique identifier of the user''s Google device, as provided by Google during the provisioning process.'
        device_type:
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
          description: Type of device into which the digital wallet token will be provisioned.
        provisioning_app_version:
          maxLength: 50
          minLength: 1
          type: string
          description: "Version of the application making the provisioning request.\nUsed for debugging and fraud prevention."
        wallet_account_id:
          maxLength: 50
          minLength: 1
          type: string
          description: 'User''s Google Wallet account ID, as provided by Google during the provisioning process.'
    digital_wallet_android_pay_provision_response:
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
      properties:
        card_token:
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        created_time:
          type: string
          description: 'Date and time when the digital wallet provisioning request was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the digital wallet token provisioning request was last updated, in UTC.'
          format: date-time
        push_tokenize_request_data:
          $ref: '#/components/schemas/android_push_tokenize_request_data'
    digital_wallet_apple_pay_provision_request:
      required:
        - card_token
        - certificates
        - device_type
        - nonce
        - nonce_signature
        - provisioning_app_version
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        certificates:
          type: array
          items:
            type: string
            description: "Base64-encoded leaf and sub-CA certificates provided by Apple.\n\nThe first element of the array should be the leaf certificate followed by the sub-CA."
          description: "Base64-encoded leaf and sub-CA certificates provided by Apple.\n\nThe first element of the array should be the leaf certificate, followed by the sub-CA."
        device_type:
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
          description: Type of device into which the digital wallet token will be provisioned.
        nonce:
          type: string
          description: One-time-use nonce provided by Apple for security purposes.
        nonce_signature:
          type: string
          description: Apple-provided signature to the nonce.
        provisioning_app_version:
          maxLength: 50
          minLength: 1
          type: string
          description: "Version of the application making the provisioning request.\nUsed for debugging and fraud prevention."
    digital_wallet_apple_pay_provision_response:
      required:
        - activation_data
        - card_token
        - created_time
        - encrypted_pass_data
        - ephemeral_public_key
        - last_modified_time
      type: object
      properties:
        activation_data:
          type: string
          description: Cryptographic one-time passcode conforming to the payment network operator or service provider specifications.
        card_token:
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        created_time:
          type: string
          description: 'Date and time when the digital wallet provisioning request was created, in UTC.'
          format: date-time
        encrypted_pass_data:
          type: string
          description: Payload encrypted with a shared key derived from the Apple Public Certificates and the generated ephemeral private key.
        ephemeral_public_key:
          type: string
          description: Ephemeral public key used for the provisioning attempt.
        last_modified_time:
          type: string
          description: 'Date and time when the digital wallet token provisioning request was last updated, in UTC.'
          format: date-time
    digital_wallet_samsung_pay_provision_request:
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - wallet_user_id
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        device_id:
          maxLength: 24
          minLength: 1
          type: string
          description: 'User''s Samsung device unique identifier, as provided by Samsung during the provisioning process.'
        device_type:
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
          description: Type of device into which the digital wallet token will be provisioned.
        provisioning_app_version:
          maxLength: 50
          minLength: 1
          type: string
          description: "Version of the application making the provisioning request.\nUsed for debugging and fraud prevention."
        wallet_user_id:
          maxLength: 50
          minLength: 1
          type: string
          description: 'User''s Samsung Wallet account ID, as provided by Samsung during the provisioning process.'
    digital_wallet_samsung_pay_provision_response:
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
      properties:
        card_token:
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        created_time:
          type: string
          description: 'Date and time when the digital wallet provisioning request was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the digital wallet token provisioning request was last updated, in UTC.'
          format: date-time
        push_tokenize_request_data:
          $ref: '#/components/schemas/samsung_push_tokenize_request_data'
    digital_wallet_token:
      type: object
      properties:
        address_verification:
          $ref: '#/components/schemas/address_verification'
        card_token:
          type: string
          description: Unique identifier of the card.
        created_time:
          type: string
          description: 'Date and time when the digital wallet token object was created, in UTC.'
          format: date-time
        device:
          $ref: '#/components/schemas/device'
        fulfillment_status:
          type: string
          description: "Digital wallet token's provisioning status.\n\nFor fulfillment status descriptions, see <</core-api/digital-wallets-management#postDigitalwallettokentransitions, Create digital wallet token transition>>."
        issuer_eligibility_decision:
          type: string
          description: "The Marqeta platform's decision as to whether the digital wallet token should be provisioned.\n\n* *0000* – The token should be provisioned.\n\n* *token.activation.verification.required* – Provisioning is pending; further action is required for completion.\n\nFor all other values, check the value of the `fulfillment_status` field to definitively ascertain the provisioning outcome.\n\n*NOTE:* The value `invalid.cid` indicates an invalid CVV2 number."
        last_modified_time:
          type: string
          description: 'Date and time when the digital wallet token object was last modified, in UTC.'
          format: date-time
        metadata:
          $ref: '#/components/schemas/digital_wallet_token_metadata'
        state:
          type: string
          description: "State of the digital wallet token.\n\nFor state descriptions, see <</developer-guides/managing-the-digital-wallet-token-lifecycle#_transitioning_token_states, Transitioning Token States>>."
        state_reason:
          type: string
          description: Reason why the digital wallet token transitioned to its current state.
        token:
          type: string
          description: Unique identifier of the digital wallet token.
        token_service_provider:
          $ref: '#/components/schemas/token_service_provider'
        transaction_device:
          $ref: '#/components/schemas/transaction_device'
        user:
          $ref: '#/components/schemas/user_card_holder_response'
        wallet_provider_profile:
          $ref: '#/components/schemas/wallet_provider_profile'
      description: "Contains information about the digital wallet that funded the transaction.\n\nReturned for all transactions funded by a digital wallet or related to digital wallet token provisioning.\n\nFor more on digital wallets, see the <</core-api/digital-wallets-management, Digital Wallets Management>> API reference and <</developer-guides/digital-wallets-and-tokenization, Digital Wallets and Tokenization>> developer guide."
    digital_wallet_token_address_verification:
      type: object
      properties:
        validate:
          type: boolean
          description: Specifies whether or not the address used for address verification is valid.
          default: true
    digital_wallet_token_hash:
      required:
        - token
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the digital wallet token resource.
      description: Contains identifiers of the digital wallet token resource and the card resource.
    digital_wallet_token_metadata:
      type: object
      properties:
        cardproduct_preferred_notification_language:
          type: string
          description: "Language specified in the `config.transaction_controls.notification_language` field of the card product:\n\n* *ces* – Czech\n* *deu* – German\n* *eng* – English\n* *fra* – French\n* *grc* – Greek\n* *ita* – Italian\n* *nld* – Dutch\n* *pol* – Polish\n* *prt* – Portuguese\n* *rou* – Romanian\n* *spa* – Spanish\n* *swe* – Swedish\n\nBy default, notifications are sent in English.\n\nThe ISO maintains the link:https://www.iso.org/iso-3166-country-codes.html[full list of ISO 3166 two- and three-digit numeric country codes, window=\"_blank\"]."
        issuer_product_config_id:
          type: string
          description: Unique identifier of the product configuration on the Marqeta platform.
      description: Contains additional information about the digital wallet token.
    digital_wallet_token_transition_request:
      required:
        - digital_wallet_token
        - state
      type: object
      properties:
        channel:
          enum:
            - TOKEN_SERVICE_PROVIDER
            - TOKEN_SERVICE_PROVIDER_API
            - DIGITAL_WALLET
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
          description: Mechanism by which the transition was initiated.
        digital_wallet_token:
          $ref: '#/components/schemas/digital_wallet_token_hash'
        reason:
          maxLength: 255
          minLength: 0
          type: string
          description: The reason for the transition.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "Standard code describing the reason for the transition.\n\n*NOTE:* This field is required if your program uses v2 of the `user_card_state_version`, which is a program-specific configuration value that is managed by Marqeta and cannot be accessed via the API.\nTo learn more about the `user_card_state_version` program configuration, contact your Marqeta representative.\n\n* *00:* Object activated for the first time\n* *01:* Requested by you\n* *02:* Inactivity over time\n* *03:* This address cannot accept mail or the addressee is unknown\n* *04:* Negative account balance\n* *05:* Account under review\n* *06:* Suspicious activity was identified\n* *07:* Activity outside the program parameters was identified\n* *08:* Confirmed fraud was identified\n* *09:* Matched with an Office of Foreign Assets Control list\n* *10:* Card was reported lost\n* *11:* Card information was cloned\n* *12:* Account or card information was compromised\n* *13:* Temporary status change while on hold/leave\n* *14:* Initiated by Marqeta\n* *15:* Initiated by issuer\n* *16:* Card expired\n* *17:* Failed KYC\n* *18:* Changed to `ACTIVE` because information was properly validated\n* *19:* Changed to `ACTIVE` because account activity was properly validated\n* *20:* Change occurred prior to the normalization of reason codes\n* *21:* Initiated by a third party, often a digital wallet provider\n* *22:* PIN retry limit reached\n* *23:* Card was reported stolen\n* *24:* Address issue\n* *25:* Name issue\n* *26:* SSN issue\n* *27:* DOB issue\n* *28:* Email issue\n* *29:* Phone issue\n* *30:* Account/fulfillment mismatch\n* *31:* Other reason"
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
          type: string
          description: "Specifies the state to which the digital wallet token will transition.\n\nThe original state is `REQUESTED`. You cannot modify the state if its current value is either `REQUEST_DECLINED` or `TERMINATED`."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "The unique identifier of the digital wallet token transition (not the identifier of the digital wallet token itself).\n\nIf you do not include a value for the `token` field, the system will generate one automatically.\nThis value is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        token_reference_id:
          type: string
          description: "The unique identifier of the digital wallet token within the card network.\nThe `token_reference_id` is unique at the card network level."
    digital_wallet_token_transition_response:
      required:
        - channel
        - digital_wallet_token
        - fulfillment_status
        - state
        - token
        - type
      type: object
      properties:
        card_swap:
          $ref: '#/components/schemas/card_swap_hash'
        channel:
          enum:
            - TOKEN_SERVICE_PROVIDER
            - DIGITAL_WALLET
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
            - TOKEN_SERVICE_PROVIDER_API
          type: string
          description: Mechanism by which the transition was initiated.
        created_time:
          type: string
          description: 'Date and time when the transition was created, in UTC.'
          format: date-time
        digital_wallet_token:
          $ref: '#/components/schemas/digital_wallet_token_hash'
        fulfillment_status:
          enum:
            - DECISION_RED
            - DECISION_YELLOW
            - DECISION_GREEN
            - REJECTED
            - PROVISIONED
          type: string
          description: Provisioning status of the digital wallet token.
        reason:
          maxLength: 255
          minLength: 0
          type: string
          description: Reason for the transition.
        reason_code:
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
            - '32'
          type: string
          description: "Standard code describing the reason for the transition:\n\n* *00:* Object activated for the first time\n* *01:* Requested by you\n* *02:* Inactivity over time\n* *03:* This address cannot accept mail or the addressee is unknown\n* *04:* Negative account balance\n* *05:* Account under review\n* *06:* Suspicious activity was identified\n* *07:* Activity outside the program parameters was identified\n* *08:* Confirmed fraud was identified\n* *09:* Matched with an Office of Foreign Assets Control list\n* *10:* Card was reported lost\n* *11:* Card information was cloned\n* *12:* Account or card information was compromised\n* *13:* Temporary status change while on hold/leave\n* *14:* Initiated by Marqeta\n* *15:* Initiated by issuer\n* *16:* Card expired\n* *17:* Failed KYC\n* *18:* Changed to `ACTIVE` because information was properly validated\n* *19:* Changed to `ACTIVE` because account activity was properly validated\n* *20:* Change occurred prior to the normalization of reason codes\n* *21:* Initiated by a third party, often a digital wallet provider\n* *22:* PIN retry limit reached\n* *23:* Card was reported stolen\n* *24:* Address issue\n* *25:* Name issue\n* *26:* SSN issue\n* *27:* DOB issue\n* *28:* Email issue\n* *29:* Phone issue\n* *30:* Account/fulfillment mismatch\n* *31:* Other reason"
        state:
          enum:
            - REQUESTED
            - REQUEST_DECLINED
            - ACTIVE
            - SUSPENDED
            - TERMINATED
          type: string
          description: Specifies the state to which the digital wallet token is transitioning.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: 'Unique identifier of the digital wallet token transition, and not the identifier of the digital wallet token itself.'
        type:
          maxLength: 36
          minLength: 0
          type: string
          description: "Type of digital wallet token transition.\n`state.activated`, for example."
    digital_wallet_x_pay_provision_request:
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - token_requestor_id
        - wallet_account_id
      type: object
      properties:
        card_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        device_id:
          maxLength: 24
          minLength: 1
          type: string
          description: 'Unique identifier of the user''s XPay device, as provided by XPay during the provisioning process.'
        device_type:
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
          description: Type of device into which the digital wallet token will be provisioned.
        provisioning_app_version:
          maxLength: 50
          minLength: 1
          type: string
          description: "Version of the application making the provisioning request.\nUsed for debugging and fraud prevention."
        token_requestor_id:
          maxLength: 11
          minLength: 0
          type: string
          description: "Unique numerical identifier of the digital wallet token requestor within the card network.\nThese ID numbers map to `token_requestor_name` field values as follows:\n\n*Mastercard*\n\n* 50110030273 – `APPLE_PAY`\n* 50120834693 – `ANDROID_PAY`\n* 50139059239 – `SAMSUNG_PAY`\n\n*Visa*\n\n* 40010030273 – `APPLE_PAY`\n* 40010075001 – `ANDROID_PAY`\n* 40010043095 – `SAMSUNG_PAY`\n* 40010075196 – `MICROSOFT_PAY`\n* 40010075338 – `VISA_CHECKOUT`\n* 40010075449 – `FACEBOOK`\n* 40010075839 – `NETFLIX`\n* 40010077056 – `FITBIT_PAY`\n* 40010069887 – `GARMIN_PAY`"
        wallet_account_id:
          maxLength: 50
          minLength: 1
          type: string
          description: 'User''s XPay account identifier, as provided by XPay during the provisioning process.'
    digital_wallet_x_pay_provision_response:
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
      properties:
        card_token:
          type: string
          description: Unique identifier of the card resource to use for the provisioning request.
        created_time:
          type: string
          description: 'Date and time when the digital wallet provisioning request was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the digital wallet token provisioning request was last updated, in UTC.'
          format: date-time
        push_tokenize_request_data:
          $ref: '#/components/schemas/xpay_push_tokenize_request_data'
    direct_deposit_account_request:
      type: object
      properties:
        allow_immediate_credit:
          type: boolean
          default: false
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Required if 'user_token' is null
        customer_due_diligence:
          type: array
          items:
            $ref: '#/components/schemas/customer_due_diligence_request'
          description: Required if account type = Checking
        token:
          maxLength: 36
          minLength: 1
          type: string
        type:
          enum:
            - DEPOSIT_ACCOUNT
            - CHECKING
            - SAVINGS
          type: string
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Required if 'business_token' is null
    direct_deposit_account_response:
      required:
        - account_number
        - allow_immediate_credit
        - business_token
        - created_time
        - last_modified_time
        - routing_number
        - state
        - token
        - user_token
      type: object
      properties:
        account_number:
          maxLength: 17
          minLength: 13
          type: string
        allow_immediate_credit:
          type: boolean
          default: false
        business_token:
          maxLength: 36
          minLength: 36
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        routing_number:
          maxLength: 9
          minLength: 9
          type: string
        state:
          maxLength: 10
          minLength: 6
          type: string
        token:
          maxLength: 36
          minLength: 36
          type: string
        type:
          maxLength: 36
          minLength: 7
          type: string
        user_token:
          maxLength: 36
          minLength: 36
          type: string
    direct_deposit_account_transition_request:
      required:
        - account_token
        - channel
      type: object
      properties:
        account_token:
          maxLength: 36
          minLength: 1
          type: string
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
            - NETWORK
            - PROD_SUPPORT
            - UNSUPPORTED
          type: string
        reason:
          maxLength: 255
          minLength: 1
          type: string
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNSUPPORTED
            - UNACTIVATED
            - LIMITED
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    direct_deposit_account_transition_response:
      required:
        - account_token
        - business_token
        - channel
        - created_time
        - reason
        - state
        - token
        - user_token
      type: object
      properties:
        account_token:
          maxLength: 36
          minLength: 36
          type: string
        business_token:
          maxLength: 36
          minLength: 36
          type: string
        channel:
          maxLength: 10
          minLength: 6
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        reason:
          maxLength: 255
          minLength: 0
          type: string
        state:
          maxLength: 10
          minLength: 6
          type: string
        token:
          maxLength: 36
          minLength: 36
          type: string
        user_token:
          maxLength: 36
          minLength: 36
          type: string
    direct_deposit_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - name
          type: object
          properties:
            name:
              type: string
    early_funds_request_model:
      type: object
      properties:
        bank_transfer_token:
          maxLength: 36
          minLength: 0
          type: string
    echo_ping_request:
      type: object
      properties:
        payload:
          type: string
          description: Payload of the ping request.
        token:
          type: string
          description: Unique identifier of the ping request.
    echo_ping_response:
      type: object
      properties:
        id:
          type: string
        payload:
          type: string
        success:
          type: boolean
          default: false
    error_message_from_web_push_provisioning_request:
      required:
        - error_code
        - error_message
      type: object
      properties:
        error_code:
          type: string
          description: Code for the error that occurred.
          example: '400401'
        error_message:
          type: string
          description: Descriptive error message.
          example: 'Invalid input(s): invalid user token'
    expiration_offset:
      type: object
      properties:
        unit:
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
          description: specify if a value is provided; default is card product expiration offset unit
        value:
          type: integer
          description: specify if unit is provided; default is card product expiration offset value
          format: int32
    fee:
      required:
        - amount
        - created_time
        - currency_code
        - last_modified_time
        - name
        - token
      type: object
      properties:
        amount:
          type: number
          description: Amount of the fee.
        created_time:
          type: string
          description: 'Date and time when the `fees` object was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        last_modified_time:
          type: string
          description: 'Date and time when the `fees` object was last modified, in UTC.'
          format: date-time
        name:
          type: string
          description: Name of the fee.
        tags:
          type: string
          description: Descriptive metadata about the fee.
        token:
          type: string
          description: Unique identifier of the `fees` object.
      description: Contains details about the fee.
    fee_attributes:
      type: object
      properties:
        reason:
          type: string
          description: Describes the reason for the fee.
        region:
          type: string
          description: Describes the region in which the fee is assessed.
        status:
          type: string
          description: Describes the status of the fee.
        transaction_type:
          type: string
          description: Specifies the transaction type in which the fee was assessed.
      description: Describes the attributes of a fee.
    fee_detail:
      required:
        - fee
        - token
        - transaction_token
      type: object
      properties:
        fee:
          $ref: '#/components/schemas/fee'
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Additional text that describes the fee transfer.
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: Descriptive metadata about the fee.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the fee.
        transaction_token:
          type: string
          description: Unique identifier of the fee transaction.
      description: Contains details about a fee.
    fee_model:
      required:
        - token
      type: object
      properties:
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Additional text that describes the fee.
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: Descriptive metadata about the fee.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the fee.
      description: "Contains attributes that define characteristics of one or more fees.\nThis array is returned in the response when it is included in the request."
    fee_refund_request:
      type: object
      properties:
        original_fee_transaction_token:
          type: string
          description: "Unique identifier of the fee to be refunded. \n\nYou can find this token in the response of the original `/feecharges` or `/gpaorders` request used to assess the standalone fee or from the webhook corresponding to the original request.\nYou can also send a `GET` request to `/transactions?type=fee.charges` to retrieve a list of fee transactions."
        tags:
          type: string
          description: Descriptive metadata about the fee.
      description: Specifies the fee to refund.
    fee_request:
      required:
        - amount
        - currency_code
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the fee is active.
          default: true
        amount:
          type: number
          description: Amount of the fee.
        category:
          enum:
            - STANDALONE
            - REALTIME
          type: string
          description: Specifies if the fee is a standalone fee or a real-time fee.
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fee_attributes:
          $ref: '#/components/schemas/fee_attributes'
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the fee request.
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Descriptive metadata about the fee.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the fee.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so Marqeta recommends that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        type:
          enum:
            - FLAT
            - PERCENTAGE
          type: string
          description: Specifies if the fee is a flat fee or a percentage of the transaction amount.
    fee_response:
      required:
        - active
        - amount
        - created_time
        - currency_code
        - last_modified_time
        - name
        - token
      type: object
      properties:
        active:
          type: boolean
          description: Specifies whether the fee is active.
        amount:
          type: number
          description: Amount of the fee.
        category:
          type: string
          description: Specifies if the fee is a standalone fee or a real-time fee.
        created_time:
          type: string
          description: 'Date and time when the `fees` object was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fee_attributes:
          $ref: '#/components/schemas/fee_attributes'
        last_modified_time:
          type: string
          description: 'Date and time when the `fees` object was last modified, in UTC.'
          format: date-time
        name:
          type: string
          description: Name of the fee.
        tags:
          type: string
          description: Descriptive metadata about the fee.
        token:
          type: string
          description: Unique identifier of the `fees` object.
        type:
          type: string
          description: Specifies if the fee is a flat fee or a percentage of the transaction amount.
      description: Contains details about the fee.
    fee_transfer_request:
      required:
        - business_token
        - fees
        - user_token
      type: object
      properties:
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the business account holder to which the fee applies.\n\nPass either `business_token` or `user_token`, not both."
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_model'
          description: Contains attributes that define characteristics of one or more fees.
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: Metadata about the transfer.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the fee transfer.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the user account holder to which the fee applies.\n\nPass either `user_token` or `business_token`, not both."
    fee_transfer_response:
      required:
        - business_token
        - created_time
        - fees
        - token
        - user_token
      type: object
      properties:
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Specifies the business account holder to which the fee applies.
        created_time:
          type: string
          description: 'Date and time when the `fee_charge` object was created, in UTC.'
          format: date-time
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_detail'
          description: Contains attributes that define characteristics of one or more fees.
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: "Metadata about the fee charge.\n\nThis field is returned if it exists in the resource."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the fee transfer.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Specifies the user account holder to which the fee applies.
      description: 'Contains information about a fee charge, including the amount, currency code, and user or business token.'
    fee_update_request:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the fee is active.
          default: true
        amount:
          type: number
          description: Amount of the fee.
        category:
          enum:
            - STANDALONE
            - REALTIME
          type: string
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fee_attributes:
          $ref: '#/components/schemas/fee_attributes'
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the fee request.
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Descriptive metadata about the fee.
        type:
          enum:
            - FLAT
            - PERCENTAGE
          type: string
          description: Specifies if this is a flat fee or a percentage of the transaction amount.
    financial_request_model:
      required:
        - amount
        - card_acceptor
        - card_token
        - mid
      type: object
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        cash_back_amount:
          type: number
        is_pre_auth:
          type: boolean
          default: false
        mid:
          maxLength: 50
          minLength: 1
          type: string
        pin:
          maxLength: 15
          minLength: 1
          type: string
        transaction_options:
          $ref: '#/components/schemas/transaction_options'
        webhook:
          $ref: '#/components/schemas/webhook'
    flex:
      type: object
      properties:
        action:
          enum:
            - inquiry
            - advice
          type: string
          description: Indicates whether the Flexible Credential transaction object is actionable (`inquiry`) or merely informative (`advice`).
        eligible:
          type: string
          description: Indicates if the transaction is eligible for Flexible Credential transactions or not.
        eligible_products:
          type: array
          items:
            type: string
          description: "Specifies which of the payment instrument's credentials is eligible for this transaction:\n\n* A value of `DEBIT` indicates the primary credential.\n* A value of `LOAN` indicates the secondary credential."
        secondary_credential_identifier:
          type: string
          description: 'Identifies the secondary credential used in the transaction, if applicable.'
        selected_product:
          type: string
          description: Indicates the eligible product that was used in the transaction.
      description: Contains information about a Flexible Credential transaction.
    fraud_view:
      type: object
      properties:
        issuer_processor:
          $ref: '#/components/schemas/issuer_fraud_view'
        network:
          $ref: '#/components/schemas/network_fraud_view'
        network_account_intelligence_score:
          $ref: '#/components/schemas/network_account_intelligence_score'
      description: Contains one or more fraud determinations by the card network that apply to either the transaction or the cardholder's account.
    fulfillment_address_request:
      type: object
      properties:
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        first_name:
          maxLength: 40
          minLength: 0
          type: string
        last_name:
          maxLength: 40
          minLength: 0
          type: string
        middle_name:
          maxLength: 40
          minLength: 0
          type: string
        phone:
          maxLength: 20
          minLength: 0
          type: string
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
        state:
          maxLength: 32
          minLength: 0
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
    funding:
      required:
        - source
      type: object
      properties:
        amount:
          type: number
          description: Amount of funds loaded into the GPA.
        gateway_log:
          $ref: '#/components/schemas/gateway_log_model'
        source:
          $ref: '#/components/schemas/funding_source_model'
        source_address:
          $ref: '#/components/schemas/CardholderAddressResponse'
      description: 'Contains funding information for the transaction, including funding amount, type, and time.'
    funding_account_response_model:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        account_suffix:
          type: string
          description: "Account identifier appended to the bank account number.\nThis field is returned if it exists in the resource."
        account_type:
          type: string
          description: "Type of account.\nThis field is returned if it exists in the resource."
        active:
          type: boolean
          description: "Specifies whether the account is active.\nThis field is returned if it exists in the resource."
          default: false
        business_token:
          type: string
          description: "Unique identifier of the business account holder.\nThis token is returned if a `user_token` is not specified."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        date_sent_for_verification:
          type: string
          description: "Date and time in UTC when the request for account validation was sent to the third-party partner.\n\nThis field is returned if it exists in the resource."
          format: date-time
        date_verified:
          type: string
          description: "Date and time when the account was verified, in UTC.\nThis field is returned if it exists in the resource."
          format: date-time
        exp_date:
          type: string
          description: "Payment card expiration date.\nThis field is returned if it exists in the resource."
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source.\n\nThis field is returned if it exists in the resource."
          default: false
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        link_partner_account_reference_token:
          type: string
        name_on_account:
          type: string
          description: "Name on the account.\nThis field is returned if it exists in the resource."
        partner:
          type: string
          description: "Name of the partner who validated the account holder.\nReturned when a third-party partner was used for account validation."
        partner_account_link_reference_token:
          type: string
          description: "Supplied by the account validation partner, this value is a reference to the account holder's details, such as the account number and routing number.\nReturned when a third-party partner was used for account validation."
        token:
          type: string
          description: "Unique identifier of the funding source.\nThis field is returned if it exists in the resource."
        type:
          type: string
          description: Funding source type.
        user_token:
          type: string
          description: "Unique identifier of the user account holder.\nThis token is returned if a `business_token` is not specified."
        verification_notes:
          type: string
          description: "Free-form text field for holding notes about verification.\nThis field is returned only if `verification_override = true`."
        verification_override:
          type: boolean
          description: "Allows the ACH funding source to be used regardless of its verification status.\n\n*NOTE:* When using `PLAID` to validate a funding source, this field is always set to `true`."
          default: false
        verification_status:
          type: string
          description: "Account verification status.\nThis field is returned if it exists in the resource."
    funding_source_model:
      required:
        - active
        - created_time
        - is_default_account
        - last_modified_time
        - token
        - type
      type: object
      properties:
        active:
          type: boolean
          description: Whether the funding source is active.
          default: false
        created_time:
          type: string
          description: 'Date and time when the funding source was created, in UTC.'
          format: date-time
        is_default_account:
          type: boolean
          description: Whether the GPA order unload's funding source is the default funding account.
          default: false
        last_modified_time:
          type: string
          description: 'Date and time when the funding source was last modified, in UTC.'
          format: date-time
        token:
          type: string
          description: Unique identifier of the funding source.
        type:
          type: string
          description: Funding type of the funding source.
      description: 'Contains funding source information for the transaction, including the funding type and time.'
      discriminator:
        propertyName: type
        mapping:
          bankaccount: '#/components/schemas/bank_account_funding_source_model'
          chargeback: '#/components/schemas/chargeback_funding_source_model'
          directdeposit: '#/components/schemas/direct_deposit_funding_source_model'
          paymentcard: '#/components/schemas/payment_card_funding_source_model'
          program: '#/components/schemas/program_funding_source_model'
          programgateway: '#/components/schemas/program_gateway_funding_source_model'
    funding_tranlog:
      required:
        - gatewayLog
        - gpaorder
        - network
        - node
        - subNetwork
        - token
        - transactionType
      type: object
      properties:
        account:
          $ref: '#/components/schemas/internal_account'
        account2:
          $ref: '#/components/schemas/internal_account'
        acquirer:
          type: string
        acquirerFee:
          type: number
        acquirerReferenceId:
          type: string
        actingCardholder:
          $ref: '#/components/schemas/internal_user'
        additionalAmount:
          type: number
        amount:
          type: number
        approvalNumber:
          type: string
        ca_city:
          type: string
        ca_country:
          type: string
        ca_name:
          type: string
        ca_region:
          type: string
        ca_street:
          type: string
        ca_zip:
          type: string
        captureDate:
          type: string
          format: date-time
        card:
          $ref: '#/components/schemas/internal_card'
        cardholder:
          $ref: '#/components/schemas/internal_user'
        currencyCode:
          type: string
        date:
          type: string
          format: date-time
        digital_wallet_token:
          $ref: '#/components/schemas/InternalDigitalWallet'
        displayMessage:
          type: string
        duration:
          type: integer
          format: int32
        expirationTime:
          type: string
          format: date-time
        extrc:
          type: string
        forwardingInstId:
          type: string
        functionCode:
          type: string
        gatewayLog:
          $ref: '#/components/schemas/InternalGatewayLog'
        gpaorder:
          $ref: '#/components/schemas/InternalGPAOrder'
        incomingNetworkRequestITC:
          type: string
        irc:
          type: string
        issuerFee:
          type: number
        itc:
          type: string
        layer:
          type: integer
          format: int32
        localTransactionDate:
          type: string
          format: date-time
        mcc:
          type: string
        mid:
          type: string
        network:
          type: string
        networkMid:
          type: string
        networkReferenceId:
          type: string
        node:
          type: string
        originator:
          type: string
        payload:
          $ref: '#/components/schemas/transaction_model'
        rc:
          type: string
        reasonCode:
          type: string
        ref_transaction:
          $ref: '#/components/schemas/internal_authorization_transaction'
        remoteHost:
          type: string
        requestAmount:
          type: number
        responseAmount:
          type: number
        responseCode:
          type: string
        retrievalReferenceNumber:
          type: string
        returnedBalances:
          type: string
        settlementDate:
          type: string
          format: date-time
        stan:
          type: string
        subNetwork:
          type: string
        tags:
          type: string
        tid:
          type: string
        token:
          type: string
        tranlogAttributes:
          type: object
          additionalProperties:
            type: string
        transactionState:
          enum:
            - PENDING
            - CLEARED
            - COMPLETION
            - DECLINED
            - ERROR
            - ALL
          type: string
        transactionType:
          type: string
        transaction_name:
          type: string
        transmissionDate:
          type: string
          format: date-time
    gateway_log_model:
      required:
        - message
        - order_number
        - transaction_id
      type: object
      properties:
        duration:
          type: integer
          description: Length of time in milliseconds that the gateway took to respond to a funding request.
          format: int64
        message:
          type: string
          description: "Message about the status of the funding request.\nUseful for determining whether it was approved and completed successfully, declined by the gateway, or timed out."
        order_number:
          type: string
          description: 'Customer order number, same value as `transaction.token`.'
        response:
          $ref: '#/components/schemas/gateway_response'
        timed_out:
          type: boolean
          description: Whether the gateway sent a response (`true`) or timed out (`false`).
          default: false
        transaction_id:
          type: string
          description: Customer-defined identifier for the transaction.
      description: Contains information from the JIT Funding gateway in response to a funding request.
    gateway_program_custom_header_update_request:
      type: object
      properties:
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: "Additional custom information included in the HTTP header. \nFor example, this might contain security information, along with Basic Authentication, when making a JIT Funding request. \nCustom headers also appear in the associated webhook's notifications. "
    gateway_program_funding_source_request:
      required:
        - basic_auth_password
        - basic_auth_username
        - name
        - url
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the program gateway funding source is active.
        basic_auth_password:
          maxLength: 100
          minLength: 20
          type: string
          description: Password for authenticating your environment.
        basic_auth_username:
          maxLength: 50
          minLength: 1
          type: string
          description: Username for authenticating your environment.
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: "Additional custom information included in the HTTP header.\nFor example, this might contain security information, along with Basic Authentication, when making a JIT Funding request.\nCustom headers also appear in the associated webhook's notifications."
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program gateway funding source.
        timeout_millis:
          maximum: 7000
          minimum: 1000
          type: integer
          description: Total timeout in milliseconds for gateway processing.
          format: int64
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the program gateway funding source.\nIf you do not include a token, the system will generate one automatically.\nAs this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.\nThis value cannot be updated."
        url:
          maxLength: 250
          minLength: 0
          type: string
          description: 'URL of the gateway endpoint hosted in your environment, to which `POST` requests are submitted by the Marqeta platform.'
        use_mtls:
          type: boolean
          description: "Specifies whether or not to use mutual transport layer security (mTLS) authentication for the funding request.\n\nmTLS authentication is in the beta testing phase, and is not yet generally available.\nContact your Marqeta representative for more information about using mTLS authentication."
          default: false
    gateway_program_funding_source_response:
      required:
        - account
        - basic_auth_password
        - basic_auth_username
        - created_time
        - custom_header
        - last_modified_time
        - name
        - timeout_millis
        - token
        - url
        - use_mtls
        - version
      type: object
      properties:
        account:
          type: string
          description: Bank account number.
        active:
          type: boolean
          description: "Indicates whether the program gateway funding source is active.\nThis field is returned if it exists in the resource."
        basic_auth_password:
          type: string
          description: Password for authenticating your environment.
        basic_auth_username:
          type: string
          description: Username for authenticating your environment.
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: Additional custom information included in the HTTP header.
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program gateway funding source.
        timeout_millis:
          type: integer
          description: Total timeout in milliseconds for gateway processing.
          format: int64
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the program gateway funding source.
        url:
          type: string
          description: 'URL of the gateway endpoint hosted in your environment, to which `POST` requests are submitted by the Marqeta platform.'
        use_mtls:
          type: boolean
          description: "Specifies whether or not to use mutual transport layer security (mTLS) authentication for the funding request.\n\nmTLS authentication is in the beta testing phase, and is not yet generally available.\nContact your Marqeta representative for more information about using mTLS authentication."
          default: false
        version:
          type: string
          description: Program gateway funding source object version.
    gateway_program_funding_source_update_request:
      required:
        - basic_auth_password
        - basic_auth_username
        - url
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the program gateway funding source is active.
        basic_auth_password:
          maxLength: 100
          minLength: 20
          type: string
          description: Password for authenticating your environment.
        basic_auth_username:
          maxLength: 50
          minLength: 1
          type: string
          description: Username for authenticating your environment.
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: "Additional custom information included in the HTTP header.\nFor example, this might contain security information, along with Basic Authentication, when making a JIT Funding request.\nCustom headers also appear in the associated webhook's notifications."
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program gateway funding source.
        timeout_millis:
          maximum: 7000
          minimum: 1000
          type: integer
          description: Total timeout in milliseconds for gateway processing.
          format: int64
        url:
          maxLength: 250
          minLength: 0
          type: string
          description: 'URL of the gateway endpoint hosted in your environment, to which `POST` requests are submitted by the Marqeta platform.'
        use_mtls:
          type: boolean
          description: "Specifies whether or not to use mutual transport layer security (mTLS) authentication for the funding request.\n\nmTLS authentication is in the beta testing phase, and is not yet generally available.\nContact your Marqeta representative for more information about using mTLS authentication."
          default: false
    gateway_response:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: Code received from the gateway.
        data:
          $ref: '#/components/schemas/jit_program_response'
      description: Contains information from the gateway in response to a funding request.
    gpa:
      required:
        - reload_amount
        - trigger_amount
      type: object
      properties:
        reload_amount:
          minimum: 0.01
          type: number
          description: "Available balance on the card after the reload has completed.\n\nThis value must be greater than or equal to the value of `trigger_amount`.\nNote that this is not the same as the amount added to the card, which will vary from reload to reload."
        trigger_amount:
          minimum: 0.01
          type: number
          description: "Threshold that determines when the reload happens.\n\nThe reload is triggered when the card balance falls below this amount."
      description: Defines the type of order.
    gpa_request:
      required:
        - amount
        - currency_code
        - funding_source_token
      type: object
      properties:
        amount:
          type: number
          description: Amount to fund.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business.\n\nPass either a `business_token` or a `user_token`, not both.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_model'
          description: List of fees associated with the funding transaction.
        funding_source_address_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source address to use for this order.\nIf your funding source is an ACH account, then a funding source address is not required. If your funding source is a payment card, you must have at least one funding source address in order to create a GPA order.\nSend a `GET` request to `/fundingsources/addresses/user/{token}` to retrieve addresses for a specific user."
        funding_source_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source to use for this order.\n\nYou do not have to supply a funding source token value in this call if you have a default funding source set up (verify the funding source's `is_default_account` field).\nIf you have only one funding source, then this source is used as the default.\nIf you have multiple funding sources and none are configured as the default, then an error is returned.\n\nSend a `GET` request to `/fundingsources/user/{user_token}` to retrieve funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve funding source tokens for a business."
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Additional descriptive text.
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Comma-delimited list of tags describing the GPA order.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the GPA order.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user.\n\nPass either a `user_token` or a `business_token`, not both.\n\nSend a `GET` request to `/users` to retrieve business tokens."
    gpa_response:
      required:
        - amount
        - created_time
        - currency_code
        - funding
        - funding_source_token
        - last_modified_time
        - response
        - state
        - token
        - transaction_token
      type: object
      properties:
        amount:
          type: number
          description: Amount funded.
        business_token:
          type: string
          description: "Unique identifier of the business.\n\nThis field is returned if it exists in the resource."
        created_time:
          type: string
          description: 'Date and time when the GPA order was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_detail'
          description: "List of fees associated with the funding transaction.\n\nThis array is returned if it exists in the resource."
        funding:
          $ref: '#/components/schemas/funding'
        funding_source_address_token:
          type: string
          description: Unique identifier of the funding source address to use for this order.
        funding_source_token:
          type: string
          description: Unique identifier of the funding source to use for this order.
        gateway_message:
          type: string
          description: "Message about the status of the funding request.\nUseful for determining whether it was approved and completed successfully, declined by the gateway, or timed out.\n\nThis field is returned if it exists in the resource."
        gateway_token:
          type: integer
          description: "Unique identifier of the JIT Funding request and response.\n\nThis field is returned if it exists in the resource."
          format: int64
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
        last_modified_time:
          type: string
          description: 'Date and time when the GPA order was last modified, in UTC.'
          format: date-time
        memo:
          type: string
          description: "Additional descriptive text.\n\nThis field is returned if it exists in the resource."
        response:
          $ref: '#/components/schemas/response'
        state:
          type: string
          description: Current status of the funding transaction.
        tags:
          type: string
          description: "Comma-delimited list of tags describing the GPA order.\n\nThis field is returned if it exists in the resource."
        token:
          type: string
          description: Unique identifier of the GPA order.
        transaction_token:
          type: string
          description: Unique identifier of the transaction being funded.
        user_token:
          type: string
          description: "Unique identifier of the user resource.\n\nThis field is returned if it exists in the resource."
      description: "Contains information about a GPA order, including fees, funding sources, and addresses.\nSee <</core-api/gpa-orders, GPA Orders>> for more information."
    gpa_returns:
      required:
        - amount
        - created_time
        - funding
        - funding_source_token
        - last_modified_time
        - response
        - state
        - token
        - transaction_token
      type: object
      properties:
        amount:
          type: number
          description: Amount of funds returned to the funding source.
        created_time:
          type: string
          description: 'Date and time when the GPA unload order was created, in UTC.'
          format: date-time
        funding:
          $ref: '#/components/schemas/funding'
        funding_source_address_token:
          type: string
          description: Identifies the funding source used for this order.
        funding_source_token:
          type: string
          description: Identifies the funding source used for this order.
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
        last_modified_time:
          type: string
          description: 'Date and time when the GPA unload order was last modified, in UTC.'
          format: date-time
        memo:
          type: string
          description: Additional descriptive text.
        original_order_token:
          type: string
          description: Identifies the original GPA order.
        response:
          $ref: '#/components/schemas/response'
        state:
          type: string
          description: Current status of the GPA unload order.
        tags:
          type: string
          description: Comma-delimited list of tags describing the GPA order.
        token:
          type: string
          description: Unique identifier of the GPA unload order.
        transaction_token:
          type: string
          description: Unique identifier of the transaction.
      description: Contains information about a GPA unload order.
    hold_increase:
      required:
        - type
        - value
      type: object
      properties:
        type:
          enum:
            - AMOUNT
            - PERCENT
            - UP_TO_LIMIT
          type: string
          description: Controls whether the `value` field represents a fixed amount or a percentage of the authorization amount.
          default: AMOUNT
        value:
          type: number
          description: "Specifies the amount of the automatic increase to the authorization amount.\n\nThe `type` field controls whether this amount is a fixed amount or a percentage."
      description: Controls automatic increases to the authorization amount for MCCs specified in this group.
    images:
      type: object
      properties:
        card:
          $ref: '#/components/schemas/images_card'
        carrier:
          $ref: '#/components/schemas/ImagesCarrier'
        carrier_return_window:
          $ref: '#/components/schemas/images_carrier_return_window'
        signature:
          $ref: '#/components/schemas/images_signature'
      description: Specifies personalized images that appear on the card.
    images_card:
      type: object
      properties:
        name:
          type: string
          description: Specifies a PNG image to display on the card.
        thermal_color:
          type: string
          description: Specifies the color of the image displayed on the card.
      description: Specifies personalized images that appear on the card.
    images_carrier_return_window:
      type: object
      properties:
        name:
          type: string
          description: Specifies a PNG image to display in the return address window of envelopes used for sending cards to cardholders.
      description: Specifies a custom image to display in the return address window of the card carrier envelope.
    images_signature:
      type: object
      properties:
        name:
          type: string
          description: Specifies a PNG image of the cardholder's signature.
      description: Specifies an image of the cardholder's signature.
    in_app_provisioning:
      type: object
      properties:
        address_verification:
          $ref: '#/components/schemas/digital_wallet_token_address_verification'
        enabled:
          type: boolean
          description: Specifies if in-app provisioning is enabled.
          default: false
    installment_data:
      type: object
      properties:
        installment_plan_identifier:
          type: string
          description: "(_Visa only_) Visa Transaction Matching Service for Issuers identifier.\nThis identifier matches a transaction on the Marqeta platform to an installment plan or Pay by Points transaction on the Visa card network."
      description: Contains the installment plan identifier used by the Visa Transaction Matching Service for Issuers.
    internal_account:
      required:
        - code
        - id
        - subclass
      type: object
      properties:
        cardholder_account:
          type: boolean
        code:
          type: string
        final_account:
          type: boolean
        id:
          type: integer
          format: int64
        subclass:
          type: string
    internal_authorization_transaction:
      required:
        - network
        - node
        - subNetwork
        - token
        - transactionType
      type: object
      properties:
        account:
          $ref: '#/components/schemas/internal_account'
        account2:
          $ref: '#/components/schemas/internal_account'
        acquirer:
          type: string
        acquirerFee:
          type: number
        acquirerReferenceId:
          type: string
        actingCardholder:
          $ref: '#/components/schemas/internal_user'
        additionalAmount:
          type: number
        amount:
          type: number
        approvalNumber:
          type: string
        ca_city:
          type: string
        ca_country:
          type: string
        ca_name:
          type: string
        ca_region:
          type: string
        ca_street:
          type: string
        ca_zip:
          type: string
        captureDate:
          type: string
          format: date-time
        card:
          $ref: '#/components/schemas/internal_card'
        cardholder:
          $ref: '#/components/schemas/internal_user'
        currencyCode:
          type: string
        date:
          type: string
          format: date-time
        digital_wallet_token:
          $ref: '#/components/schemas/InternalDigitalWallet'
        displayMessage:
          type: string
        duration:
          type: integer
          format: int32
        expirationTime:
          type: string
          format: date-time
        extrc:
          type: string
        feesModel:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
        forwardingInstId:
          type: string
        functionCode:
          type: string
        incomingNetworkRequestITC:
          type: string
        irc:
          type: string
        isFinancialAdvice:
          type: boolean
        issuerFee:
          type: number
        itc:
          type: string
        layer:
          type: integer
          format: int32
        localTransactionDate:
          type: string
          format: date-time
        mcc:
          type: string
        mid:
          type: string
        network:
          type: string
        networkMid:
          type: string
        networkReferenceId:
          type: string
        node:
          type: string
        originator:
          type: string
        payload:
          $ref: '#/components/schemas/transaction_model'
        rc:
          type: string
        reasonCode:
          type: string
        ref_transaction:
          $ref: '#/components/schemas/internal_authorization_transaction'
        remoteHost:
          type: string
        requestAmount:
          type: number
        responseAmount:
          type: number
        responseCode:
          type: string
        retrievalReferenceNumber:
          type: string
        returnedBalances:
          type: string
        settlementDate:
          type: string
          format: date-time
        stan:
          type: string
        subNetwork:
          type: string
        tags:
          type: string
        tid:
          type: string
        token:
          type: string
        tranlogAttributes:
          type: object
          additionalProperties:
            type: string
        transactionState:
          enum:
            - PENDING
            - CLEARED
            - COMPLETION
            - DECLINED
            - ERROR
            - ALL
          type: string
        transactionType:
          type: string
        transaction_name:
          type: string
        transmissionDate:
          type: string
          format: date-time
    internal_card:
      required:
        - card_product
        - id
        - last_four
        - token
        - user
      type: object
      properties:
        card_pin_block:
          type: string
        card_product:
          $ref: '#/components/schemas/internal_card_product'
        contactless_consecutive_count:
          type: integer
          format: int32
        contactless_consecutive_total_spend:
          type: number
        expiration_time:
          type: string
          format: date-time
        hash:
          type: string
        id:
          type: integer
          format: int64
        is_offline_pin_set_required:
          type: boolean
        kid:
          type: string
        last_four:
          type: string
        lvp_consecutive_count:
          type: integer
          format: int32
        lvp_consecutive_total_spend:
          type: number
        metadata:
          type: object
          additionalProperties:
            type: string
        nameline1:
          type: string
        secureData:
          type: string
        serviceCode:
          type: string
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNSUPPORTED
            - UNACTIVATED
            - LIMITED
          type: string
        token:
          type: string
        user:
          $ref: '#/components/schemas/internal_user'
    internal_card_product:
      type: object
      properties:
        card_product_config:
          type: object
          additionalProperties:
            type: string
        id:
          type: integer
          format: int64
        token:
          type: string
    internal_funding_source:
      required:
        - token
      type: object
      properties:
        account:
          type: string
        active:
          type: boolean
        created_time:
          type: string
          format: date-time
        debit_account:
          $ref: '#/components/schemas/internal_account'
        id:
          type: string
        is_default_account:
          type: boolean
        last_modified_time:
          type: string
          format: date-time
        name:
          type: string
        token:
          type: string
        type:
          type: string
    internal_transaction_message:
      required:
        - authorization_tranlog
      type: object
      properties:
        authorization_tranlog:
          $ref: '#/components/schemas/internal_authorization_transaction'
        context:
          type: object
          additionalProperties:
            type: object
        credit_debit_indicator:
          enum:
            - CREDIT
            - DEBIT
            - NONE
          type: string
        funding_tranlog:
          $ref: '#/components/schemas/funding_tranlog'
        processing_start_time_millis:
          type: integer
          format: int64
        velocity_caches:
          type: array
          items:
            $ref: '#/components/schemas/VelocityCache'
    internal_user:
      type: object
      properties:
        active:
          type: boolean
        corporate_card_holder:
          type: boolean
          default: false
        email:
          type: string
        first_name:
          type: string
        id:
          type: integer
          format: int64
        last_name:
          type: string
        middle_name:
          type: string
        token:
          type: string
        type:
          type: string
        user_accounts:
          type: array
          items:
            $ref: '#/components/schemas/internal_account'
        uses_parent_account:
          type: boolean
          default: false
    issuer_fraud_view:
      type: object
      properties:
        fraud_score_reasons:
          type: array
          items:
            type: string
        recommended_action:
          type: string
          description: The action recommended based on the fraud score.
        risk_level:
          type: string
          description: 'The fraud rating, or level of risk associated with the transaction.'
        riskcontrol_tags:
          type: array
          items:
            $ref: '#/components/schemas/riskcontrol_tags'
          description: The RiskControl tags that were triggered by the transaction.
        rule_violations:
          type: array
          items:
            type: string
          description: The rules violated by the transaction.
        score:
          type: integer
          description: "The risk score generated by RiskControl.\nThis is either the Mastercard Decision Intelligence or Visa Advance Authorization transaction risk score."
          format: int32
        triggered_rules:
          type: array
          items:
            $ref: '#/components/schemas/triggered_rule'
          description: 'Provides a list of rules triggered by a fraud event, along with the information on tags and rule characteristics.'
      description: Contains one or more fraud determinations by the card network that apply to either the transaction or the cardholder's account.
    jit_account_name_verification:
      type: object
      properties:
        gateway:
          $ref: '#/components/schemas/account_name_verification_source'
        issuer:
          $ref: '#/components/schemas/account_name_verification_source'
        request:
          $ref: '#/components/schemas/ani_information_1'
      description: "Contains account name verification data used to make JIT Funding decisions from one of the following objects:\n\n* The `gateway` object contains account name verification data from your JIT Funding gateway.\n* The `issuer` object contains account name verification data from the Marqeta platform.\n* The `request` object contains account name verification data as it appears in a JIT Funding request."
    jit_address_verification:
      type: object
      properties:
        gateway:
          $ref: '#/components/schemas/address_verification_source'
        issuer:
          $ref: '#/components/schemas/address_verification_source'
        request:
          $ref: '#/components/schemas/avs_information'
      description: Contains address verification data used to make JIT Funding decisions.
    jit_funding:
      type: object
      properties:
        paymentcard_funding_source:
          $ref: '#/components/schemas/jit_funding_paymentcard_funding_source'
        program_funding_source:
          $ref: '#/components/schemas/jit_funding_program_funding_source'
        programgateway_funding_source:
          $ref: '#/components/schemas/jit_funding_programgateway_funding_source'
    jit_funding_api:
      required:
        - amount
        - method
        - token
        - user_token
      type: object
      properties:
        account_name_verification:
          $ref: '#/components/schemas/jit_account_name_verification'
        acting_user_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "User who conducted the transaction.\n\nCan be a child user configured to share its parent's account balance."
        address_verification:
          $ref: '#/components/schemas/jit_address_verification'
        amount:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: Requested amount of funding.
        anticipated_amount_supported:
          type: boolean
        balances:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/cardholder_balance'
          description: Contains the GPA's balance details.
        business_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Holder of the business account that was funded.
        decline_reason:
          enum:
            - INVALID_AMOUNT
            - INSUFFICIENT_FUNDS
            - TRANSACTION_NOT_PERMITTED
            - SUSPECTED_FRAUD
            - AMOUNT_LIMIT_EXCEEDED
            - TRANSACTION_COUNT_LIMIT_EXCEEDED
            - DUPLICATE_TRANSACTION
            - INVALID_MERCHANT
            - INVALID_CARD
            - NO_CREDIT_ACCOUNT
            - EXPIRED_CARD
            - NO_CHECKING_ACCOUNT
            - NO_SAVINGS_ACCOUNT
            - STOP_PAYMENT
            - REVOCATION_AUTHORIZATION_ORDER
            - REVOCATION_ALL_AUTHORIZATION_ORDER
            - SOFT_DECLINE_AUTHENTICATION_REQUIRED
            - CLOSED_ACCOUNT
            - SOFT_DECLINE_PIN_REQUIRED
            - CARD_NOT_ACTIVE
            - CARDHOLDER_NOT_ACTIVE
          type: string
          description: Reason why the transaction was declined.
        incremental_authorization_jit_funding_tokens:
          type: array
          items:
            type: string
          description: "Array of tokens referencing the JIT Funding tokens of all previous associated incremental authorization JIT Funding requests.\nUseful for ascertaining the final transaction amount when the original amount was incremented."
        jit_account_name_verification:
          $ref: '#/components/schemas/jit_account_name_verification'
        memo:
          maxLength: 99
          minLength: 0
          type: string
          description: Additional information that describes the JIT Funding transaction.
        method:
          enum:
            - pgfs.authorization
            - pgfs.authorization.clearing
            - pgfs.authorization.advice
            - pgfs.authorization.incremental
            - pgfs.authorization.capture
            - pgfs.authorization.reversal
            - pgfs.authorization.cashback
            - pgfs.balanceinquiry
            - pgfs.auth_plus_capture
            - pgfs.refund
            - pgfs.refund.authorization
            - pgfs.refund.authorization.reversal
            - pgfs.refund.authorization.clearing
            - pgfs.force_capture
            - pgfs.authorization.capture.chargeback
            - pgfs.authorization.capture.chargeback.reversal
            - pgfs.pindebit
            - pgfs.pindebit.chargeback
            - pgfs.pindebit.chargeback.reversal
            - pgfs.pindebit.cashback
            - pgfs.pindebit.refund
            - pgfs.pindebit.authorization
            - pgfs.pindebit.authorization.clearing
            - pgfs.pindebit.authorization.reversal
            - pgfs.pindebit.atm.withdrawal
            - pgfs.pindebit.balanceinquiry
            - pgfs.pindebit.quasi.cash
            - pgfs.dispute.credit
            - pgfs.dispute.debit
            - pgfs.directdeposit.credit
            - pgfs.directdeposit.debit
            - pgfs.directdeposit.credit.reversal
            - pgfs.directdeposit.debit.reversal
            - pgfs.adjustment.credit
            - pgfs.adjustment.debit
            - pgfs.auth_plus_capture.standin
            - pgfs.authorization.standin
            - pgfs.network.load
            - pgfs.original.credit.authorization
            - pgfs.original.credit.auth_plus_capture
            - pgfs.original.credit.authorization.clearing
            - pgfs.original.credit.authorization.reversal
            - pgfs.billpayment
            - pgfs.billpayment.capture
            - pgfs.billpayment.reversal
            - pgfs.atm.withdrawal
            - pgfs.atm.clearing.withdrawal
            - pgfs.authorization.quasi.cash
            - pgfs.authorization.clearing.quasi.cash
            - pgfs.authorization.account_verification
            - pgfs.product.inquiry
          type: string
          description: "JIT Funding response type.\nSee <</core-api/gateway-jit-funding-messages#_the_jit_funding_object, The jit_funding object>> for the purpose, funding event type, and description of each method."
        original_jit_funding_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Unique identifier of the first associated JIT Funding message.\nUseful for correlating related JIT Funding messages (that is, those associated with the same GPA order).\nNot included in the first of any set of related messages."
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: Customer-defined tags related to the JIT Funding transaction.
        token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Existing JIT Funding token matching the `funding.gateway_log.transaction_id` field of the associated GPA order.\n\n*NOTE:* The `transaction_id` field updates if a subsequent JIT Funding message associated with that GPA order is sent.\nIf multiple JIT Funding messages are associated with the same GPA order, the `transaction_id` field matches the token of the most recent message."
        user_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Holder of the user account that was funded.
      description: "Contains information about the JIT Funding load event, in which funds are loaded into an account.\n\nThis object is returned if your program uses JIT Funding."
    jit_funding_paymentcard_funding_source:
      type: object
      properties:
        enabled:
          type: boolean
          default: false
        refunds_destination:
          maxLength: 50
          minLength: 0
          enum:
            - GATEWAY
            - GPA
            - WATERFALL
          type: string
    jit_funding_program_funding_source:
      type: object
      properties:
        enabled:
          type: boolean
          default: false
        funding_source_token:
          maxLength: 36
          minLength: 0
          type: string
          description: required if enabled
        refunds_destination:
          maxLength: 50
          minLength: 0
          enum:
            - PROGRAM_FUNDING_SOURCE
            - GPA
            - WATERFALL
          type: string
    jit_funding_programgateway_funding_source:
      type: object
      properties:
        always_fund:
          type: boolean
          default: false
        enabled:
          type: boolean
          default: false
        funding_source_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Required if enabled
        refunds_destination:
          maxLength: 50
          minLength: 0
          enum:
            - GATEWAY
            - GPA
            - WATERFALL
          type: string
    jit_program_response:
      required:
        - jit_funding
      type: object
      properties:
        flex:
          $ref: '#/components/schemas/flex'
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
        network_metadata:
          $ref: '#/components/schemas/network_metadata'
      description: Contains the gateway's information about the JIT Funding transaction.
    kyc_request:
      type: object
      properties:
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the business account holder on which to perform the identity check.\nDo not pass this field if your request includes the `user_token` field.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        manual_override:
          type: boolean
          description: "Set to `true` to designate a user account holder as having passed a verification check without Marqeta performing the check through one of its KYC providers.\n\nUse this override when you perform verification through another mechanism, such as an alternative KYC provider or directly with the account holder.\n\nYou must obtain explicit, written approval from Marqeta before using the `manual_override` field for KYC verification.\nThis feature is only available to programs that are enabled to perform their own Customer Identification Program (CIP) KYC verification.\nConsult your Marqeta representative for more information."
          default: false
        notes:
          maxLength: 255
          minLength: 0
          type: string
          description: "Notes pertaining to a manual override.\nThis field is returned in the response only when the `manual_override` field is set to `true`."
        reference_id:
          maxLength: 32
          minLength: 0
          type: string
          description: "Can be specified only if `manual_override=true`.\nIf you verified a user account holder's identity by performing a KYC verification outside of the Marqeta platform, you can use the `reference_id` field to store the reference number returned by that KYC provider.\n\n*NOTE:* When you submit a KYC verification request with `manual_override=false`, the Marqeta platform performs the verification through one of its KYC providers.\nIf the KYC provider responds with a reference identifier, that identifier is passed to you by way of this field in the response."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "The unique identifier of the identity check.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the user account holder on which to perform the identity check.\nDo not pass this field if your request includes the `business_token` field.\n\nSend a `GET` request to `/users` to retrieve user tokens."
    kyc_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        business_token:
          type: string
          description: The business account holder on which the identity check was performed.
        created_time:
          type: string
          description: Time when the KYC verification was performed.
          format: date-time
        last_modified_time:
          type: string
          description: Time when the KYC verification was last updated.
          format: date-time
        manual_override:
          type: boolean
          description: "If `true`, the user account holder is designated as having passed a verification check without Marqeta performing the check.\n\nThis override is used when verification is performed through another mechanism, such as an alternative KYC provider or directly with the account holder."
          default: false
        notes:
          type: string
          description: "Notes pertaining to a manual override.\nThis field is included in the response only when the `manual_override` field is set to `true`."
        reference_id:
          type: string
          description: "If you verified the account holder's identity by performing a KYC verification outside of the Marqeta platform, you can use the `reference_id` field to store the reference number returned by that KYC provider.\nThis field is included in the response only when the `manual_override` field is set to `true`.\n\n*NOTE:* When you submit a KYC verification request with `manual_override=false`, the Marqeta platform performs the verification through one of its KYC providers.\nIf the KYC provider responds with a reference identifier, that identifier is passed to you by way of this field in the response."
        result:
          $ref: '#/components/schemas/result'
        token:
          type: string
          description: The unique identifier of the identity check.
        user_token:
          type: string
          description: The user account holder on which the identity check was performed.
    link:
      required:
        - href
        - method
        - rel
      type: object
      properties:
        href:
          type: string
        method:
          type: string
        rel:
          type: string
    login_request_model:
      type: object
      properties:
        email:
          type: string
          description: Cardholder email address.
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: Password to the cardholder's user account on the Marqeta platform.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Identifies the cardholder to log in.\n\nSend a `GET` request to `/users` to retrieve user tokens."
    login_response_model:
      type: object
      properties:
        access_token:
          $ref: '#/components/schemas/access_token_response'
        user:
          $ref: '#/components/schemas/user_card_holder_response'
    manual_entry:
      type: object
      properties:
        address_verification:
          $ref: '#/components/schemas/digital_wallet_token_address_verification'
        enabled:
          type: boolean
          description: Specifies if manual entry is enabled.
          default: false
    mcc_group_model:
      required:
        - mccs
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the group is active or inactive.
          default: false
        config:
          $ref: '#/components/schemas/config'
        mccs:
          maxItems: 500
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
          description: "The set of merchant category codes that you want to include in this group.\nFor each element, valid characters are 0-9, and the length must be 4 digits.\nYou can also specify a range like \"9876-9880\".\nAn MCC can belong to more than one group."
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: The name of the group.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "The unique identifier of the group.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    mcc_group_update_model:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the MCC group is active or inactive.
          default: false
        config:
          $ref: '#/components/schemas/config'
        mccs:
          maxItems: 500
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
          description: "The set of merchant category codes that you want to include in this group.\nFor each element, valid characters are 0-9, and the length must be 4 digits.\nYou can also specify a range like \"9876-9880\".\nAn MCC can belong to more than one group.\n\nUpdating the merchant category codes for the group completely replaces the group's existing codes.\nFor example, if the current MCC group is `[\"1234\"]` and you want to add the 2345 code (while retaining the existing code), you must specify `[\"1234\", \"2345\"]` in this field."
        name:
          type: string
          description: The name of the MCC group.
    media_content:
      type: object
      properties:
        data:
          type: string
          description: Media data content.
        height:
          type: string
          description: "Height of non-SVG image asset.\nSpecified in pixels."
        type:
          type: string
          description: "Type of media.\nSpecified as Multipurpose Internet Mail Extension (MIME).\n\nSupported media types include:\n\n* application/pdf\n* image/png\n* image/svg+xml\n* text/plain\n* text/html\n"
        width:
          type: string
          description: "Width of non-SVG image asset.\nSpecified in pixels."
    merchant_card_request:
      required:
        - card_product_token
      type: object
      properties:
        card_product_token:
          maxLength: 36
          minLength: 1
          type: string
        expedite:
          type: boolean
          default: false
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset'
        metadata:
          type: object
          additionalProperties:
            type: string
    merchant_group_request:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the merchant group is active or not.
          default: false
        mids:
          maxItems: 4000
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
          description: "Comma-separated list of alphanumeric merchant identifiers.\nYou can include merchant identifiers in multiple merchant groups."
        name:
          maxLength: 40
          minLength: 1
          type: string
          description: Name of the merchant group.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the group.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    merchant_group_response:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the merchant group is active or not.
          default: false
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        mids:
          type: array
          items:
            type: string
          description: Comma-separated list of alphanumeric merchant identifiers.
        name:
          type: string
          description: Name of the merchant group.
        token:
          type: string
          description: Unique identifier of the merchant group.
    merchant_group_update_request:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the merchant group is active or not.
          default: false
        mids:
          maxItems: 4000
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
          description: "Comma-separated list of alphanumeric merchant identifiers.\nYou can include merchant identifiers in multiple merchant groups."
        name:
          maxLength: 40
          minLength: 1
          type: string
          description: Name of the merchant group.
    merchant_response_model:
      required:
        - created_time
        - last_modified_time
        - name
      type: object
      properties:
        active:
          type: boolean
          default: true
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        name:
          maxLength: 40
          minLength: 0
          type: string
        partial_auth_flag:
          type: boolean
          default: true
        phone:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 2
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: The unique identifier of the merchant
        zip:
          maxLength: 10
          minLength: 0
          type: string
    merchant_scope:
      type: object
      properties:
        mcc:
          maxLength: 4
          minLength: 1
          type: string
          description: "Merchant Category Code (MCC).\nIdentifies the type of products or services provided by the merchant.\n\nEnter a value to control spending on a particular type of product or service."
        mcc_group:
          maxLength: 36
          minLength: 1
          type: string
          description: "Token identifying a group of MCCs.\nEnter a value to control spending on a group of product or service types.\n\nSend a `GET` request to `/mccgroups` to retrieve MCC group tokens."
        mid:
          maxLength: 36
          minLength: 1
          type: string
          description: "Merchant identifier (MID).\nIdentifies a specific merchant.\n\nEnter a value to control spending with a particular merchant."
      description: "Defines the group of merchants to which the velocity control applies.\n\nPopulate no more than one field of the `merchant_scope` object.\nIf no fields are populated, the velocity control applies to all merchants."
    money_in_transaction:
      type: object
      properties:
        include_credits_types:
          type: array
          items:
            type: string
          description: Specifies the types of credits to include in the original credit transaction (OCT).
        include_network_load_types:
          type: array
          items:
            type: string
          description: Indicates whether or not cash and check network load transactions will be subject to velocity control.
      description: "Defines the original credit transaction (OCT) types that are subject to velocity control.\nYour request can contain either a `money_in_transaction` object or the `include_credits` field, not both."
    msa:
      required:
        - campaign_token
        - reload_amount
        - trigger_amount
      type: object
      properties:
        campaign_token:
          type: string
        reload_amount:
          minimum: 0.01
          type: number
        trigger_amount:
          minimum: 0.01
          type: number
      xml:
        name: msa
    msa_aggregated_balances:
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
      properties:
        available_balance:
          type: number
        balances:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/msa_aggregated_balances'
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          type: string
          format: date-time
        ledger_balance:
          type: number
        pending_credits:
          type: number
    msa_balances:
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
      properties:
        available_balance:
          type: number
        balances:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/msa_balances'
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          type: string
          format: date-time
        ledger_balance:
          type: number
        pending_credits:
          type: number
    msa_returns:
      required:
        - active
        - aggregated_balances
        - amount
        - campaign_token
        - created_time
        - currency_code
        - funding
        - last_modified_time
        - last_transaction_date
        - order_balances
        - original_order_token
        - reward_amount
        - reward_trigger_amount
        - transaction_token
      type: object
      properties:
        active:
          type: boolean
          default: false
        aggregated_balances:
          $ref: '#/components/schemas/msa_aggregated_balances'
        amount:
          type: number
        business_token:
          type: string
        campaign_token:
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        currency_code:
          type: string
        end_date:
          type: string
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
        funding:
          $ref: '#/components/schemas/funding'
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        last_transaction_date:
          type: string
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
        order_balances:
          $ref: '#/components/schemas/msa_balances'
        original_order_token:
          type: string
        reward_amount:
          type: number
        reward_trigger_amount:
          type: number
        start_date:
          type: string
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
        token:
          type: string
        transaction_token:
          type: string
        unloaded_amount:
          type: number
        user_token:
          type: string
      xml:
        name: msa_returns
    network:
      type: object
      properties:
        conversion_rate:
          type: number
          description: "Conversion rate between the origination currency and the settlement currency.\n\nReturned when the transaction currency is different from the origination currency."
        dynamic_currency_conversion:
          type: boolean
          description: Indicates whether currency conversion was performed dynamically at the point of sale.
          default: false
        original_amount:
          type: number
          description: Amount of the transaction in the currency in which it originated.
        original_currency_code:
          type: string
          description: Currency type of the origination currency.
        settlement_data:
          $ref: '#/components/schemas/settlement_data'
      description: 'Contains information from the card network about currency conversion, including the original currency of the transaction, the amount of the transaction in the original currency, and the conversion rate.'
    network_account_intelligence_score:
      type: object
      properties:
        name:
          type: string
          description: 'The name, as provided by the Mastercard network.'
        service_type:
          type: string
          description: 'The service type, as provided by the Mastercard network.'
        value:
          type: string
          description: 'The value, as provided by the Mastercard network.'
      description: 'Account intelligence score information, as provided by the Mastercard network.'
    network_fee_model:
      type: object
      properties:
        amount:
          type: number
          description: The amount of the network fee.
        credit_debit:
          enum:
            - C
            - D
          type: string
          description: "Indicates whether the fee is a credit or a debit.\n\n* *C* indicates a credit\n* *D* indicates a debit"
        type:
          enum:
            - ISSUER_FEE
            - SWITCH_FEE
            - PINDEBIT_ASSOC_FEE
            - ACQUIRER_FEE
            - INTERCHANGE_FEE
            - CUR_CONV_CARDHOLDER_FEE
            - CUR_CONV_ISSUER_FEE
            - CROSS_BORDER_ISSUER_FEE
          type: string
          description: The type of fee assessed by the card network.
      description: Contains card network fees assessed against the cardholder.
    network_fraud_view:
      type: object
      properties:
        account_risk_score:
          type: string
          description: "_(Visa only)_ Account holder risk condition code evaluated by the card network.\nA higher score indicates a greater likelihood that the card number is compromised."
        account_risk_score_reason_code:
          type: string
          description: _(Visa only)_ Unique code that describes the main driver of the `account_risk_score`.
        transaction_account_attack_intelligence_score:
          type: string
          description: "_(Visa only)_ Visa-provided score ranking the risk of an account enumeration attack in a card-not-present transaction.\nA higher score indicates higher risk.\nA score of 00 indicates insufficient data to determine risk.\nUseful for making authorization decisions."
        transaction_risk_score:
          type: integer
          description: "Network-provided risk score for the transaction.\nA higher score indicates higher risk.\nUseful for making authorization decisions."
          format: int32
        transaction_risk_score_reason_code:
          type: string
          description: _(Mastercard only)_ Unique code that describes the main driver of the `transaction_risk_score`.
        transaction_risk_score_reason_description:
          type: string
          description: _(Mastercard only)_ Description of the `transaction_risk_score_reason_code`.
      description: Contains network-provided information about fraud determinations.
    network_metadata:
      type: object
      properties:
        account_identification_1:
          type: string
        incoming_response_code:
          type: string
          description: "Network response code, as provided by the card network.\n\nFor example, Visa response code `59` indicates suspected fraud."
        network_funding_txn_type:
          type: string
          description: Transaction type indicator provided by the card network for original credit and account funding transactions.
        product_id:
          type: string
          description: "Product identification value assigned by the card network to each card product.\nCan be used to track card-level activity by individual account number for premium card products."
        program_id:
          type: string
          description: Program identification number used with `product_id` that identifies the programs associated with a card within a program registered by the issuer with the card network.
        spend_qualifier:
          type: string
          description: Indicates whether or not the base spend-assessment threshold defined by the card network has been met.
        surcharge_free_atm_network:
          type: string
          description: Name of the surcharge-free ATM network used to complete the transaction.
      description: "Contains network-related metadata for the transaction, including details about the card program and the card product.\nReturned if provided by the card network"
    offer_model:
      required:
        - campaign_token
        - currency_code
        - name
        - purchase_amount
        - reward_amount
      type: object
      properties:
        active:
          type: boolean
          default: true
        campaign_token:
          maxLength: 36
          minLength: 1
          type: string
        currency_code:
          type: string
        end_date:
          type: string
          format: date-time
        name:
          maxLength: 255
          minLength: 0
          type: string
        purchase_amount:
          type: number
        reward_amount:
          type: number
        reward_trigger_amount:
          type: number
        start_date:
          type: string
          format: date-time
        token:
          maxLength: 36
          minLength: 1
          type: string
    one_time_request_model:
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: "Cardholder email address.\n\nRequired when neither the user token nor the admin access token is provided as the Basic Authentication password (case #3)."
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: "Password to the cardholder's user account on the Marqeta platform.\n\nRequired when neither the user token nor the admin access token is provided as the Basic Authentication password (case #3)."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Identifies the cardholder whose data is accessed.\nSend a `GET` request to `/users` to retrieve cardholder tokens.\n\nRequired when the Basic Authentication password is set to an admin access token (case #2)."
    order_scope:
      type: object
      properties:
        gpa:
          $ref: '#/components/schemas/gpa'
        msa:
          $ref: '#/components/schemas/msa'
      description: Defines the balance threshold and reload amounts.
    original_credit:
      type: object
      properties:
        deferred_hold_by:
          enum:
            - absent
            - visa
            - originator
            - payment
          type: string
        fast_funds_enabled:
          type: boolean
          description: "Indicates that Fast Funds are enabled for dual-message original credit transactions.\nIf the value of this field is `true`, you must make the funds available to your cardholder within 30 minutes of the transaction."
        funding_source:
          enum:
            - CREDIT
            - DEBIT
            - PREPAID
            - DEPOSIT_ACCOUNT
            - CASH
            - MOBILE_MONEY_ACCOUNT
            - NON_VISA_CREDIT
            - CHECK
            - ACH
          type: string
          description: Sender's account from which the OCT draws funds.
        screening_score:
          type: string
          description: "Sanctions screening score to assist with meeting Anti-Money Laundering (AML) obligations.\n\nHigher scores indicate that the sender's data more closely resembles an entry on the regulatory watchlist.\n\nA value of 999 means that no screening score is available."
        sender_account_type:
          enum:
            - OTHER
            - RTN_BANK_ACCOUNT
            - IBAN
            - CARD_ACCOUNT
            - EMAIL
            - PHONE_NUMBER
            - BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE
            - WALLET_ID
            - SOCIAL_NETWORK_ID
          type: string
          description: The type of account from which the OCT draws funds.
        sender_address:
          type: string
          description: Sender's street address.
        sender_city:
          type: string
          description: Sender's city.
        sender_country:
          type: string
          description: Sender's country.
        sender_name:
          type: string
          description: Full name of the sender.
        sender_state:
          type: string
          description: Sender's state.
        transaction_purpose:
          type: string
          description: The purpose of the original credit transaction.
        transaction_type:
          enum:
            - account_to_account
            - person_to_person
            - wallet_transfer
            - money_transfer_by_bank
            - business_to_business
            - disbursement
            - government_disbursement
            - gambling_payout
            - loyalty
            - merchant_disbursement
            - online_gambling_payout
            - pension_disbursement
            - prepaid_loads
            - card_bill_payment
            - bill_payment
            - cash_claim
            - cash_in
            - cash_out
            - mobile_air_time_payment
            - money_transfer_by_merchant
            - face_to_face_merchant_payment
            - government_payment
            - payments_goods_services
            - funds_transfer
            - general_business_to_business_transfer
            - business_to_business_transfer
            - cash_deposit
            - purchase_repayment
            - aft_or_oct_eligibility
            - consumer_bill_payment
            - request_to_pay
          type: string
          description: Type of original credit transaction.
      description: 'Contains information about an original credit transaction (OCT), which enables the cardholder to receive funds on the specified card from an external source via the card network.'
    original_credit_sender_data:
      required:
        - funding_source
      type: object
      properties:
        deferred_hold_by:
          enum:
            - absent
            - visa
            - originator
            - payment
          type: string
        fast_funds_enabled:
          type: boolean
        funding_source:
          enum:
            - credit
            - debit
            - prepaid
            - deposit_account
            - cash
            - mobile_money_payment
            - non_visa_credit
            - check
            - ach
          type: string
        sender_account_number:
          type: string
        sender_account_type:
          enum:
            - other
            - rtn_bank_account
            - iban
            - card_account
            - email
            - phone_number
            - bank_account_number_and_identification_code
            - wallet_id
            - social_network_id
          type: string
        sender_address:
          type: string
        sender_city:
          type: string
        sender_country:
          type: string
        sender_name:
          type: string
        sender_reference_number:
          type: string
        sender_state:
          type: string
        transaction_purpose:
          enum:
            - family_support
            - labor_transfers
            - travel
            - education
            - medical_treatment
            - emergency_need
            - savings
            - gifts
            - other
            - salary
            - lending
            - crypto_currency
          type: string
        unique_transaction_reference_number:
          maxLength: 17
          minLength: 1
          type: string
        visa_transaction_purpose:
          type: string
    orignalcredit_request_model:
      required:
        - amount
        - card_token
        - mid
        - type
      type: object
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        screening_score:
          type: string
        sender_data:
          $ref: '#/components/schemas/original_credit_sender_data'
        transactionPurpose:
          type: string
        type:
          enum:
            - account_to_account
            - person_to_person
            - prepaid
            - wallet_transfer
            - money_transfer_by_bank
            - business_to_business
            - disbursement
            - government_disbursement
            - gambling_payout
            - loyalty
            - merchant_disbursement
            - online_gambling_payout
            - pension_disbursement
            - prepaid_loads
            - card_bill_payment
            - bill_payment
            - cash_claim
            - cash_in
            - cash_out
            - mobile_air_time_payment
            - money_transfer_by_merchant
            - face_to_face_merchant_payment
            - government_payment
            - payments_goods_services
            - purchase_repayment
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
    other_poi:
      type: object
      properties:
        allow:
          type: boolean
          default: true
        card_presence_required:
          type: boolean
          description: Default = false
          default: false
        cardholder_presence_required:
          type: boolean
          description: Default = false
          default: false
        track1_discretionary_data:
          type: string
        track2_discretionary_data:
          type: string
        use_static_pin:
          type: boolean
          default: false
    pan_request:
      required:
        - pan
      type: object
      properties:
        cvv_number:
          type: string
        expiration:
          type: string
        pan:
          type: string
    pan_response:
      required:
        - card_token
        - created_time
        - last_modified_time
        - user_token
      type: object
      properties:
        card_token:
          type: string
          description: The unique identifier of the card
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        user_token:
          type: string
          description: The unique identifier of the card user
    password_update_model:
      required:
        - current_password
        - new_password
      type: object
      properties:
        current_password:
          maxLength: 255
          minLength: 1
          type: string
          description: Current password to the cardholder's user account on the Marqeta platform.
        new_password:
          maxLength: 255
          minLength: 1
          type: string
          description: "New password to the cardholder's user account on the Marqeta platform.\n\n* Must contain at least one numeral +\n* Must contain at least one lowercase letter +\n* Must contain at least one uppercase letter +\n* Must contain at least one of these symbols: `@ # $ % ! ^ & * ( ) \\ _ + ~ ` - = [ ] { } , ; : ' \" , . / < > ?`"
    payment_card_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - account_suffix
            - account_type
            - exp_date
          type: object
          properties:
            account_suffix:
              type: string
            account_type:
              type: string
            business_token:
              type: string
              description: Required if 'user_token' is null
            exp_date:
              type: string
            user_token:
              type: string
              description: Required if 'business_token' is null
    payment_card_response_model:
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - exp_date
        - is_default_account
        - last_modified_time
        - token
        - type
      type: object
      properties:
        account_suffix:
          type: string
          description: Account identifier appended to the payment card number.
        account_type:
          type: string
          description: Type of payment card account.
        active:
          type: boolean
          description: Specifies whether the account is active.
          default: false
        business_token:
          type: string
          description: "Unique identifier of the business account holder.\nThis token is returned if a `user_token` is not specified."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        exp_date:
          type: string
          description: Payment card expiration date.
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        token:
          type: string
          description: Unique identifier of the funding source.
        type:
          type: string
          description: Funding source type.
        user_token:
          type: string
          description: "Unique identifier of the user account holder.\nThis token is returned if a `business_token` is not specified."
    payment_facilitator_model:
      type: object
      properties:
        city:
          type: string
          description: Payment facilitator's city.
        country_code:
          type: string
          description: Payment facilitator's country code.
        postal_code:
          type: string
          description: Payment facilitator's postal code.
        state:
          type: string
          description: Payment facilitator's state location.
        street_address:
          type: string
          description: Payment facilitator's street address.
      description: Information about the payment facilitator of an account funding or original credit transaction.
    peer_transfer_request:
      required:
        - amount
        - currency_code
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transfer.
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Additional descriptive text about the transfer.
        recipient_business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the business account holder that receives funds.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        recipient_user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the user account holder that receives funds.\n\nSend a `GET` request to `/users` to retrieve user tokens."
        sender_business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the business account holder that sends funds.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        sender_user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Specifies the user account holder that sends funds.\n\nSend a `GET` request to `/users` to retrieve user tokens."
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Metadata about the peer transfer.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the peer transfer request.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    peer_transfer_response:
      required:
        - amount
        - created_time
        - currency_code
        - token
      type: object
      properties:
        amount:
          type: number
          description: Amount of the transfer.
        created_time:
          type: string
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        memo:
          type: string
          description: Additional descriptive text about the peer transfer.
        recipient_business_token:
          type: string
          description: Specifies the business account holder that receives funds.
        recipient_user_token:
          type: string
          description: Specifies the user account holder that receives funds.
        sender_business_token:
          type: string
          description: Specifies the business account holder that sends funds.
        sender_user_token:
          type: string
          description: Specifies the user account holder that sends funds.
        tags:
          type: string
          description: Metadata about the peer transfer.
        token:
          type: string
          description: Unique identifier of the peer transfer request.
      description: 'Contains information about a peer transfer, including sender and recipient tokens, transfer amount, and currency code.'
    pin_request:
      required:
        - control_token
        - pin
      type: object
      properties:
        control_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.\nThis value cannot be updated."
        pin:
          type: string
          description: Four-digit number to associate with the card.
    pin_reveal_request:
      required:
        - cardholder_verification_method
        - control_token
      type: object
      properties:
        cardholder_verification_method:
          enum:
            - BIOMETRIC_FACE
            - BIOMETRIC_FINGERPRINT
            - LOGIN
            - EXP_CVV
            - OTP_CVV
            - OTP
            - OTHER
          type: string
          description: "The supplemental method used to verify the cardholder's identity before revealing the card's personal identification number (PIN).\n\nThe possible cardholder verification methods are:\n\n* *BIOMETRIC_FACE:* In-app authentication via facial recognition\n* *BIOMETRIC_FINGERPRINT:* In-app authentication via biometric fingerprint\n* *EXP_CVV:* In-app authentication by entering the card's expiration date and card verification value (CVV)\n* *LOGIN:* In-app authentication by re-entering the app password\n* *OTP:* Two-factor authentication involving a one-time password (OTP)\n* *OTP_CVV:* Two-factor authentication involving the card's CVV and an OTP\n* *OTHER:* Authentication that relies on other secure methods"
        control_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.\nThis value cannot be updated."
    ping_response:
      type: object
      properties:
        env:
          type: string
        id:
          type: string
        revision:
          type: string
        success:
          type: boolean
        timestamp:
          type: string
        version:
          type: string
    poi:
      type: object
      properties:
        atm:
          type: boolean
          description: Default = false
          default: false
        ecommerce:
          type: boolean
          default: true
        other:
          $ref: '#/components/schemas/other_poi'
    pos:
      type: object
      properties:
        card_data_input_capability:
          enum:
            - UNKNOWN
            - NO_TERMINAL
            - MAG_STRIPE
            - MAG_STRIPE_CONTACTLESS
            - MAG_STRIPE_KEY_ENTRY
            - CHIP
            - CHIP_CONTACTLESS
            - CHIP_MAG_STRIPE
            - CHIP_MAG_STRIPE_KEY_ENTRY
            - KEY_ENTRY
            - OCR
            - MICR
            - BAR_CODE
          type: string
          description: How the terminal accepts card data.
        card_holder_presence:
          type: boolean
          description: Whether the cardholder was present during the transaction.
          default: false
        card_presence:
          type: boolean
          description: Whether the card was present during the transaction.
          default: false
        cardholder_authentication_method:
          enum:
            - UNSPECIFIED
            - NON_AUTHENTICATED
            - SIGNATURE
            - PIN
            - ID_VERIFIED
          type: string
          description: Method used to authenticate the cardholder.
        country_code:
          type: string
          description: Country code of the card acceptor or terminal.
        is_installment:
          type: boolean
          description: Whether the transaction is an installment payment.
          default: false
        is_recurring:
          type: boolean
          description: Whether the transaction is recurring.
          default: false
        pan_entry_mode:
          enum:
            - UNKNOWN
            - MANUAL
            - MAG_STRIPE
            - MAG_STRIPE_CONTACTLESS
            - BAR_CODE
            - OCR
            - MICR
            - CHIP
            - CHIP_CONTACTLESS
            - CARD_ON_FILE
            - CHIP_FALLBACK
            - OTHER
          type: string
          description: Method used for capturing the card primary account number (PAN) during the transaction.
        partial_approval_capable:
          type: boolean
          description: Indicates whether the card acceptor or terminal supports partial-approval transactions.
          default: false
        pin_entry_mode:
          enum:
            - UNKNOWN
            - 'TRUE'
            - 'FALSE'
            - DEFECTIVE
          type: string
          description: "Indicates whether the card acceptor or terminal can capture card personal identification numbers (PINs).\n\n*NOTE:* This field does not indicate whether a PIN was entered."
        pin_present:
          type: boolean
          description: Indicates whether the cardholder entered a PIN during the transaction.
          default: false
        purchase_amount_only:
          type: boolean
          description: Indicates whether the card acceptor or terminal supports purchase-only approvals.
          default: false
        special_condition_indicator:
          enum:
            - UNSPECIFIED
            - CRYPTOCURRENCY_PURCHASE
            - QUASI_CASH
            - DEBT_PAYMENT
            - CENTRAL_BANK_DIGITAL_CURRENCY_PURCHASE
            - STABLECOIN_PURCHASE
            - BLOCKCHAIN_NATIVE_TOKEN_PURCHASE
            - NON_FUNGIBLE_TOKEN_PURCHASE
          type: string
          description: "Indicates a higher-risk operation, such as a quasi-cash or cryptocurrency transaction.\n\nThese transactions typically involve non-financial institutions."
        terminal_attendance:
          enum:
            - UNSPECIFIED
            - ATTENDED
            - UNATTENDED
            - NO_TERMINAL
          type: string
          description: Whether the card acceptor/terminal was attended.
        terminal_id:
          type: string
          description: Card acceptor or terminal identification number.
        terminal_location:
          enum:
            - ON_PREMISE
            - OFF_PREMISE_MERCHANT
            - OFF_PREMISE_CARDHOLDER
            - NO_TERMINAL
          type: string
          description: Location of the card acceptor/terminal.
        terminal_type:
          enum:
            - AUTO_DISPENSER_WITH_PIN
            - SELF_SERVICE
            - LIMITED_AMOUNT
            - IN_FLIGHT
            - ECOMMERCE
            - TRANSPONDER
          type: string
          description: Type of card acceptor/terminal.
        transaction_initiated_by:
          enum:
            - CONSUMER
            - MERCHANT
            - UNKNOWN
            - MARQETA
            - NETWORK
          type: string
          description: Specifies the initiator of the transaction.
        transaction_initiated_category:
          enum:
            - CARD_ON_FILE
            - RECURRING_VAR_AMT_FIXED_FREQ
            - RECURRING_PAYMENT
            - INSTALLMENT_PAYMENT
            - UNSCHEDULED_PAYMENT
            - PARTIAL_SHIPMENT
            - DELAYED_PAYMENT
            - NO_SHOW
            - RESUBMISSION
            - DEFERRED_BILLING
            - ACCOUNT_INQUIRY
            - INCREMENTAL_AUTHORIZATION
            - REAUTHORIZATION
          type: string
          description: Specifies the category of a point-of-sale transaction.
        zip:
          type: string
          description: United States ZIP code of the card acceptor or terminal.
      description: "Contains information about the point of sale, including details on how the card was presented.\n\nReturned if provided by the card network, and the request uses Transaction Model v2 of the Marqeta Core API.\nNot returned for Transaction Model v1 requests."
    pre_kyc_controls:
      type: object
      properties:
        balance_max:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: Minimum is 0
        cash_access_enabled:
          type: boolean
          default: false
        enable_non_program_loads:
          type: boolean
          default: false
        international_enabled:
          type: boolean
          default: false
        is_reloadable_pre_kyc:
          type: boolean
          default: false
    preceding_transaction:
      type: object
      properties:
        amount:
          type: number
          description: Amount of the preceding transaction.
        token:
          type: string
          description: Unique identifier of the preceding transaction.
      description: "Returned for `authorization.clearing` transaction types following a financial advice.\n\nContains information about the preceding transaction."
    program:
      required:
        - long_code
        - program_id
        - short_code
      type: object
      properties:
        long_code:
          type: string
          description: The program long code on the Marqeta platform.
        program_id:
          type: string
          description: The program identifier on the Marqeta platform.
        short_code:
          type: string
          description: The program short code on the Marqeta platform.
      description: Information about the program on the Marqeta platform.
    program_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - name
          type: object
          properties:
            name:
              type: string
    program_funding_source_request:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the program funding source is active.
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program funding source.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source.\nIf you do not include a token, the system will generate one automatically.\nAs this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.\nThis value cannot be updated."
    program_funding_source_response:
      required:
        - account
        - created_time
        - last_modified_time
        - name
        - token
      type: object
      properties:
        account:
          type: string
          description: Account identifier.
        active:
          type: boolean
          description: "Indicates whether the program funding source is active.\nThis field is returned if it exists in the resource."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last modified, in UTC.'
          format: date-time
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program funding source.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the funding source.
    program_funding_source_update_request:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the program funding source is active.
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the program funding source.
    program_gateway_funding_source_model:
      allOf:
        - $ref: '#/components/schemas/funding_source_model'
        - required:
            - name
          type: object
          properties:
            name:
              type: string
    program_reserve_account_balance:
      type: object
      properties:
        available_balance:
          type: number
          description: "Ledger balance, minus any authorized transactions that have not yet cleared.\nWhen using JIT Funding, this balance is usually equal to $0.00."
        balances:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/program_reserve_account_balance'
          description: "Contains program reserve account balance information, organized by currency code.\nSometimes referred to as a _program funding account_."
        credit_balance:
          type: number
          description: Not currently in use.
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        ledger_balance:
          type: number
          description: "When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.\nWhen using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared."
        pending_credits:
          type: number
          description: 'ACH loads that have been accepted, but for which the funding time has not yet elapsed.'
    program_reserve_deposit_request:
      required:
        - amount
        - currency_code
        - token
      type: object
      properties:
        amount:
          type: number
          description: Amount of the deposit.
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        idempotentHash:
          type: string
          description: Idempotent hash value associated with the deposit request.
        is_collateral:
          type: boolean
        memo:
          type: string
          description: Memo or note describing the deposit request.
        tags:
          type: string
          description: Comma-delimited list of tags describing the deposit request.
        token:
          type: string
          description: Unique identifier of the deposit request.
    program_reserve_transaction_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        amount:
          type: number
          description: "Amount of the program reserve account credit or debit.\nSometimes referred to as a _program funding account_."
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        is_collateral:
          type: boolean
        last_modified_time:
          type: string
          description: 'The date and time when the resource was last modified, in UTC.'
          format: date-time
        memo:
          type: string
          description: Memo or note describing the transaction.
        state:
          enum:
            - PENDING
            - COMPLETE
          type: string
          description: Transaction state.
        tags:
          type: string
          description: Comma-delimited list of tags describing the transaction.
        token:
          type: string
          description: The unique identifier of the transaction response.
        transaction_token:
          type: string
          description: Unique identifier of the transaction.
        type:
          enum:
            - CREDIT
            - DEBIT
            - PENDING_CREDIT
            - PENDING_DEBIT
          type: string
          description: Transaction type.
    program_transfer:
      required:
        - amount
        - currency_code
        - type_token
      type: object
      properties:
        amount:
          type: number
          description: Amount of program transfer.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business.\nPass either a `business_token` or a `user_token`, not both.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_model'
          description: "Contains attributes that define characteristics of one or more fees.\nThis array is returned in the response when it is included in the request."
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Memo or note describing the program transfer.
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Comma-delimited list of tags describing the program transfer.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the program transfer.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        type_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the program transfer type.\n\nSend a `GET` request to `/programtransfers/types` to retrieve program transfer type tokens."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user.\nPass either a `user_token` or a `business_token`, not both.\n\nSend a `GET` request to `/users` to retrieve business tokens."
    program_transfer_response:
      required:
        - amount
        - currency_code
        - transaction_token
        - type_token
      type: object
      properties:
        amount:
          type: number
          description: Amount of program transfer.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business account holder.\nReturned if `user_token` is not specified."
        created_time:
          type: string
          description: 'Date and time when the program transfer object was created, in UTC.'
          format: date-time
        currency_code:
          type: string
          description: Three-digit ISO 4217 currency code.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/fee_detail'
          description: Contains attributes that define characteristics of one or more fees.
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Additional description of the program transfer.
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Comma-delimited list of tags describing the program transfer.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the program transfer.
        transaction_token:
          type: string
          description: Unique identifier of the transaction.
        type_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the program transfer type.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user account holder.\nReturned if `business_token` is not specified."
      description: 'Contains information about a program transfer, which moves funds from an account holder''s GPA to a program funding source.'
    program_transfer_type_request:
      required:
        - memo
        - program_funding_source_token
      type: object
      properties:
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Memo or note describing the program transfer type.
        program_funding_source_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the program funding source to which program transfers will be credited.\n\nSend a `GET` request to `/fundingsources/program` to retrieve program funding source tokens."
        tags:
          maxLength: 255
          minLength: 1
          type: string
          description: Comma-delimited list of tags describing the program transfer type.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the program transfer type.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    program_transfer_type_response:
      required:
        - program_funding_source_token
        - token
      type: object
      properties:
        created_time:
          type: string
          description: 'The date and time when the program transfer type object was created, in UTC.'
          format: date-time
        last_modified_time:
          type: string
          description: 'Date and time when the program transfer type object was last modified, in UTC.'
          format: date-time
        memo:
          type: string
          description: Memo or note describing the program transfer type.
        program_funding_source_token:
          type: string
          description: Unique identifier of the program funding source to which program transfers will be credited.
        tags:
          type: string
          description: Comma-delimited list of tags describing the program transfer type.
        token:
          type: string
          description: Unique identifier of the program transfer type request object.
    provisioning_controls:
      type: object
      properties:
        dwt_tar_avs_decline_on_address_number_mismatch:
          type: boolean
        dwt_tar_avs_decline_on_postal_code_mismatch:
          type: boolean
        dwt_use_card_status_during_auth:
          type: boolean
        dwt_verify_atc_during_auth:
          type: boolean
        enable_discretionary_data_during_tar:
          type: boolean
        force_yellow_path_for_card_product:
          type: boolean
          description: A value of `true` requires identity verification set-up for all digital wallets at the card product level.
        in_app_provisioning:
          $ref: '#/components/schemas/in_app_provisioning'
        manual_entry:
          $ref: '#/components/schemas/manual_entry'
        wallet_provider_card_on_file:
          $ref: '#/components/schemas/wallet_provider_card_on_file'
        web_push_provisioning:
          $ref: '#/components/schemas/web_push_provisioning'
    push_to_card_disburse_request:
      required:
        - amount
        - currency_code
        - payment_instrument_token
      type: object
      properties:
        amount:
          maximum: 50000
          exclusiveMaximum: false
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        currency_code:
          type: string
        memo:
          maxLength: 99
          minLength: 1
          type: string
        payment_instrument_token:
          maxLength: 36
          minLength: 1
          type: string
        soft_descriptor:
          $ref: '#/components/schemas/PTCSoftDescriptor'
        tags:
          maxLength: 255
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    push_to_card_disbursement_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        amount:
          type: number
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        currency_code:
          type: string
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        memo:
          maxLength: 99
          minLength: 1
          type: string
        payment_instrument_token:
          maxLength: 36
          minLength: 1
          type: string
        status:
          type: string
        tags:
          maxLength: 255
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    push_to_card_request:
      required:
        - address_1
        - city
        - country
        - cvv
        - exp_date
        - name_on_card
        - pan
        - postal_code
        - state
        - user_token
      type: object
      properties:
        address_1:
          maxLength: 255
          minLength: 1
          type: string
        address_2:
          maxLength: 255
          minLength: 1
          type: string
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          type: string
        cvv:
          type: string
        exp_date:
          type: string
        name_on_card:
          maxLength: 50
          minLength: 1
          type: string
        pan:
          maxLength: 19
          minLength: 14
          type: string
        postal_code:
          maxLength: 10
          minLength: 1
          type: string
        state:
          maxLength: 2
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          maxLength: 36
          minLength: 1
          type: string
    push_to_card_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        address_1:
          maxLength: 255
          minLength: 1
          type: string
        address_2:
          maxLength: 255
          minLength: 1
          type: string
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        exp_date:
          type: string
        fast_fund_transfer_eligible:
          type: boolean
          default: false
        gambling_fund_transfer_eligible:
          type: boolean
          default: false
        last_four:
          type: string
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        last_name:
          type: string
        name_on_card:
          type: string
        postal_code:
          maxLength: 10
          minLength: 1
          type: string
        state:
          maxLength: 2
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
    real_time_fee_group:
      required:
        - active
        - name
        - token
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the real-time fee group is active.
          default: false
        created_time:
          type: string
          description: 'Date and time when the real-time fee group was created, in UTC.'
          format: date-time
        fee_tokens:
          uniqueItems: true
          type: array
          items:
            type: string
          description: Specifies the fees in this real-time fee group.
        last_modified_time:
          type: string
          description: 'Date and time when the real-time fee group was last modified, in UTC.'
          format: date-time
        name:
          type: string
          description: Descriptive name for the real-time fee group.
        token:
          type: string
          description: Unique identifier of the real-time fee group.
      description: Contains information about a real-time fee group.
    real_time_fee_group_create_request:
      required:
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the real-time fee group is active.
          default: true
        fee_tokens:
          uniqueItems: true
          type: array
          items:
            type: string
          description: "Unique identifiers of the fees in this real-time fee group.\nSend a `GET` request to `/fees` to retrieve fee resource tokens.\n\nNo two fees in the group can be applicable to the same transaction type (in other words, each fee must have a different value for its `real_time_assessment.transaction_type` field)."
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Descriptive name for the real-time fee group.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the real-time fee group.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    real_time_fee_group_request:
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the real-time fee group is active.
          default: true
        fee_tokens:
          uniqueItems: true
          type: array
          items:
            type: string
          description: "Specifies the fees in this real-time fee group.\nSend a `GET` request to `/fees` to retrieve fee resources tokens.\n\nNo two fees in the group can be applicable to the same transaction type (in other words, each fee must have a different value for its `real_time_assessment.transaction_type` field)."
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Descriptive name for the real-time fee group.
    real_time_standin_criteria:
      type: object
      properties:
        enabled:
          type: boolean
          default: false
        include_application_errors:
          type: boolean
          default: false
        include_connection_errors:
          type: boolean
          default: false
        include_response_timeouts:
          type: boolean
          default: false
    realtime_fee_transfer_request:
      type: object
      properties:
        fee:
          $ref: '#/components/schemas/fee_model'
        original_transaction_token:
          type: string
        token:
          type: string
    request_for_apple_pay_wpp_JWT:
      required:
        - card_token
      type: object
      properties:
        card_token:
          type: string
          description: Unique identifier of the card resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
        req-sys-id:
          type: string
          description: Random pseudo-unique value used for troubleshooting between multiple parties.
    request_for_wpp_parameters:
      required:
        - card_token
      type: object
      properties:
        card_token:
          type: string
          description: Unique identifier of the card resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
    reset_user_password_email_model:
      required:
        - email
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: Cardholder email address.
    reset_user_password_model:
      required:
        - new_password
        - user_token
      type: object
      properties:
        new_password:
          maxLength: 255
          minLength: 1
          type: string
          description: New password to the cardholder's user account on the Marqeta platform.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the cardholder.
    response:
      required:
        - code
        - memo
      type: object
      properties:
        additional_information:
          type: string
          description: "Information about the velocity control applied to the transaction.\n\n*NOTE:* This field is returned only in transaction response objects.\nIt is not returned in address verification or card security verification response objects."
        code:
          type: string
          description: "Four-digit response code for address verification, card security code verification, or transactions.\n\nFor account name verification, the four digits correspond with assertions that the first, middle, last, and full name of the cardholder on the Marqeta platform match the data provided by the cardholder.\n`0` indicates no validation was performed, `1` indicates the match was unsuccessful (unmatched), `2` indicates the match was partial, and `3` indicates the match was exact.\nFor example:\n\n[cols=\"2,3,3,3,3\"]\n!===\n! Code ! First Name ! Middle Name ! Last Name ! Full Name\n\n! 0000\n! Not validated\n! Not validated\n! Not validated\n! Not validated\n\n! 1111\n! Unmatched\n! Unmatched\n! Unmatched\n! Unmatched\n\n! 3333\n! Exact match\n! Exact match\n! Exact match\n! Exact match\n\n! 1232\n! Unmatched\n! Partial match\n! Exact match\n! Partial match\n!===\n\nFor address verification responses, the code is an assertion by the Marqeta platform as to whether its address verification data matches that provided by the cardholder:\n\n[cols=\"2,3,3\"]\n!===\n! Code ! Address ! Postal Code\n\n! 0000\n! Match\n! Match\n\n! 0001\n! Match\n! Unmatched\n\n! 0100\n! Unmatched\n! Match\n\n! 0101\n! Unmatched\n! Unmatched\n\n! 0200\n! Data not present\n! Match\n\n! 0201\n! Data not present\n! Unmatched\n\n! 0002\n! Match\n! Data not present\n\n! 0102\n! Unmatched\n! Data not present\n\n! 0303\n! Not validated\n! Not validated\n!===\n\nFor card security verification, the code indicates whether the verification check passed and can have these possible values:\n\n* 0000 – passed\n* 0001 – did not pass\n\nFor a transaction, the code describes the outcome of the attempted transaction.\nFor the full list of transaction codes, see <</developer-guides/about-transactions#_transaction_response_codes, Transaction response codes>>."
        memo:
          type: string
          description: Additional text that describes the response.
      description: 'Response codes and memos for account name verification, address verification, card security verification, and transactions.'
    result:
      type: object
      properties:
        codes:
          type: array
          items:
            $ref: '#/components/schemas/result_code'
          description: An array of KYC verification result code objects.
        status:
          type: string
          description: KYC verification status.
      description: Contains information about the KYC verification result.
    result_code:
      type: object
      properties:
        code:
          type: string
          description: 'For any `pending` or `failure` outcome, see the <<user_kyc_failure_codes, User KYC failure codes>> table, the <<outcome_reasons_for_the_business, Outcome reasons for the business>> table, or the <<outcome_reasons_for_individuals_associated_with_a_business, Outcome reasons for individuals associated with a business>> table.'
        message:
          type: string
          description: Result code description.
      description: Contains the KYC result code and a descriptive message about that codes.
    risk_assessment:
      type: object
      properties:
        score:
          type: string
          description: Wallet provider's decision as to whether the digital wallet token should be provisioned.
        version:
          type: string
          description: Wallet provider's risk assessment version.
      description: Contains the digital wallet provider's risk assessment for provisioning the digital wallet token.
    riskcontrol_tags:
      type: object
      properties:
        rule_name:
          type: string
          description: 'Name of the rule, as defined in the Real-Time Decisioning dashboard, that was triggered.'
        tag:
          type: string
          description: Tag name defined in the rule definition in the Real-Time Decisioning dashboard.
        values:
          type: array
          items:
            type: string
          description: Value associated with the tag.
      description: The RiskControl tags that were triggered by the transaction.
    samsung_push_tokenize_request_data:
      type: object
      properties:
        card_type:
          type: string
          description: Specifies the type of card.
        display_name:
          type: string
          description: "Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).\n`Visa 5678`, for example."
        extra_provision_payload:
          type: string
          description: Encrypted card or cardholder details.
        last_digits:
          type: string
          description: Last four digits of the primary account number of the physical or virtual card.
        network:
          type: string
          description: Specifies the card network of the physical or virtual card.
        token_service_provider:
          type: string
          description: 'Specifies the network that provides the digital wallet token service, as determined by the Samsung Wallet library.'
      description: Contains details about a card tokenization push request.
    selective_auth:
      type: object
      properties:
        dmd_location_sensitivity:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          type: integer
          format: int32
          default: 0
        enable_regex_search_chain:
          type: boolean
          default: false
        sa_mode:
          enum:
            - 0
            - 1
            - 2
          type: integer
          format: int32
          default: 1
    sending_provisioning_data_to_google_pay_backend_request:
      required:
        - card_setting
        - card_token
        - client_session_id
        - integrator_id
        - public_device_id
        - public_wallet_id
        - server_session_id
        - token_setting
      type: object
      properties:
        card_setting:
          enum:
            - 0
            - 1
          type: integer
          description: "Indicates if the Funding Primary Account Number (FPAN) will be attempted.\n\n* *1* - FPAN save will be attempted.\n* *0* - FPAN save will not be attempted."
          format: int32
          example: 0
        card_token:
          type: string
          description: Unique identifier of the card resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
        client_session_id:
          type: string
          description: String provided by Google Wallet that identifies the client session.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
        integrator_id:
          type: string
          description: Google-assigned string that uniquely identifies both the integrator that is initiating the session and the issuer of the card.
          example: ACMEISSUER_1
        public_device_id:
          type: string
          description: String provided by Google Wallet that identifies the Android device that will receive the digital wallet token.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
        public_wallet_id:
          type: string
          description: String provided by Google Wallet that identifies the device-scoped wallet that receives the digital wallet token.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
        server_session_id:
          type: string
          description: String provided by Google Wallet that identifies the backend session.
          example: 8c84fab9-889c-4cb7-a330-accac5799ea5
        token_setting:
          enum:
            - 0
            - 1
          type: integer
          description: "Indicates if tokenization will be attempted.\n\n* *1* - Tokenization will be attempted.\n* *0* - Tokenization will not be attempted."
          format: int32
          example: 0
    settlement_data:
      type: object
      properties:
        amount:
          type: number
          description: The settled amount.
        conversion_rate:
          type: number
          description: "Returned when the transaction currency is different from the origination currency.\n\nConversion rate between the origination currency and the settlement currency."
        currency_code:
          type: string
          description: The ISO 4217 code of the currency used in the transaction.
      description: 'Contains information from the card network about currency conversion at the time of settlement, including the original currency of the transaction, the amount of the transaction in the original currency, and the conversion rate.'
    shipping:
      type: object
      properties:
        care_of_line:
          type: string
          description: 255 char max
        method:
          enum:
            - LOCAL_MAIL
            - LOCAL_MAIL_PACKAGE
            - GROUND
            - TWO_DAY
            - OVERNIGHT
            - INTERNATIONAL
            - INTERNATIONAL_PRIORITY
            - LOCAL_PRIORITY
            - FEDEX_EXPEDITED
            - FEDEX_REGULAR
            - UPS_EXPEDITED
            - UPS_REGULAR
            - USPS_EXPEDITED
            - USPS_REGULAR
          type: string
        recipient_address:
          $ref: '#/components/schemas/fulfillment_address_request'
        return_address:
          $ref: '#/components/schemas/fulfillment_address_request'
    simulation_response_model:
      type: object
      properties:
        raw_iso8583:
          type: object
          additionalProperties:
            type: object
        transaction:
          $ref: '#/components/schemas/transaction_model'
    spend_control_association:
      type: object
      properties:
        card_product_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the card product.\n\nPass either `card_product_token` or `user_token`, not both."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the cardholder.\n\nPass either `card_product_token` or `user_token`, not both."
      description: Defines the group of users to which the velocity control applies.
    ssn_response_model:
      type: object
      properties:
        nin:
          type: string
          description: National Identification Number (NIN).
        sin:
          type: string
          description: Social Insurance Number (SIN).
        ssn:
          type: string
          description: United States Social Security Number (SSN).
        tin:
          type: string
          description: Taxpayer Identification Number (TIN).
      description: Contains tax identification information.
    store_model:
      required:
        - address1
        - city
        - merchant_token
        - mid
        - name
        - state
        - zip
      type: object
      properties:
        active:
          type: boolean
          default: true
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        keyed_auth_cvv_enforced:
          type: boolean
          default: false
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        merchant_token:
          maxLength: 36
          minLength: 0
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        name:
          maxLength: 40
          minLength: 0
          type: string
        network_mid:
          maxLength: 50
          minLength: 1
          type: string
        partial_approval_capable:
          type: boolean
          default: false
        partial_auth_flag:
          type: boolean
          default: true
        phone:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 255
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: The unique identifier of the merchant
        zip:
          maxLength: 10
          minLength: 0
          type: string
    store_response_model:
      required:
        - address1
        - city
        - created_time
        - last_modified_time
        - merchant_token
        - mid
        - name
        - state
      type: object
      properties:
        active:
          type: boolean
          default: true
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        keyed_auth_cvv_enforced:
          type: boolean
          default: false
        last_modified_time:
          type: string
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        merchant_token:
          maxLength: 36
          minLength: 0
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        name:
          maxLength: 40
          minLength: 0
          type: string
        network_mid:
          maxLength: 50
          minLength: 1
          type: string
        partial_approval_capable:
          type: boolean
          default: false
        partial_auth_flag:
          type: boolean
          description: 1 char max
          default: true
        phone:
          maxLength: 10
          minLength: 0
          type: string
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 255
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: The unique identifier of the merchant
        zip:
          maxLength: 10
          minLength: 0
          type: string
    store_update_model:
      required:
        - active
        - address1
        - city
        - merchant_token
        - mid
        - name
        - state
        - zip
      type: object
      properties:
        active:
          type: boolean
          default: true
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        keyed_auth_cvv_enforced:
          type: boolean
          default: false
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        merchant_token:
          maxLength: 36
          minLength: 0
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        name:
          maxLength: 40
          minLength: 0
          type: string
        network_mid:
          maxLength: 50
          minLength: 1
          type: string
        partial_approval_capable:
          type: boolean
          default: false
        partial_auth_flag:
          type: boolean
          description: 1 char max
          default: true
        phone:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 255
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: The unique identifier of the merchant
        zip:
          maxLength: 10
          minLength: 0
          type: string
    strong_customer_authentication_limits:
      type: object
      properties:
        cavv_authentication_amount_incremental_percentage:
          type: string
        enable_biometric_bypass_sca_contactless:
          type: boolean
        enable_cavv_authentication_amount_validation:
          type: boolean
        enable_issuer_tra_exemption:
          type: boolean
        sca_contactless_cumulative_amount_limit:
          type: number
        sca_contactless_transaction_limit:
          type: number
        sca_contactless_transactions_count_limit:
          type: integer
          format: int32
        sca_contactless_transactions_currency:
          type: string
        sca_lvp_cumulative_amount_limit:
          type: number
        sca_lvp_transaction_limit:
          type: number
        sca_lvp_transactions_count_limit:
          type: integer
          format: int32
        sca_lvp_transactions_currency:
          type: string
        sca_tra_exemption_amount_limit:
          type: number
    tag:
      type: object
      properties:
        name:
          type: string
          description: Name of the tag.
        value:
          type: string
          description: Value of the tag.
    terminal_model:
      type: object
      properties:
        card_presence:
          type: string
          description: Indicates whether the card was present during the transaction.
        cardholder_presence:
          type: string
          description: Indicates whether the cardholder was present during the transaction.
        partial_approval_capable:
          type: string
          description: Indicates whether the card acceptor or terminal supports partial-approval transactions.
        pin_present:
          type: string
          description: Indicates whether the cardholder entered a PIN during the transaction.
        special_condition_indicator:
          enum:
            - UNSPECIFIED
            - CRYPTOCURRENCY_PURCHASE
            - QUASI_CASH
            - DEBT_PAYMENT
            - CENTRAL_BANK_DIGITAL_CURRENCY_PURCHASE
            - STABLECOIN_PURCHASE
            - BLOCKCHAIN_NATIVE_TOKEN_PURCHASE
            - NON_FUNGIBLE_TOKEN_PURCHASE
          type: string
          description: "Indicates a higher-risk operation, such as a quasi-cash or cryptocurrency transaction.\n\nThese transactions typically involve non-financial institutions."
        tid:
          type: string
          description: Card acceptor or terminal identification number.
        transaction_initiated_by:
          enum:
            - CONSUMER
            - MERCHANT
            - UNKNOWN
            - MARQETA
            - NETWORK
          type: string
          description: Specifies the initiator of the transaction.
        transaction_initiated_category:
          enum:
            - CARD_ON_FILE
            - RECURRING_VAR_AMT_FIXED_FREQ
            - RECURRING_PAYMENT
            - INSTALLMENT_PAYMENT
            - UNSCHEDULED_PAYMENT
            - PARTIAL_SHIPMENT
            - DELAYED_PAYMENT
            - NO_SHOW
            - RESUBMISSION
            - DEFERRED_BILLING
            - ACCOUNT_INQUIRY
            - INCREMENTAL_AUTHORIZATION
            - REAUTHORIZATION
          type: string
          description: Specifies the category of a point-of-sale transaction.
      description: "Contains information about the point of sale, including details on how the card was presented.\n\nReturned if provided by the card network, and the request uses Transaction Model v1 of the Marqeta Core API.\nNot returned for Transaction Model v2 requests."
    text:
      required:
        - name_line_1
      type: object
      properties:
        name_line_1:
          $ref: '#/components/schemas/text_value'
        name_line_2:
          $ref: '#/components/schemas/text_value'
        name_line_3:
          $ref: '#/components/schemas/text_value'
      description: Specifies personalized text that appears on the card.
    text_value:
      type: object
      properties:
        value:
          type: string
          description: Line of personalized text printed on the card.
    token_request:
      required:
        - account_number
        - cvv_number
        - exp_date
      type: object
      properties:
        account_number:
          type: string
          description: Payment card account number.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the business account holder.\nThis token is required if the `user_token` is not included.\n\nSend a `GET` request to `/businesses` to retrieve business tokens."
        cvv_number:
          maxLength: 4
          minLength: 3
          type: string
          description: Payment card CVV2 number.
        exp_date:
          type: string
          description: Payment card expiration date.
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
        postal_code:
          type: string
          description: Postal code of the account holder (user or business).
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding account.\nIf you do not include a token, the system will generate one automatically.\nAs this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.\nThis value cannot be updated."
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the user account holder.\nThis token is required if the `business_token` is not included.\n\nSend a `GET` request to `/users` to retrieve user tokens."
        zip:
          type: string
          description: United States ZIP code of the account holder (user or business).
    token_service_provider:
      required:
        - pan_reference_id
      type: object
      properties:
        correlation_id:
          type: string
          description: Unique value representing a tokenization request (Mastercard only).
        pan_reference_id:
          type: string
          description: Unique identifier of the digital wallet token primary account number (PAN) within the card network.
        token_assurance_level:
          type: string
          description: _(Mastercard only)_ Represents the confidence level in the digital wallet token.
        token_eligibility_decision:
          type: string
          description: Digital wallet's decision as to whether the digital wallet token should be provisioned.
        token_expiration:
          type: string
          description: Expiration date of the digital wallet token.
        token_pan:
          type: string
          description: Primary account number (PAN) of the digital wallet token.
        token_reference_id:
          type: string
          description: Unique identifier of the digital wallet token within the card network.
        token_requestor_id:
          type: string
          description: "Unique numerical identifier of the token requestor within the card network.\nThese ID numbers map to `token_requestor_name` field values as follows:\n\n*Mastercard*\n\n* 50110030273 – `APPLE_PAY`\n* 50120834693 – `ANDROID_PAY`\n* 50139059239 – `SAMSUNG_PAY`\n\n*Visa*\n\n* 40010030273 – `APPLE_PAY`\n* 40010075001 – `ANDROID_PAY`\n* 40010043095 – `SAMSUNG_PAY`\n* 40010075196 – `MICROSOFT_PAY`\n* 40010075338 – `VISA_CHECKOUT`\n* 40010075449 – `FACEBOOK`\n* 40010075839 – `NETFLIX`\n* 40010077056 – `FITBIT_PAY`\n* 40010069887 – `GARMIN_PAY`"
        token_requestor_name:
          type: string
          description: "Name of the token requestor within the card network.\n\n*NOTE:* The list of example values for this field is maintained by the card networks and is subject to change."
        token_score:
          type: string
          description: Token score assigned by the digital wallet.
        token_type:
          type: string
          description: Type of the digital wallet token.
      description: Contains information held and provided by the token service provider (card network).
    token_update_request:
      required:
        - exp_date
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the card funding source is active.
          default: true
        exp_date:
          type: string
          description: Expiration date for the payment card.
        is_default_account:
          type: boolean
          description: "If there are multiple funding sources, this field specifies which source is used by default in funding calls.\nIf there is only one funding source, the system ignores this field and always uses that source."
          default: false
    transaction_card_acceptor:
      type: object
      properties:
        address:
          type: string
          description: "Card acceptor's address.\nMay be returned if the request uses Transaction Model v1 of the Marqeta Core API.\nNot returned for Transaction Model v2 requests."
        city:
          type: string
          description: Card acceptor's city.
        country_code:
          type: string
          description: "Card acceptor's country code.\nMay be returned if the request uses Transaction Model v2 of the Marqeta Core API.\nNot returned for Transaction Model v1 requests."
        country_of_origin:
          type: string
          description: "The merchant's country of origin.\n\nA merchant's country of origin can be different from the country in which the merchant is located.\nFor example, embassies are physically located in countries that are not their country of origin: a Mexican embassy might be physically located in Singapore, but the country of origin is Mexico.\n\nThis field is included when the cardholder conducts a transaction with a government-controlled merchant using a Marqeta-issued card."
        customer_service_phone:
          type: string
        geographic_coordinates:
          type: string
          description: 'Geographic coordinates of the card acceptor in `latitudeE7,longitudeE7` format.'
        independent_sales_organization_id:
          type: string
        mcc:
          type: string
          description: Merchant category code (MCC).
        mcc_groups:
          type: array
          items:
            type: string
          description: An array of `mcc_groups`.
        merchant_tax_id:
          type: string
        merchant_vat_registration_id:
          type: string
          description: The VAT registration identifier of the merchant.
        mid:
          type: string
          description: The merchant identifier.
        name:
          type: string
          description: Card acceptor's name.
        network_assigned_id:
          type: string
          description: Identifier assigned by the card network.
        network_mid:
          type: string
          description: The merchant identifier on the card network.
        payment_facilitator_id:
          type: string
        payment_facilitator_name:
          type: string
          description: "The name of the payment facilitator, including the sub-merchant identifier, of an original credit transaction.\nThis field is returned when a payment facilitator participates in the transaction."
        phone:
          type: string
        poi:
          $ref: '#/components/schemas/terminal_model'
        postal_code:
          type: string
          description: Card acceptor's postal code.
        service_geographic_coordinates:
          type: string
          description: 'Geographic coordinates of the service provider in `latitudeE7,longitudeE7` format.'
        special_merchant_id:
          type: string
        state:
          type: string
          description: "Two-character state, province, or territorial abbreviation.\n\nFor a complete list of valid state and province abbreviations, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.\n\n*Note*: Non-US merchants may return more than 2 char for this field."
        sub_merchant_id:
          type: string
        transfer_service_provider_name:
          type: string
          description: "The name of the transfer service provider of a money transfer original credit transaction.\nThis field is included when a transfer service provider participates in the transaction."
        url:
          type: string
      description: Contains information about the merchant.
    transaction_controls:
      type: object
      properties:
        accepted_countries_token:
          type: string
          description: 50 char max (default = accept_us_only)
        address_verification:
          $ref: '#/components/schemas/avs_controls'
        allow_chip_fallback:
          type: boolean
          default: false
        allow_first_pin_set_via_financial_transaction:
          type: boolean
          default: false
        allow_gpa_auth:
          type: boolean
          default: false
        allow_mcc_group_authorization_controls:
          type: boolean
          default: false
        allow_network_load:
          type: boolean
          default: false
        allow_network_load_card_activation:
          type: boolean
          default: false
        allow_quasi_cash:
          type: boolean
          default: false
        always_require_icc:
          type: boolean
          default: false
        always_require_pin:
          type: boolean
          default: false
        enable_credit_service:
          type: boolean
          default: false
        enable_partial_auth_approval:
          type: boolean
          default: false
        ignore_card_suspended_state:
          type: boolean
          default: false
        notification_language:
          type: string
        quasi_cash_exempt_merchant_group_token:
          maxLength: 36
          minLength: 1
          type: string
          description: 36 char max
        quasi_cash_exempt_mids:
          type: string
        require_card_not_present_card_security_code:
          type: boolean
          default: false
        strong_customer_authentication_limits:
          $ref: '#/components/schemas/strong_customer_authentication_limits'
    transaction_device:
      type: object
      properties:
        binding_id:
          type: string
          description: Unique identifier of the data component bound to the credential.
        ip_address:
          type: string
          description: "IP address of the device.\nThe presence of the IP address helps determine if the transaction was initiated from an unusual network, helping establish a pattern of safe device usage that further confirms the authenticity of the consumer who initiated the transaction."
        location:
          type: string
          description: "Geographic coordinates of the device.\nContains the latitude and longitude of the device used when the cardholder was authenticated during checkout.\nThis field helps to determine if the transaction was initiated from an unexpected location."
        phone_number:
          type: string
          description: "Telephone number of the device.\nContains the phone number that was used to authenticate the consumer during checkout, or the consumer's preferred phone number.\nThe presence of the phone number helps establish the consumer's authenticity when matching the phone number provided during checkout to a list of known phone numbers for the consumer."
      description: "Contains information about the device used in the transaction to enhance the risk decisioning process.\nUse this data to improve fraud prevention and dispute resolution."
    transaction_metadata:
      type: object
      properties:
        airline:
          $ref: '#/components/schemas/airline'
        authorization_life_cycle:
          type: integer
          description: Number of days the pre-authorization is in effect.
          format: int32
        cross_border_transaction:
          type: boolean
          description: 'Whether the transaction is cross-border, i.e., when the merchant and the cardholder are located in two different countries.'
          default: false
        is_deferred_authorization:
          type: boolean
          description: 'Indicates an offline authorization made during an interruption of card network connectivity, such as a purchase on a flight.'
        is_lodging_auto_rental:
          type: boolean
          description: Whether the transaction is a lodging or vehicle rental.
          default: false
        lodging_auto_rental_start_date:
          type: string
          description: Date and time when the lodging check-in or vehicle rental began.
          format: date-time
        memo:
          maxLength: 99
          minLength: 1
          enum:
            - CREDIT_ADJUSTMENT
            - DEBIT_ADJUSTMENT
          type: string
          description: Indicates a credit or debit adjustment in a clearing transaction.
        moto_indicator:
          enum:
            - UNKNOWN
            - MANUAL
            - RECURRING
            - INSTALLMENT
            - OTHERS
          type: string
          description: Indicates the type of mail or telephone order transaction.
        one_leg_out:
          type: boolean
        payment_channel:
          enum:
            - OTHER
            - ATM
            - ECOMMERCE
            - MAIL
            - PHONE
            - MOTO
            - EU_MOTO_NON_SECURE
          type: string
          description: Channel from which the transaction was originated.
        special_purchase_id:
          type: string
        transaction_category:
          enum:
            - RETAIL_SALE
            - BILL_PAY
            - HOTEL
            - HEALTH_CARE
            - RESTAURANT
            - AUTO_RENTAL
            - AIRLINE
            - PAYMENT
            - HOSPITALIZATION_COLLEGE
            - PHONE_MAIL_ECOMMERCE
            - ATM
            - TRANSIT
            - EXTENDED_AUTHORIZATION
          type: string
          description: 'Type of product or service being purchased, if provided by the merchant.'
        transit:
          $ref: '#/components/schemas/transit'
      description: "Contains merchant-provided metadata related to the transaction, including details about lodging- and transit-related purchases.\n\nMay be returned if the request uses Transaction Model v2 of the Marqeta Core API.\nNot returned for Transaction Model v1 requests."
    transaction_model:
      title: Transaction object
      required:
        - acting_user_token
        - amount
        - state
        - token
        - type
      type: object
      properties:
        account_funding:
          $ref: '#/components/schemas/account_funding'
        account_name_verification:
          $ref: '#/components/schemas/account_name_verification_model'
        account_owner:
          $ref: '#/components/schemas/account_owner_model'
        acquirer:
          $ref: '#/components/schemas/acquirer'
        acquirer_fee_amount:
          type: number
          description: "Indicates the amount of the acquirer fee.\nAccount holders are sometimes charged an acquirer fee for card use at ATMs, fuel dispensers, and so on."
        acquirer_reference_data:
          type: string
          description: "Acquirer-assigned unique identifier of the transaction.\nUseful for settlement and reconciliation."
        acquirer_reference_id:
          type: string
          description: "Acquirer-assigned unique identifier of the transaction.\nUseful for settlement and reconciliation."
        acting_user_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Unique identifier of the user who conducted the transaction.\nThis might be a child user configured to share its parent's account balance."
        address_verification:
          $ref: '#/components/schemas/address_verification_model'
        advice_reason_code:
          type: string
          description: 'Extended stand-in processing (STIP) reason code, as provided by the Visa card network.'
        advice_reason_details:
          type: string
          description: 'Extended stand-in processing (STIP) reason details, as provided by the Visa card network.'
        amount:
          type: number
          description: Amount of the transaction.
        amount_to_be_released:
          type: number
          description: "Amount of original authorization to be released.\nThis field appears in final clearing transactions where the clearing amount is lower than the authorization amount."
        anticipated_amount:
          type: number
          description: "Anticipated amount of the transaction, as provided by the card network.\nThis field applies to anticipated amount verification transactions (AAVTs)."
        approval_code:
          type: string
          description: 'Unique identifier assigned to an authorization, printed on the receipt at point of sale.'
        atc_information:
          $ref: '#/components/schemas/ATCInformationModel'
        authorization_expiration:
          type: string
        auto_reload:
          $ref: '#/components/schemas/auto_reload_model'
        bank_transfer_token:
          type: string
        batch_number:
          type: string
          description: The batch number of the transaction.
        billpay:
          $ref: '#/components/schemas/BillPayResponse'
        business:
          $ref: '#/components/schemas/business_metadata'
        business_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Unique identifier of the business that owns the account that funded the transaction.
        card:
          $ref: '#/components/schemas/card_response'
        card_acceptor:
          $ref: '#/components/schemas/transaction_card_acceptor'
        card_holder_model:
          $ref: '#/components/schemas/user_card_holder_response'
        card_product_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Unique identifier of the card product.
        card_security_code_verification:
          $ref: '#/components/schemas/card_security_code_verification'
        card_token:
          maxLength: 36
          minLength: 0
          type: string
          description: "Unique identifier of the card.\nUseful when a single account holder has multiple cards."
        cardholder_authentication_data:
          $ref: '#/components/schemas/cardholder_authentication_data'
        cash_back_amount:
          type: number
          description: "Amount of cash back requested by the cardholder during the transaction.\nIncluded in the total transaction amount."
        cashloads_direct:
          $ref: '#/components/schemas/CashloadsResponseModel'
        chargeback:
          $ref: '#/components/schemas/chargeback_response'
        clearing_record_sequence_number:
          type: string
          description: A sequence number that identifies a specific clearing message among multiple clearing messages for an authorization.
        created_time:
          type: string
          description: "Date and time when the Marqeta platform created the transaction entry, in UTC format.\nFor example, when Marqeta processed the clearing record for a refund."
          format: date-time
        currency_code:
          type: string
          description: Currency type of the transaction.
        currency_conversion:
          $ref: '#/components/schemas/currency_conversion'
        deferred_settlement_days:
          type: string
        digital_wallet_token:
          $ref: '#/components/schemas/digital_wallet_token'
        digital_wallet_token_transaction_service_provider_info:
          $ref: '#/components/schemas/digital_service_provider'
        direct_deposit:
          $ref: '#/components/schemas/DepositDepositResponse'
        dispute:
          $ref: '#/components/schemas/DisputeModel'
        duration:
          type: integer
          description: 'Duration of the transaction on Marqeta''s servers, in milliseconds.'
          format: int32
        enhanced_data_token:
          type: string
          description: The enhanced commercial card data token for the transaction.
        estimated_authorization:
          type: boolean
          description: "Indicates an estimated authorization.\nAn estimated authorization allows the merchant to obtain an approval for funds before the cardholder has finalized exactly what goods or services will be purchased."
        fee:
          $ref: '#/components/schemas/fee'
        fee_transfer:
          $ref: '#/components/schemas/fee_transfer_response'
        fees:
          type: array
          items:
            $ref: '#/components/schemas/network_fee_model'
          description: "List of fees associated with the transaction.\n\nThis array is returned if it exists in the resource."
        flex:
          $ref: '#/components/schemas/flex'
        fraud:
          $ref: '#/components/schemas/fraud_view'
        from_account:
          type: string
          description: Specifies the funding account type.
        gpa:
          $ref: '#/components/schemas/cardholder_balance'
        gpa_order:
          $ref: '#/components/schemas/gpa_response'
        gpa_order_unload:
          $ref: '#/components/schemas/gpa_returns'
        identifier:
          type: string
          description: Sequential identifier of the transaction.
        incremental_authorization_transaction_tokens:
          type: array
          items:
            type: string
          description: An array of incremental authorization transaction tokens.
        installment_data:
          $ref: '#/components/schemas/installment_data'
        interchange_rate_descriptor:
          type: string
        is_final_clearing:
          type: boolean
          description: "Indicates the final clearing event for an authorization.\nIf the final cleared amount is lower than the authorized amount, you must release the hold on the funds per the value in the `amount_to_be_released` field."
        is_preauthorization:
          type: boolean
          description: Indicates if the transaction is a pre-authorization.
          default: false
        isaIndicator:
          enum:
            - MULTI_CURRENCY
            - SINGLE_CURRENCY
            - REBATE_CANCELLED
            - MULTI_CURRENCY_NON_US_COUNTRIES
            - SINGLE_CURRENCY_PAID_BY_ISSUER
            - NO_CHARGE_ASSESSED
          type: string
          description: The international service assessment indicator indicates if an ISA fee is applicable to the transaction.
        issuer_interchange_amount:
          type: number
          description: The amount of interchange charged by the card issuer.
        issuer_payment_node:
          type: string
          description: Unique identifier of the Marqeta platform server that received the transaction from the card network.
        issuer_received_time:
          type: string
          description: 'Date and time when the Marqeta platform received the transaction from the card network, in UTC.'
        local_transaction_date:
          type: string
          description: "Indicates the local time of the transaction at the card acceptor's location.\nYou can use this field to determine the correct time of the transaction when filing a dispute."
          format: date-time
        merchant:
          $ref: '#/components/schemas/merchant_response_model'
        merchant_initiated_original_trace_id:
          type: string
          description: Unique network identification value formed by combining the 6- to 9-character Mastercard Banknet Reference Number and the 4-digit settlement date for recurring payments and other merchant-initiated transactions.
        msa_order_unload:
          $ref: '#/components/schemas/msa_returns'
        multi_clearing_sequence_count:
          type: string
          description: "If an authorization has multiple clearing transactions, this field displays their total number.\nFor example, if an authorization has four clearing transactions, the sequence count is `04`."
        multi_clearing_sequence_number:
          type: string
          description: "If an authorization has multiple clearing transactions, this field displays the sequence number for the clearing transaction.\nFor example, if this is the second clearing transaction of four, the sequence number is `02`."
        national_net_cpd_of_original:
          type: string
        network:
          type: string
          description: Indicates which card network was used to complete the transactions.
        network_metadata:
          $ref: '#/components/schemas/network_metadata'
        network_reference_id:
          type: string
          description: "Network-assigned unique identifier of the transaction.\nUseful for settlement and reconciliation."
        network_transaction_lifecycle_id:
          type: string
          description: "Transaction identifier, as provided by the card network.\nThis identifier connects the original transaction to all subsequent activities throughout the transaction lifecycle."
        original_credit:
          $ref: '#/components/schemas/original_credit'
        original_transaction_token:
          type: string
          description: Unique identifier of the original transaction in a series of related transactions.
        payment_facilitator:
          $ref: '#/components/schemas/payment_facilitator_model'
        peer_transfer:
          $ref: '#/components/schemas/peer_transfer_response'
        polarity:
          enum:
            - CREDIT
            - DEBIT
            - PENDING_CREDIT
            - PENDING_DEBIT
          type: string
          description: Indicates whether the transaction is credit or debit.
        pos:
          $ref: '#/components/schemas/pos'
        preceding_related_transaction_token:
          type: string
          description: "Returned for final transaction types.\n\nUnique identifier of the preceding related transaction.\nUseful for identifying the transaction that preceded the current one.\n\nFor example, `authorization`, a temporary transaction type, precedes and is completed by `authorization.clearing`, a final transaction type.\nIn this case, the `authorization` token is returned with this field.\nFor which transaction types are temporary or final, see <</core-api/event-types#_transaction_events, Transaction events in Event Types>>."
        preceding_transaction:
          $ref: '#/components/schemas/preceding_transaction'
        program:
          $ref: '#/components/schemas/program'
        program_transfer:
          $ref: '#/components/schemas/program_transfer_response'
        real_time_fee_group:
          $ref: '#/components/schemas/real_time_fee_group'
        request_amount:
          type: number
          description: 'Merchant-requested amount, including any fees.'
        response:
          $ref: '#/components/schemas/response'
        settlement_date:
          type: string
          description: "Date and time when funds were moved for a transaction, in UTC.\nFor example, in the case of a refund, when funds were credited to the cardholder."
          format: date-time
        settlement_indicator:
          type: string
          description: Indicates the settlement service used for the transaction.
        standin_approved_by:
          type: string
          description: "Indicates which party approved a transaction: the card network using stand-in processing, or Marqeta using Commando Mode.\nReturned only when a transaction is approved."
        standin_by:
          type: string
          description: 'Indicates which party approved a transaction: the card network using stand-in processing, or Marqeta using Commando Mode.'
        standin_reason:
          type: string
          description: Indicates why the card network handled a transaction requiring stand-in processing.
        state:
          enum:
            - PENDING
            - CLEARED
            - COMPLETION
            - DECLINED
            - ERROR
          type: string
          description: "Current state of the transaction.\nFor more information about the `state` field, see <</developer-guides/about-transactions#_the_transaction_lifecycle, The transaction lifecycle>>."
        store:
          $ref: '#/components/schemas/store_response_model'
        subnetwork:
          type: string
          description: "Indicates which subnetwork was used to complete the transaction.\nPossible values include the following:\n\n* *VISANET* – Used for VisaNet signature-based transactions.\n* *VISANETDEBIT* – Used for VisaNet Debit PIN-based transaction.\n* *VISAINTERLINK* – Used for Visa Interlink PIN-based transactions.\n* *VISAPLUS* – Used for ATM withdrawals on Visa.\n* *MAESTRO* – Used for PIN-based transactions on Mastercard.\n* *CIRRUS* – Used for ATM withdrawals on Mastercard.\n* *MASTERCARDDEBIT* – Used for signature-based transactions on Mastercard.\n* *GATEWAY_JIT* – Used for Gateway JIT Funding transactions.\n* *MANAGED_JIT* – Used for Managed JIT Funding transactions or for transactions that occur while Commando Mode is enabled."
        to_account:
          type: string
          description: Specifies the receiving account type.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the transaction, formatted as a UUID.\n\n*NOTE:* For subsequent related transactions, this token value appears as the `preceding_related_transaction_token`."
        transaction_attributes:
          type: object
          additionalProperties:
            type: string
          description: Additional transaction attributes.
        transaction_metadata:
          $ref: '#/components/schemas/transaction_metadata'
        type:
          enum:
            - gpa.credit
            - gpa.credit.pending
            - gpa.credit.pending.reversal
            - gpa.credit.reversal
            - gpa.credit.networkload
            - gpa.credit.networkload.reversal
            - gpa.debit.networkload
            - gpa.debit
            - gpa.debit.pending
            - gpa.debit.pending.reversal
            - gpa.grant
            - gpa.credit.issueroperator
            - gpa.debit.issueroperator
            - gpa.credit.chargeback
            - gpa.credit.chargeback.reversal
            - gpa.credit.billpayment
            - gpa.credit.authorization.billpayment
            - gpa.credit.authorization.billpayment.reversal
            - msa.credit.pending
            - msa.credit.pending.reversal
            - msa.credit.reversal
            - msa.credit
            - msa.debit.pending
            - msa.debit.pending.reversal
            - msa.debit
            - msa.credit.chargeback
            - msa.credit.chargeback.reversal
            - authorization
            - authorization.advice
            - authorization.reversal
            - authorization.clearing
            - authorization.reversal.issuerexpiration
            - dispute.credit
            - dispute.debit
            - authorization.clearing.chargeback
            - authorization.clearing.chargeback.reversal
            - refund
            - pindebit.atm.withdrawal
            - pindebit.balanceinquiry
            - pindebit.cashback
            - pindebit.checkavs
            - pindebit
            - programreserve.credit
            - programreserve.debit
            - fee.charge.pending
            - fee.charge
            - fee.charge.refund
            - fee.charge.reversal
            - funds.expire
            - reward.earn
            - transfer.peer
            - transfer.fee
            - account.funding.authorization
            - account.funding.authorization.reversal
            - account.funding.authorization.clearing
            - account.funding.auth_plus_capture
            - account.funding.auth_plus_capture.reversal
            - account.credit
            - account.debit
            - balanceinquiry
            - authorization.atm.withdrawal
            - authorization.pin.change
            - authorization.pin.unblock
            - authorization.clearing.atm.withdrawal
            - authorization.cashback
            - authorization.clearing.cashback
            - transfer.program
            - authorization.quasi.cash
            - authorization.clearing.quasi.cash
            - authorization.incremental
            - gpa.credit.authorization
            - gpa.credit.authorization.reversal
            - gpa.debit.authorization
            - gpa.debit.reversal
            - original.credit.authorization
            - original.credit.authorization.reversal
            - original.credit.authorization.clearing
            - original.credit.auth_plus_capture
            - original.credit.auth_plus_capture.reversal
            - refund.authorization
            - refund.authorization.advice
            - refund.authorization.clearing
            - refund.authorization.reversal
            - token.activation-request
            - token.advice
            - pindebit.authorization
            - pindebit.authorization.clearing
            - pindebit.authorization.reversal
            - pindebit.authorization.reversal.issuerexpiration
            - authorization.standin
            - authorization.clearing.chargeback.completed
            - authorization.clearing.chargeback.provisional.credit
            - authorization.clearing.chargeback.provisional.debit
            - authorization.clearing.chargeback.writeoff
            - directdeposit.credit
            - directdeposit.credit.pending
            - directdeposit.credit.reject
            - directdeposit.credit.pending.reversal
            - directdeposit.credit.reversal
            - directdeposit.debit
            - directdeposit.debit.pending
            - directdeposit.debit.reject
            - directdeposit.debit.reversal
            - pin.change.reversal
            - pin.change.reversal.advice
            - directdeposit.debit.pending.reversal
            - pindebit.chargeback
            - pindebit.chargeback.completed
            - pindebit.chargeback.provisional.credit
            - pindebit.chargeback.provisional.debit
            - pindebit.chargeback.reversal
            - pindebit.chargeback.writeoff
            - pindebit.pin.change
            - pindebit.pin.unblock
            - pindebit.credit.adjustment
            - pindebit.quasicash
            - pindebit.quasi.cash
            - pindebit.refund
            - pindebit.refund.reversal
            - pindebit.reversal
            - pindebit.transfer
            - pushtocard.debit
            - pushtocard.reversal
            - credit.adjustment
            - debit.adjustment
            - pin.change.via.api
            - product.inquiry
            - transit.offer
            - unknown
            - authorization.clearing.representment
            - billpayment
            - billpayment.clearing
            - billpayment.reversal
            - fee.charge.pending.refund
            - transaction.unknown
            - address.verification
          type: string
          description: "Transaction event type.\nFor more information about the `type` field, see <</core-api/event-types#_transaction_events, Transaction events>>."
        user:
          $ref: '#/components/schemas/cardholder_metadata'
        user_token:
          maxLength: 36
          minLength: 0
          type: string
          description: 'Unique identifier of the user who owns the account that funded the transaction; subsequent related transactions retain the same `user_token`, even if the card used to complete the transaction moves to another user.'
        user_transaction_time:
          type: string
          description: "Date and time when the user initiated the transaction, in UTC.\nFor example, when a merchant performed the original authorization for a refund."
          format: date-time
      description: "Transactions are represented by the `transaction` object.\nThe Marqeta platform creates a separate `transaction` object for each transaction message received from the card network.\nThe attributes of a given `transaction` object depend on the transaction type.\n\nThis section documents all fields that might be included in a `transaction` object.\n\n// This schema is used by InfoDev to generate API reference documentation.\n// File location in GitHub is: openapi/transactions/schemas/transaction_model.yaml"
    transaction_options:
      type: object
      properties:
        additional_data:
          type: string
        card_expiration_date_yymm:
          type: string
        database_transaction_timeout:
          type: integer
          format: int32
        encryption_key_id:
          type: string
        is_async:
          type: boolean
          default: false
        pre_auth_time_limit:
          type: string
        send_expiration_date:
          type: boolean
          default: false
        send_track_data:
          type: boolean
          default: false
        transaction_timeout_threshold_seconds:
          type: integer
          format: int64
        transaction_token:
          type: string
    transit:
      type: object
      properties:
        transaction_type:
          enum:
            - PRE_FUNDED
            - REAL_TIME_AUTHORIZED
            - POST_AUTHORIZED_AGGREGATED
            - AUTHORIZED_AGGREGATED_SPLIT_CLEARING
            - DEBIT_RECOVERY
            - OTHER
          type: string
          description: Type of transit transaction.
        transportation_mode:
          enum:
            - BUS
            - TRAIN
            - WATER_BORNE_VEHICLE
            - TOLL
            - PARKING
            - TAXI
            - PARA_TRANSIT
            - SELF_DRIVE_VEHICLE
            - COACH
            - LOCOMOTIVE
            - POWERED_MOTOR_VEHICLE
            - TRAILER
            - INTER_CITY
            - CABLE_CAR
          type: string
          description: Mode of transportation.
      description: 'Contains merchant-provided, transit-related metadata related to the transaction.'
    triggered_rule:
      type: object
      properties:
        alert:
          type: boolean
          description: Indicates if the rule triggered an alert.
        entity_type:
          type: string
          description: The entity type where the triggered rule was defined.
        rule_name:
          type: string
          description: 'Name of the rule, as defined in the Real-Time Decisioning dashboard that was triggered.'
        suppress_alert:
          type: boolean
          description: Indicates if the triggered rule has `suppress_alert` in the definition.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/tag'
          description: All the tags defined in the triggered rule.
      description: 'Provides a list of rules triggered by a fraud event, along with the information on tags and rule characteristics.'
    unload_request_model:
      required:
        - amount
        - original_order_token
      type: object
      properties:
        amount:
          type: number
          description: Amount of funds to return to the funding source.
        funding_source_address_token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the funding source to use for this GPA unload order.\n\nSend a `GET` request to `/fundingsources/addresses/user/{token}` to retrieve addresses for a specific user."
        memo:
          maxLength: 99
          minLength: 0
          type: string
          description: Additional descriptive text about the GPA unload.
        original_order_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the original GPA order.
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: Comma-delimited list of tags describing the GPA unload order.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the GPA unload order.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
    user_association:
      type: object
      properties:
        single_inventory_user:
          type: boolean
          default: false
        single_inventory_user_token:
          maxLength: 36
          minLength: 1
          type: string
          default: 'false'
    user_card_holder_response:
      required:
        - created_time
        - last_modified_time
      type: object
      properties:
        account_holder_group_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Associates the specified account holder group with the cardholder.
        active:
          type: boolean
          description: Specifies if the cardholder is in the `ACTIVE` state on the Marqeta platform.
          default: false
        address1:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's address.
        address2:
          maxLength: 255
          minLength: 0
          type: string
          description: Additional address information for the cardholder.
        authentication:
          $ref: '#/components/schemas/Authentication'
        birth_date:
          type: string
          description: Cardholder's date of birth.
        business_token:
          type: string
          description: Unique identifier of the business resource.
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: City where the cardholder resides.
        company:
          maxLength: 255
          minLength: 0
          type: string
          description: Company name.
        corporate_card_holder:
          type: boolean
          description: Specifies if the cardholder holds a corporate card.
          default: false
        country:
          maxLength: 40
          minLength: 0
          type: string
          description: Country where the cardholder resides.
        created_time:
          type: string
          description: 'Date and time when the resource was created, in UTC.'
          format: date-time
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: Valid email address of the cardholder.
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's first name.
        gender:
          maxLength: 1
          minLength: 0
          enum:
            - F
            - M
          type: string
          description: Gender of the cardholder.
        honorific:
          maxLength: 10
          minLength: 0
          type: string
          description: 'Cardholder''s title or prefix: Dr., Miss, Mr., Ms., and so on.'
        id_card_expiration_date:
          type: string
          description: Expiration date of the cardholder's identification.
        id_card_number:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's identification card number.
        identifications:
          type: array
          items:
            $ref: '#/components/schemas/IdentificationResponseModel'
          description: One or more objects containing identifications associated with the cardholder.
        ip_address:
          maxLength: 39
          minLength: 0
          type: string
          description: Cardholder's IP address.
        last_modified_time:
          type: string
          description: 'Date and time when the resource was last updated, in UTC.'
          format: date-time
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's last name.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
        middle_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's middle name.
        nationality:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's nationality.
        notes:
          maxLength: 255
          minLength: 0
          type: string
          description: Any additional information pertaining to the cardholder.
        parent_token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the parent user or business resource.
        passport_expiration_date:
          type: string
          description: Expiration date of the cardholder's passport.
        passport_number:
          maxLength: 40
          minLength: 0
          type: string
          description: Cardholder's passport number.
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: Password to the cardholder's user account on the Marqeta platform.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: Cardholder's telephone number.
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal code of the cardholder's address.
        ssn:
          type: string
          description: Cardholder's Social Security Number (SSN).
        state:
          maxLength: 2
          minLength: 0
          type: string
          description: State or province where the cardholder resides.
        status:
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
          description: Specifies the status of the cardholder on the Marqeta platform.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the cardholder.
        uses_parent_account:
          type: boolean
          description: 'Indicates whether the child shares balances with the parent (`true`), or the child''s balances are independent of the parent (`false`).'
          default: false
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: United States ZIP code of the cardholder's address.
      description: Contains information about a cardholder.
    user_card_holder_search_model:
      type: object
      properties:
        dda:
          type: string
          description: "Performs a match on the specified deposit account number.\nSend a `GET` request to `/directdeposits/accounts/{user_token}` to retrieve the deposit account number for a specific cardholder."
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: 'Performs a non-case-sensitive, exact match on the cardholder''s `email` field.'
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Performs a non-case-sensitive match on the cardholder's `first_name` field.\nMatching is partial on the beginning of the name.\nFor example, a match on \"Alex\" returns both \"Alex\" and \"Alexander\"."
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: "Performs a non-case-sensitive match on the cardholder's `last_name` field.\nMatching is partial on the beginning of the name.\nFor example, a match on \"Smith\" returns both \"Smith\" and \"Smithfield\"."
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: Performs a match on the cardholder's `phone` field.
        ssn:
          type: string
          description: Performs a match on the cardholder's identification number.
    velocity_control_balance_response:
      required:
        - amount_limit
        - available
        - currency_code
        - velocity_window
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the velocity control is active.
        amount_limit:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: "Maximum monetary sum that can be cleared within the time period defined by the `velocity_window` field.\nRefunds and reversals cannot exceed this limit."
        approvals_only:
          type: boolean
          description: "If set to `true`, only approved transactions are subject to control.\nIf set to `false`, only declined transactions are subject to control."
        association:
          $ref: '#/components/schemas/spend_control_association'
        available:
          $ref: '#/components/schemas/available'
        currency_code:
          type: string
          description: Three-character ISO 4217 currency code.
        include_cashback:
          type: boolean
          description: 'If set to `true`, the cashback components of point-of-sale transactions are subject to control.'
        include_credits:
          type: boolean
          description: 'If set to `true`, original credit transactions (OCT) are subject to control.'
        include_purchases:
          type: boolean
          description: "If set to `true`, the following transactions are subject to control:\n\n* *Account funding:* All account funding transactions\n* *Cashback:* Only the purchase component of cashback transactions\n* *Purchase transactions:* All authorizations, PIN debit transactions, and incremental transactions\n* *Quasi-cash:* All quasi-cash transactions\n* *Refunds:* All refund transactions (see <</developer-guides/controlling-spending#_controls_to_limit_amount_and_frequency_of_spending, Controls to limit amount and frequency of spending>> for more information)\n* *Reversals:* All reversal transactions"
        include_transfers:
          type: boolean
          description: "If set to `true`, account-to-account transfers are subject to control.\nAccount-to-account transfers are not currently supported."
        include_withdrawals:
          type: boolean
          description: 'If set to `true`, ATM withdrawals are subject to control.'
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: 'Description of how the velocity control restricts spending, for example, "Max spend of $500 per day" or "Max spend of $5000 per month for non-exempt employees".'
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the velocity control.
        usage_limit:
          minimum: -1
          type: integer
          description: Maximum number of times a card can be used within the time period defined by the `velocity_window` field.
          format: int32
        velocity_window:
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
          description: "Defines the time period to which the `amount_limit` and `usage_limit` fields apply:\n\n* *DAY* – one day; days begin at 00:00:00 UTC.\n* *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.\n* *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.\n* *LIFETIME* – forever; time period never expires.\n* *TRANSACTION* – a single transaction."
    velocity_control_request:
      required:
        - amount_limit
        - currency_code
        - velocity_window
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the velocity control is active.
        amount_limit:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: "Maximum monetary sum that can be cleared within the time period defined by the `velocity_window` field.\nRefunds and reversals cannot exceed this limit."
        approvals_only:
          type: boolean
          description: "If set to `true`, only approved transactions are subject to control.\nIf set to `false`, only declined transactions are subject to control."
        association:
          $ref: '#/components/schemas/spend_control_association'
        currency_code:
          type: string
          description: Three-character ISO 4217 currency code.
        include_cashback:
          type: boolean
          description: 'If set to `true`, the cashback components of point-of-sale transactions are subject to control.'
        include_credits:
          type: boolean
          description: "If set to `true`, original credit transactions (OCT) are subject to control.\nYour request can contain either a `money_in_transaction` object or the `include_credits` field, not both."
        include_purchases:
          type: boolean
          description: "If set to `true`, the following transactions are subject to control:\n\n* *Account funding:* All account funding transactions\n* *Cashback:* Only the purchase component of cashback transactions\n* *Purchase transactions:* All authorizations, PIN debit transactions, and incremental transactions\n* *Quasi-cash:* All quasi-cash transactions\n* *Refunds:* All refund transactions (see <</developer-guides/controlling-spending#_controls_to_limit_amount_and_frequency_of_spending, Controls to limit amount and frequency of spending>> for more information)\n* *Reversals:* All reversal transactions"
        include_transfers:
          type: boolean
          description: "If set to `true`, account-to-account transfers are subject to control.\nAccount-to-account transfers are not currently supported."
        include_withdrawals:
          type: boolean
          description: 'If set to `true`, ATM withdrawals are subject to control.'
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: "Description of how the velocity control restricts spending, for example, \"Max spend of $500 per day\" or \"Max spend of $5000 per month for non-exempt employees\".\n\nEnsure that the description you provide here adequately captures the kind of restriction exerted by this velocity control, because the Marqeta platform will send this information to you in a webhook in the event that the transaction authorization attempt is declined by the velocity control.\n\n*NOTE:* This field is very important.\nIf your program has multiple velocity controls in place, it is not always clear which one prevented the transaction from being approved.\nAdding specific details to this field gives you more contextual information when debugging or monitoring declined authorization attempts."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: "Unique identifier of the velocity control.\n\nIf you do not include a token, the system will generate one automatically.\nThis token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.\nThis value cannot be updated."
        usage_limit:
          minimum: -1
          type: integer
          description: "Maximum number of times a card can be used within the time period defined by the `velocity_window` field.\n\nIf `velocity_window` is set to `TRANSACTION`, do not include a `usage_limit` in your request.\n\nSet to `-1` to indicate that the card can be used an unlimited number of times."
          format: int32
        velocity_window:
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
          description: "Defines the time period to which the `amount_limit` and `usage_limit` fields apply:\n\n* *DAY* – one day; days begin at 00:00:00 UTC.\n* *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.\n* *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.\n* *LIFETIME* – forever; time period never expires.\n* *TRANSACTION* – a single transaction.\n\n// (2023-05-03): This statement was validated by Processing, as part of a customer inquiry.\n*NOTE:* If set to `DAY`, `WEEK`, or `MONTH`, the velocity control takes effect retroactively from the beginning of the specified period.\nThe amount and usage data already collected within the first period is counted toward the limits.\nIf set to `LIFETIME`, the velocity control only applies to transactions on or after the date and time that the velocity control was created.\n`LIFETIME` velocity controls are not retroactively applied to historical transactions.\n\n// (2023-05-03): Commenting this note out, as it is untrue in testing as reported by customers and confirmed by transaction engine team\n//*NOTE:* Editing any of the following fields on a velocity control resets its usage and amount count to 0:\n\n//* `merchant_scope.mcc`\n//* `merchant_scope.mid`\n//* `merchant_scope.mcc_group`\n//* `association.user_token`\n//* `association.card_product_token`"
    velocity_control_response:
      required:
        - amount_limit
        - currency_code
        - velocity_window
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the velocity control is active.
        amount_limit:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: "Maximum monetary sum that can be cleared within the time period defined by the `velocity_window` field.\nRefunds and reversals cannot exceed this limit."
        approvals_only:
          type: boolean
          description: "If set to `true`, only approved transactions are subject to control.\nIf set to `false`, only declined transactions are subject to control."
        association:
          $ref: '#/components/schemas/spend_control_association'
        currency_code:
          type: string
          description: Three-character ISO 4217 currency code.
        include_cashback:
          type: boolean
          description: 'If set to `true`, the cashback components of point-of-sale transactions are subject to control.'
        include_credits:
          type: boolean
          description: 'If set to `true`, original credit transactions (OCT) are subject to control.'
        include_purchases:
          type: boolean
          description: "If set to `true`, the following transactions are subject to control:\n\n* *Account funding:* All account funding transactions\n* *Cashback:* Only the purchase component of cashback transactions\n* *Purchase transactions:* All authorizations, PIN debit transactions, and incremental transactions\n* *Quasi-cash:* All quasi-cash transactions\n* *Refunds:* All refund transactions (see <</developer-guides/controlling-spending#_controls_to_limit_amount_and_frequency_of_spending, Controls to limit amount and frequency of spending>> for more information)\n* *Reversals:* All reversal transactions"
        include_transfers:
          type: boolean
          description: "If set to `true`, account-to-account transfers are subject to control.\nAccount-to-account transfers are not currently supported."
        include_withdrawals:
          type: boolean
          description: 'If set to `true`, ATM withdrawals are subject to control.'
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: "Description of how the velocity control restricts spending.\nFor example, \"Max spend of $500 per day\" or \"Max spend of $5000 per month for non-exempt employees\"."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the velocity control.
        usage_limit:
          minimum: -1
          type: integer
          description: Maximum number of times a card can be used within the time period defined by the `velocity_window` field.
          format: int32
        velocity_window:
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
          description: "Defines the time period to which the `amount_limit` and `usage_limit` fields apply:\n\n* *DAY* – one day; days begin at 00:00:00 UTC.\n* *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.\n* *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.\n* *LIFETIME* – forever; time period never expires.\n* *TRANSACTION* – a single transaction."
    velocity_control_update_request:
      required:
        - token
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the velocity control is active.
        amount_limit:
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: "Maximum monetary sum that can be cleared within the time period defined by the `velocity_window` field.\nRefunds and reversals cannot exceed this limit."
        approvals_only:
          type: boolean
          description: "If set to `true`, only approved transactions are subject to control.\nIf set to `false`, only declined transactions are subject to control."
        association:
          $ref: '#/components/schemas/spend_control_association'
        currency_code:
          type: string
          description: Three-character ISO 4217 currency code.
        include_cashback:
          type: boolean
          description: 'If set to `true`, the cashback components of point-of-sale transactions are subject to control.'
        include_credits:
          type: boolean
          description: "If set to `true`, original credit transactions are subject to control.\nYour request can contain either a `money_in_transaction` object or the `include_credits` field, not both."
        include_purchases:
          type: boolean
          description: "If set to `true`, the following transactions are subject to control:\n\n* *Account funding:* All account funding transactions\n* *Cashback:* Only the purchase component of cashback transactions\n* *Purchase transactions:* All authorizations, PIN debit transactions, and incremental transactions\n* *Quasi-cash:* All quasi-cash transactions\n* *Refunds:* All refund transactions (see <</developer-guides/controlling-spending#_controls_to_limit_amount_and_frequency_of_spending, Controls to limit amount and frequency of spending>> for more information)\n* *Reversals:* All reversal transactions"
        include_transfers:
          type: boolean
          description: "If set to `true`, account-to-account transfers are subject to control.\nAccount-to-account transfers are not currently supported."
        include_withdrawals:
          type: boolean
          description: 'If set to `true`, ATM withdrawals are subject to control.'
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: "Description of how the velocity control restricts spending.\nFor example, \"Max spend of $500 per day\" or \"Max spend of $5000 per month for non-exempt employees\".\n\nEnsure that the description you provide here adequately captures the kind of restriction exerted by this velocity control, because the Marqeta platform will send this information to you in a webhook in the event that the transaction authorization attempt is declined by the velocity control.\n\n*NOTE:* This field is very important.\nIf your program has multiple velocity controls in place, it is not always clear which one prevented the transaction from being approved.\nAdding specific details to this field gives you more contextual information when debugging or monitoring declined authorization attempts."
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the velocity control resource.
        usage_limit:
          minimum: -1
          type: integer
          description: "Maximum number of times a card can be used within the time period defined by the `velocity_window` field.\n\nIf `velocity_window` is set to `TRANSACTION`, do not include a `usage_limit` in your request."
          format: int32
        velocity_window:
          enum:
            - DAY
            - WEEK
            - MONTH
            - QUARTER
            - YEAR
            - LIFETIME
            - TRANSACTION
          type: string
          description: "Defines the time period to which the `amount_limit` and `usage_limit` fields apply:\n\n* *DAY* – one day; days begin at 00:00:00 UTC.\n* *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.\n* *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.\n* *LIFETIME* – forever; time period never expires.\n* *TRANSACTION* – a single transaction.\n\n// (2023-05-03): This statement was validated by Processing, as part of a customer inquiry.\n*NOTE:* If set to `DAY`, `WEEK`, or `MONTH`, the velocity control takes effect retroactively from the beginning of the specified period.\nThe amount and usage data already collected within the first period is counted toward the limits.\nIf set to `LIFETIME`, the velocity control only applies to transactions on or after the date and time that the velocity control was created.\n`LIFETIME` velocity controls are not retroactively applied to historical transactions.\n\n// (2023-05-03): Commenting this note out, as it is untrue in testing as reported by customers and confirmed by transaction engine team\n//*NOTE:* Editing any of the following fields on a velocity control resets its usage and amount count to 0:\n\n//* `merchant_scope.mcc`\n//* `merchant_scope.mid`\n//* `merchant_scope.mcc_group`\n//* `association.user_token`\n//* `association.card_product_token`"
    wallet_provider_card_on_file:
      type: object
      properties:
        address_verification:
          $ref: '#/components/schemas/digital_wallet_token_address_verification'
        enabled:
          type: boolean
          description: Specifies if the card on file is enabled.
          default: false
    wallet_provider_profile:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/account'
        device_score:
          type: string
          description: Score from the device.
        pan_source:
          type: string
          description: Source from which the digital wallet provider obtained the card primary account number (PAN).
        reason_code:
          type: string
          description: "Reason for the wallet provider's provisioning decision.\n\n* *01* – Cardholder's wallet account is too new relative to launch.\n* *02* – Cardholder's wallet account is too new relative to provisioning request.\n* *03* – Cardholder's wallet account/card pair is newer than date threshold.\n* *04* – Changes made to account data within the account threshold.\n* *05* – Suspicious transactions linked to this account.\n* *06* – Account has not had activity in the last year.\n* *07* – Suspended cards in the secure element.\n* *08* – Device was put in lost mode in the last seven days for longer than the duration threshold.\n* *09* – The number of provisioning attempts on this device in 24 hours exceeds threshold.\n* *0A* – There have been more than the threshold number of different cards attempted at provisioning to this phone in 24 hours.\n* *0B* – The card provisioning attempt contains a distinct name in excess of the threshold.\n* *0C* – The device score is less than 3.\n* *0D* – The account score is less than 4.\n* *0E* – Device provisioning location outside of the cardholder's wallet account home country.\n* *0G* – Suspect fraud."
        recommendation_reasons:
          type: array
          items:
            type: string
          description: Array of recommendation reasons from the digital wallet provider.
        risk_assessment:
          $ref: '#/components/schemas/risk_assessment'
      description: Contains information held and provided by the digital wallet provider.
    web_push_provisioning:
      type: object
      properties:
        wpp_apple_card_template_id:
          type: string
          description: Identifier that Apple uses to identify the program to process the request for.
        wpp_apple_partner_id:
          type: string
          description: Identifier that Apple uses to identify the program to provide the correct card art for.
        wpp_google_piaid:
          type: string
          description: Identifier that Google uses to identify the program to process the request for and to provide the correct card art for.
    web_push_provisioning_apple_pay_JWS_header:
      required:
        - kid
      type: object
      properties:
        kid:
          type: string
          description: Unique identifier of the JSON Web Signature (JWS) public key of the key pair used to generate the signature.
          example: 8dc7aed4-29e3-41e4-9cdb-673a05e6615c
      description: Contains header data for the JWS object.
    web_push_provisioning_apple_pay_JWS_model:
      required:
        - header
        - payload
        - protected
        - signature
      type: object
      properties:
        header:
          $ref: '#/components/schemas/web_push_provisioning_apple_pay_JWS_header'
        payload:
          type: string
          description: JSON Web Signature (JWS) message payload.
        protected:
          type: string
          description: Contains header parameters that are integrity-protected by the JSON Web Signature (JWS).
        signature:
          type: string
          description: The JSON Web Signature (JWS).
          example: 5lD1znG2DD2DytqGUcSDOwJQMYbCGDCCCiXxyhpC1zOWTH1Y6jUJFAupl0jEud9nUvw3mmpuSt6zcAE1r4yb0w
      description: Object containing JSON Web Signature (JWS) data.
    web_push_provisioning_apple_pay_JWT_response:
      required:
        - jws
        - state
      type: object
      properties:
        jws:
          $ref: '#/components/schemas/web_push_provisioning_apple_pay_JWS_model'
        state:
          type: string
          description: "Unique state associated with the digital wallet token.\nThe Marqeta platform returns a universally unique identifier (UUID) in this field."
          example: e2675f06-7e4d-11ec-90d6-0242ac120003
    webhook:
      required:
        - endpoint
        - password
        - username
      type: object
      properties:
        endpoint:
          maxLength: 512
          minLength: 1
          type: string
          description: Valid URL
        password:
          type: string
          description: Authentication password
        secret:
          type: string
          description: Authentication secret
        username:
          type: string
          description: Authentication username
      xml:
        name: webhook
    webhook_base_model:
      required:
        - config
        - events
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the webhook is active.
          default: true
        config:
          $ref: '#/components/schemas/webhook_config_model'
        events:
          type: array
          items:
            type: string
          description: "Specifies the types of events for which notifications are sent.\n\nThe wildcard character `\\*` indicates that you receive all webhook notifications, or all notifications of a specified category.\nFor example, `*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.\n\n*NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.\nFor example, you cannot subscribe to `cardtransition.fulfillment.\\*` events, but you can subscribe to `cardtransition.*`."
        name:
          maxLength: 64
          minLength: 1
          type: string
          description: Descriptive name of the webhook.
    webhook_config_model:
      required:
        - basic_auth_password
        - basic_auth_username
        - url
      type: object
      properties:
        basic_auth_password:
          maxLength: 50
          minLength: 20
          type: string
          description: Password for accessing your webhook endpoint.
        basic_auth_username:
          maxLength: 50
          minLength: 1
          type: string
          description: Username for accessing your webhook endpoint.
        custom_header:
          type: object
          additionalProperties:
            type: string
          description: Custom headers to be passed along with the request.
        secret:
          maxLength: 50
          minLength: 20
          type: string
          description: "Randomly chosen string used for implementing HMAC-SHA1.\n\nHMAC-SHA1 provides an added layer of security by authenticating the message and validating message integrity.\nUsing this functionality requires that your webhook endpoint verify the message signature.\nFor information about implementing this functionality, see <</developer-guides/signature-verification, Signature Verification>>."
        url:
          maxLength: 255
          minLength: 1
          type: string
          description: URL of your webhook endpoint.
        use_mtls:
          type: boolean
          description: "Set to `true` to use use mutual transport layer security (mTLS) authentication for the webhook.\n\nmTLS authentication is in the beta testing phase, and is not yet generally available.\nContact your Marqeta representative for more information about using mTLS authentication."
          default: false
      description: Contains the configuration information for the webhook.
    webhook_ping_model:
      required:
        - pings
      type: object
      properties:
        pings:
          type: array
          items:
            $ref: '#/components/schemas/echo_ping_request'
          description: Array of ping requests to your webhook endpoint.
    webhook_request_model:
      required:
        - config
        - events
        - name
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the webhook is active.
          default: true
        config:
          $ref: '#/components/schemas/webhook_config_model'
        events:
          type: array
          items:
            type: string
          description: "Specifies the types of events for which notifications are sent.\n\nThe wildcard character `\\*` indicates that you receive all webhook notifications, or all notifications of a specified category.\nFor example, `*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.\n\n*NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.\nFor example, you cannot subscribe to `cardtransition.fulfillment.\\*` events, but you can subscribe to `cardtransition.*`."
        name:
          maxLength: 64
          minLength: 1
          type: string
          description: Descriptive name of the webhook.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the webhook.
    webhook_response_model:
      required:
        - config
        - events
        - name
      type: object
      properties:
        active:
          type: boolean
          description: "Indicates whether the webhook is active.\nThis field is returned if you included it in your webhook."
          default: true
        config:
          $ref: '#/components/schemas/webhook_config_model'
        created_time:
          type: string
          description: 'Date and time when the webhook event was created, in UTC.'
          format: date-time
        events:
          type: array
          items:
            type: string
          description: "Specifies the types of events for which notifications are sent.\n\nThe wildcard character `\\*` indicates that you receive all webhook notifications, or all notifications of a specified category.\nFor example, `*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.\n\n*NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.\nFor example, you cannot subscribe to `cardtransition.fulfillment.\\*` events, but you can subscribe to `cardtransition.*`."
        last_modified_time:
          type: string
          description: 'Date and time when the associated object was last modified, in UTC.'
          format: date-time
        name:
          maxLength: 64
          minLength: 1
          type: string
          description: Descriptive name of the webhook.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the webhook.
    withdrawal_request_model:
      required:
        - amount
        - card_token
        - mid
      type: object
      properties:
        account_type:
          enum:
            - checking
            - savings
            - credit
          type: string
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        pin:
          maxLength: 15
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
    xpay_push_tokenize_request_data:
      type: object
      properties:
        card_type:
          type: string
          description: Specifies the type of card.
        display_name:
          type: string
          description: "Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).\n`Visa 5678`, for example."
        extra_provision_payload:
          type: string
          description: Encrypted card or cardholder details.
        last_digits:
          type: string
          description: Last four digits of the primary account number of the physical or virtual card.
        network:
          type: string
          description: Specifies the card network of the physical or virtual card.
        token_service_provider:
          type: string
          description: Specifies the network that provides the digital wallet token service.
      description: Contains details about a card tokenization push request.
  securitySchemes:
    mqAppAndAccessToken:
      type: http
      scheme: basic
security:
  - mqAppAndAccessToken: [ ]
tags:
  - name: Accepted Countries
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/acceptedcountries` endpoint to manage the countries where you authorize your cardholders to transact."
  - name: Account Holder Groups
    description: "The account holder group is a Marqeta platform resource that allows you to configure multiple account holders (user and/or business resources) as a group.\nIt allows certain settings to be selectively applied, depending on whether or not an account holder has passed verification (KYC).\n\nYou associate an account holder with an account holder group using the optional `account_holder_group_token` field in the user or business resource.\nAny account holder that you do not explicitly associate with a group is automatically associated with the program's default account holder group.\nThe default group's name is \"Default account holder group\", its token is `DEFAULT_AHG`, and its configuration uses the default configuration values."
  - name: Authorization Controls
    description: "An authorization control limits spending by specified users at specified merchants.\nYou can limit spending at a single merchant or at a group of merchants, and you can limit spending by a single user, users with a particular card product, or all users.\n\nYou can block spending at all merchants by default and then allow it for specific merchants, or you can allow spending at all merchants by default and block it at specific merchants.\n\n[TIP]\nSee <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control, as well as links to more information about merchant category codes."
  - name: Auto Reload
    description: "Auto reload enables you to automatically load a specified amount into an account when the account balance falls below a defined threshold.\n\nAuto reloads execute only when the account balance falls below the trigger value due to spending.\nThey do not execute due to unloading of funds or because of lack of funds when a user or business is first created.\n\nYou can define auto reloads at the level of an account holder, a card product, or a program.\nEach auto reload draws from a single funding source.\n\nIn the case of auto reloads defined at more than one level, the following order of precedence (first to last) determines which auto reload is executed:\n\n. Account holder\n. Card product\n. Program"
  - name: Balances
    description: "Use the `/balances` endpoint to retrieve the following general purpose account (GPA) balance details for a user or business:\n\n* *Ledger balance* - When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.\nWhen using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared.\n* *Available balance* - The ledger balance minus any authorized transactions that have not yet cleared.\nAlso known as the cardholder's purchasing power.\nIf you are using JIT Funding, this balance is usually 0.00.\n* *Cached balance* - Not currently used.\n* *Credit balance* - Not currently used.\n* *Pending credits* - ACH loads that have been accepted, but for which the funding time has not yet elapsed."
  - name: Funding via ACH
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/banktransfers` endpoint to move funds between your program funding or cardholder account and an external account over the ACH Network.\nThis kind of bank transfer is also known as ACH origination.\n\nYou can create the following types of transfers:\n\n* *Push* funds from your program funding or cardholder account to an external account.\n* *Pull* funds from your external account into your program funding or cardholder account.\n\nYou must have an existing bank account at a US bank to fund or receive funds from your Marqeta account.\nTo add an external program funding source account to the Marqeta platform, send a `POST` request to the `/fundingsources/program/ach` endpoint to PUSH or PULL money from or to the Program Funding Account.\nTo add an external account holder funding source account to the Marqeta platform, send a `POST` request to the `/fundingsources/ach` endpoint to PUSH or PULL money from or to the Cardholder Account.\n\nFor more information on ACH funding, see <</developer-guides/ach-origination, ACH Origination>>."
  - name: internal
  - name: Bulk Card Orders
    description: "Use the `/bulkissuances` endpoint to order physical payment cards in bulk.\n\nFor more information on cards, card products, and bulk card ordering, see <</developer-guides/about-cards, About Cards>>.\n\nSome attributes of the `bulkissuance` object can also be defined in an associated `card` or `cardproduct` object.\nIf you define one of these attributes in more than one object, the Marqeta platform applies an order of precedence to determine which attribute to use at fulfillment time.\nThe order of precedence is as follows:\n\n. `card`\n. `bulkissuance`\n. `cardproduct`\n\nDefining an attribute in an object with higher precedence does not overwrite the same attribute in a lower-precedence object; the Marqeta platform ignores these lower-precedence attributes.\n\nFor more information on cards, see <</developer-guides/about-cards, About Cards>>."
  - name: Businesses
    description: "A business is a type of account holder that cannot directly hold cards, but can have parent/child relationships with card-holding users.\nA business can monitor and control card use by a specified group of users.\nEvery business has a general purpose account (GPA).\n\nFor information on how to create a user that has a child-to-parent hierarchical relationship to the business, see <</core-api/users#_create_user, Create User>>.\n\n[NOTE]\nA user can simultaneously be a child of a business and a parent of other users if the user is not configured to use the parent's account balances and the user's children are configured to use the parent's account balances.\nFor more information on account holders, see <</developer-guides/about-account-holders, About Account Holders>>."
  - name: Business Transitions
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/businesstransitions` endpoints to transition business resources between states, as well as to retrieve and list state changes for a business resource."
  - name: Card Products
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\n//This source file is used by InfoDev to generate API reference documentation. File location in GitHub is:\n//openapi/cardproducts/openapi.yaml\n\nThe card products resource represents the behavior and functionality of one or more cards (either physical or virtual).\nFor example, attributes of the card product determine whether the associated cards can be used at an ATM and/or online and whether they are currently enabled.\nFor physical cards, the card product determines color and other printing specifications for when the cards are manufactured and personalized.\nYou can optionally associate authorization controls and/or velocity controls with card products to restrict where and how associated cards are used.\n\nIf your program is Managed by Marqeta, then Marqeta will create the card products for your production environment.\n\nSome attributes of the `cardproduct` object can also be defined in an associated `bulkissuance` or `card` object.\nIf you define one of these attributes in more than one object, the Marqeta platform applies an order of precedence to determine which attribute to use at fulfillment time.\nThe order of precedence is as follows:\n\n. `card`\n. `bulkissuance`\n. `cardproduct`\n\nDefining an attribute in an object with higher precedence does not overwrite the same attribute in a lower-precedence object; the Marqeta platform ignores these lower-precedence attributes.\n\nFor more information on cards, see <</developer-guides/about-cards, About Cards>>."
  - name: Cards
    description: "The `card` resource represents a payment card.\nCards are derived from and controlled by the `cardproduct` resource.\nFor more information on cards, see <</developer-guides/about-cards, About Cards>>.\n\nSome attributes of the `card` resource can be defined in an associated `bulkissuance` or `cardproduct` resource.\nIf you define one of these attributes in more than one object, the order of precedence at fulfillment time is as follows:\n\n. `card`\n. `bulkissuance`\n. `cardproduct`\n\nDefining an attribute in an object with higher precedence overrides, but does not overwrite, the attribute in a lower-precedence object."
  - name: Card Transitions
    description: Use the `/cardtransitions` API to set the state of an existing card.
  - name: Commando Mode
    description: "Commando Mode is a fallback measure that ensures Gateway JIT-funded cards continue to function in the event that your system fails.\nIf your system cannot respond to the JIT Funding request, the Marqeta platform makes a decision in your place based on defined business rules.\nThe Marqeta platform stores any unsent webhooks for later transmission, ensuring that the card state and account balances on your system correspond with activity that occurred while Commando Mode was in effect.\n\nYou can identify transactions that were funded while Commando Mode was in effect by examining the `subnetwork` field of the transaction record.\n\n* A `subnetwork` value of `GATEWAY_JIT` indicates that the transaction was funded through normal Gateway JIT Funding and that Commando Mode was not in effect at the time.\n* A value of `MANAGED_JIT` indicates that the transaction was funded while Commando Mode was in effect.\nIn addition, the `standin_approved_by` field has a value of `COMMANDO_AUTO` or `COMMANDO_MANUAL` when Commando Mode is enabled for a transaction.\n\nWhen `COMMANDO_MANUAL` is configured, all transactions are processed via Commando Mode.\nWhen `COMMANDO_AUTO` is configured, Commando Mode is enabled only when a transaction times out or encounters an error.\n\nWhile Commando Mode is a form of Stand-in Processing (STIP), it is different than network STIP.\nNetwork STIP occurs when the card network cannot communicate with the Marqeta platform.\nTransactions handled by network STIP include the `standin_approved_by` field with a value of `NETWORK`.\n\nCommando Mode and Managed JIT Funding are functionally equivalent.\nSee <</developer-guides/about-jit-funding, About Just-in-Time Funding>> for more information.\n\n[NOTE]\nCommando Mode requires additional configuration.\nTo configure Commando Mode control sets, contact your Marqeta representative."
  - name: accepted countries
  - name: account holder groups
  - name: accounting
  - name: auth controls
  - name: authentications
  - name: auto reloads
  - name: balance APIs
  - name: balance caches
  - name: bank transfers
  - name: bulk issuances
  - name: business transitions
  - name: businesses
  - name: businessidentitycheck
  - name: caches
  - name: calculation schedules
  - name: card products
  - name: card transitions
  - name: cardholder balances
  - name: cards
  - name: chargebacks
  - name: clearing
  - name: commando modes
  - name: cron jobs
  - name: digital wallet provision requests
  - name: digital wallet token transitions
  - name: digital wallet tokens
  - name: direct deposit accounts
  - name: direct deposits
  - name: fee charges
  - name: fee refunds
  - name: fees
  - name: file processing
  - name: funding sources
  - name: Funds movement
  - name: gateways
  - name: Generic money transfers
  - name: GPA fund transfers
  - name: gpa orders
  - name: health checks
  - name: kyblog
  - name: kyc
  - name: mcc groups
  - name: merchantgroups
  - name: Operations for digital wallet token requestor maps
  - name: peer transfers
  - name: ping
  - name: pins
  - name: post transactions
  - name: program
  - name: program configs
  - name: program reserve
  - name: program transfers
  - name: push to card
  - name: real time fee groups
  - name: simulate
  - name: transactions
  - name: user transitions
  - name: users
  - name: velocity controls
  - name: web push provisioning
  - name: webhooks
  - name: Fee Charges
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\n// This source file is used by InfoDev to generate API reference documentation.\n// File location in GitHub is: openapi/feecharges/openapi.yaml\n\nA fee charge moves funds from the general purpose account (GPA) of an account holder to your program's fee account.\nThe charge amount is determined by the fee that is assessed.\nThe request returns an error if the GPA has insufficient funds to cover the fee.\nThis behavior contrasts with assessing a fee using the `/gpaorders` endpoint, in which case the amount of the fee is loaded into the GPA from the funding source before the GPA is debited."
  - name: Fee Refunds
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\n// This source file is used by InfoDev to generate API reference documentation. File location in GitHub is:\n// File location in GitHub is: openapi/feerefunds/openapi.yaml\n\nUse the `/feerefunds` endpoint to refund fees to your account holder's general purpose account (GPA)."
  - name: Fees
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\n// This source file is used by InfoDev to generate API reference documentation. File location in GitHub is:\n// File location in GitHub is: openapi/fees/openapi.yaml\n\nA `fees` resource represents a monetary assessment against an account holder's general purpose account (GPA).\nAssessing a fee transfers funds from the account holder's GPA account to your program's fee account.\nBy default, every account has a GPA account used for the funding of transfers.\n\nYou can assess fees either post-transaction or in real time.\nReal-time fee assessment ensures the account has sufficient funds available to cover both the transaction amount and the fee before authorization of the transaction.\nTo assess fees in real time, you must create a real-time fee group using the `/realtimefeegroups` endpoint.\n\nWhen assessing a post-transaction fee, you can either debit existing GPA funds, or pull in new funds from a funding source.\nTo use existing GPA funds, use the `/feetransfers` endpoint.\nTo pull in new funds, use the fees array in `/gpaorders`.\n\n[NOTE]\nIf your program uses Gateway JIT Funding, you cannot assess fees."
  - name: Addresses
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nThe address resource is your billing address.\nAn active address is required in order to use a payment card funding source.\nTo associate an address with a funding source, use the same `user_token` or `business_token` for both resources.\n\n[NOTE]\nThe `/users` and `/businesses` resources also have address fields.\nThose are used for other purposes, such as KYC identity verification or as shipping addresses for physical cards."
  - name: Account Holder Funding Sources
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/fundingsources/ach`, `/fundingsources/ach/partner`, and `/fundingsources/paymentcard` endpoints to create account holder funding sources.\nA funding source enables access to funds outside of the Marqeta platform.\n\nFor more information on users and businesses, see <</developer-guides/about-account-holders, About Account Holders>>."
  - name: Program Funding Sources
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/fundingsources/program` endpoint to create a program funding source.\n\nA program funding source represents a bank account from which funds are drawn for Managed Just-in-Time (JIT) Funding transactions.\nFor more information about JIT Funding, see <</developer-guides/about-jit-funding, About Just-in-Time Funding>>.\n\nIn the sandbox environment, each program funding source you create simulates funds for use in test transactions.\nIn production environments, program funding sources are created by Marqeta and draw funds from a bank account you set up in conjunction with Marqeta.\n\n[NOTE]\nYour program funding source must be approved by Marqeta and the issuing bank.\nIf you are using a third-party service to collect user funds, Marqeta and the issuing bank require specific reporting to ensure compliance with applicable rules and regulations.\nContact Marqeta for more information."
  - name: Program Gateway Funding Sources
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/fundingsources/programgateway` endpoint to create a program gateway funding source.\n\nA program gateway funding source represents a bank account from which funds are drawn for Gateway Just-in-Time (JIT) Funding transactions.\nFor more information about JIT Funding, see <</developer-guides/about-jit-funding, About Just-in-Time Funding>>.\n\nIn a sandbox environment, you can create a program gateway funding source that simulates funds for use in test transactions.\nIn a production environment, you must work with a Marqeta representative to define the bank account from which the program gateway funding source draws funds.\n\n[NOTE]\nIf you are using a third-party service to collect user funds, Marqeta and the issuing bank require specific reporting to ensure compliance with applicable rules and regulations.\nContact Marqeta for more information."
  - name: GPA Orders
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nThe `/gpaorders` endpoint moves funds from a funding source into an\naccount holder's general-purpose account (GPA).\n\nGPA orders can also be used to move funds from an account holder's funding source into your program's fee account.\n\nGPA orders can be funded by the account holder or your program."
  - name: KYC Verification
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/kyc` endpoint to perform Know Your Customer (KYC) verification tasks for your account holders.\n\nThis endpoint can only be used to perform KYC verification for individuals or businesses in the United States.\n\nFor more information about KYC verification, see <</developer-guides/about-kyc, About KYC Verification>>.\n\nFor more information about account holders, see <</developer-guides/about-account-holders, About Account Holders>>."
  - name: MCC Groups
    description: "A merchant category code (MCC) is a four-digit number assigned by card networks to a business based on the goods or services offered by the business.\nOn the Marqeta platform, an MCC group defines a set of MCCs.\nYou can include an MCC group within a spend control to limit user spending at a set of merchants.\n\nAn MCC group also allows you to automatically increase authorization amounts and to control the expiration of authorizations for the specified MCCs.\nBy default, these controls apply to all cards in your program.\nAn MCC group authorization control can have exceptions defined at the card product level.\n\nSee <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control, as well as links to more information about merchant category codes."
  - name: Merchant Groups
    description: "Use the `/merchantgroups` endpoint to create, update, and retrieve groups of merchant identifiers (MIDs).\nYou can use merchant groups for authorization controls and in card product configurations.\nFor example, use a merchant group to create a <</core-api/authorization-controls#_create_a_merchant_mid_exemption, merchant exemption>> for a group of merchants rather than an individual merchant."
  - name: Peer Transfers
    description: "A peer transfer moves funds from the general purpose account (GPA) of an account holder (a user or business) to another account within your program.\nBoth the sender and recipient accounts must be active.\n\n[NOTE]\nThe `/peertransfers` endpoint is only available for specific, pre-approved use cases.\nFor more information about this endpoint, contact your Marqeta representative."
  - name: PINs
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/pins` endpoint to create, update, or reveal a personal identification number (PIN) for a card."
  - name: Program Reserve
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the Program Reserve API to retrieve program reserve account balances and transactions."
  - name: Program Transfers
    description: "A program transfer moves funds from an account holder's general purpose account (GPA) to a program funding source.\nIn contrast to a fee transfer, the program transfer amount is specified by the transfer itself and can therefore be set dynamically.\nAn auto reload is triggered if the GPA has insufficient funds to cover the transfer amount and auto reload is enabled.\n\n[NOTE]\nThe `/programtransfers` endpoint is only available for specific, pre-approved use cases.\nFor more information about this endpoint, contact your Marqeta representative."
  - name: Real-Time Fee Groups
    description: "Marqeta enables you to assess fees in real time through the use of real-time fee groups.\nA real-time fee group is a collection of fees associated with an account holder group (and thereby associated with the users and businesses that are part of that account holder group).\nReal-time fee assessment ensures that associated accounts have sufficient funds available to cover both the transaction amount and the fee before authorization of a transaction.\n\nBefore you create a real-time fee group, you must create the individual fees (using the `/fees` endpoint) and the account holder group with which you will associate the real-time fee group (using the `/accountholdergroups` endpoint).\nEach fee in the group must be applicable to a different transaction type.\nFor example, one fee could assess $1 on authorization transactions while another assesses $2 on PIN-debit transactions.\n\nUse of real-time fee groups requires prior approval by Marqeta.\nIf you are interested in using this feature for your card program, contact your Marqeta representative for more information.\n\n[NOTE]\nIf your program uses Gateway JIT Funding, you cannot assess fees."
  - name: Digital Wallets Management
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nThe Marqeta platform facilitates the use of digital wallets for storing tokenized cards and making payments.\nThe API provides endpoints that enable mobile applications to provision tokens into a digital wallet.\nIt also provides endpoints for retrieving digital wallet tokens and for managing their lifecycle through state transitions.\n\nFor an overview of digital wallet tokens, see <</developer-guides/digital-wallets-and-tokenization, Digital Wallets and Tokenization>>."
  - name: Transactions
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\n// This source file is used by InfoDev to generate API reference documentation.\n// File location in GitHub is:\n// https://github.marqeta.com/openapi/coreapi/blob/main/openapi/transactions/openapi.yaml\n\nThe `/transactions` resource represents the electronic messages that carry information used for payment processing.\nA transaction usually originates when a cardholder attempts to make a payment, either online or at a physical point of sale.\n\nYou can receive information about transactions as they occur by configuring webhooks.\nLearn about configuring webhooks in the <</developer-guides/about-webhooks, About Webhooks>> guide.\nSee the transaction events for which you can set up webhooks in the <</core-api/event-types, Event Types>> API reference page.\n\nYou can also retrieve transactions associated with specific cards, merchants, and account holders using the endpoints described here.\n\nFor an overview of transactions and the `transaction` object, including the complete list of <</developer-guides/about-transactions#_transaction_response_codes, transaction response codes>>, see <</developer-guides/about-transactions, About Transactions>>.\n\n[TIP]\nUse the `/transactions` endpoint to retrieve smaller datasets (up to one page).\nFor best performance when requesting larger datasets, use the <</diva-api/introduction, DiVA API>>."
  - name: Users
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nThe `users` resource represents a person who accesses Marqeta-administered funds via a Marqeta card (whether physical or virtual).\nThis endpoint enables you to create and manage users on the Marqeta platform.\n\nThis resource stores user attributes such as name, address, and date of birth, as well as financial information such as balances.\nBy default, every user automatically has a general purpose account (GPA) that is used for the funding of transfers and is therefore an `account holder`.\nNote that account balances reside at the account holder level — there are no separate `account` or `balance` objects.\n\nYou can use the `/users` endpoint to create parent-child relationships between two users (where one user is the parent and the other is the child) or between a business and a user (where the business is the parent and the user is the child).\nThis relationship provides reporting to the parent about how cards of children are used and enables the parent to monitor and even restrict card usage.\n\n[NOTE]\nA user can simultaneously be a child of a business and a parent of other users if the user is not configured to use a parent's account balances and the user's child is configured to use a parent's account balances.\nFor more information on account holders, see <</developer-guides/about-account-holders, About Account Holders>>."
  - name: User Transitions
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nUse the `/usertransitions` endpoints to transition user resources between statuses, as well as to retrieve and list status changes for a user resource."
  - name: Velocity Controls
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nA velocity control limits how much users can spend.\nYou can configure velocity controls to limit how much users can spend and the number of transactions they can make in a given span of time.\nYou can apply velocity controls to a single user, to all users associated with a particular card product, or to all users in your program.\n\nOnly Program Managers can create or modify program-wide velocity controls.\nA `POST` or `PUT` call from a role that does not have Program Manager permissions will receive a 403 error if its `association` field is null, or if it includes all of the fields in the request body.\nAvoid this by passing a valid `user_token` or `card_product_token` in the velocity control's `association` object, indicating that the request is specific to a user or card product, and not program-wide.\nYou should also only include the specific fields you want to update, because a `PUT` or `POST` with values for all fields is interpreted as a change that requires Program Manager permissions.\n\nSee <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control.\n\n[NOTE]\nEach program supports a maximum of 90 spend controls (velocity controls and <</core-api/authorization-controls, authorization controls>> combined).\nThe limit of 90 spend controls applies at the program level only; it does not affect the number of user-level spend controls you can use."
  - name: Webhooks
    description: "// Conditional snippet for beta or internal content\ninclude::../../maturity-admonition-banner.adoc[]\n\nWebhooks are notifications about API events, sent as they occur.\nThe Marqeta platform sends these notifications to an endpoint that is hosted in your environment and configured to receive and process them.\n\nCreate a webhook object to represent your webhook endpoint.\nConfigure it with the URL of your webhook endpoint and a set of credentials for accessing that endpoint.\nYou can configure it to send notifications for a single event, a group of events by type, or all event types.\nTo set up multiple webhook endpoints and route different types of event notifications to each, create multiple webhook objects and configure each to send a specific type of event notification to a specific endpoint.\n\nSee <</developer-guides/about-webhooks, About Webhooks>> for information on notifications and a tutorial that walks you through the configuration of your webhook endpoint.\n\nSee <</core-api/event-types, Event Types>> for reference documentation on the types of events that the Marqeta platform supports.\n\n[NOTE]\nWebhooks URLs are cached.\nChanges made on your webhook endpoint can take up to one hour to be applied."