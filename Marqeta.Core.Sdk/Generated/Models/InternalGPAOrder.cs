// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InternalGPAOrder : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount property</summary>
        public double? Amount { get; set; }
        /// <summary>The created_time property</summary>
        public DateTimeOffset? CreatedTime { get; set; }
        /// <summary>The currency property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Currency { get; set; }
#nullable restore
#else
        public string Currency { get; set; }
#endif
        /// <summary>The fundingSource property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Internal_funding_source? FundingSource { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Internal_funding_source FundingSource { get; set; }
#endif
        /// <summary>The last_modified_time property</summary>
        public DateTimeOffset? LastModifiedTime { get; set; }
        /// <summary>The memo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Memo { get; set; }
#nullable restore
#else
        public string Memo { get; set; }
#endif
        /// <summary>The orderState property</summary>
        public global::Marqeta.Core.Sdk.Models.InternalGPAOrder_orderState? OrderState { get; set; }
        /// <summary>The orderType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrderType { get; set; }
#nullable restore
#else
        public string OrderType { get; set; }
#endif
        /// <summary>The originalOrderId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginalOrderId { get; set; }
#nullable restore
#else
        public string OriginalOrderId { get; set; }
#endif
        /// <summary>The responseCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResponseCode { get; set; }
#nullable restore
#else
        public string ResponseCode { get; set; }
#endif
        /// <summary>The responseMemo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResponseMemo { get; set; }
#nullable restore
#else
        public string ResponseMemo { get; set; }
#endif
        /// <summary>The tags property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Tags { get; set; }
#nullable restore
#else
        public string Tags { get; set; }
#endif
        /// <summary>The token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Token { get; set; }
#nullable restore
#else
        public string Token { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.InternalGPAOrder"/> and sets the default values.
        /// </summary>
        public InternalGPAOrder()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.InternalGPAOrder"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.InternalGPAOrder CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.InternalGPAOrder();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetDoubleValue(); } },
                { "created_time", n => { CreatedTime = n.GetDateTimeOffsetValue(); } },
                { "currency", n => { Currency = n.GetStringValue(); } },
                { "fundingSource", n => { FundingSource = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Internal_funding_source>(global::Marqeta.Core.Sdk.Models.Internal_funding_source.CreateFromDiscriminatorValue); } },
                { "last_modified_time", n => { LastModifiedTime = n.GetDateTimeOffsetValue(); } },
                { "memo", n => { Memo = n.GetStringValue(); } },
                { "orderState", n => { OrderState = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.InternalGPAOrder_orderState>(); } },
                { "orderType", n => { OrderType = n.GetStringValue(); } },
                { "originalOrderId", n => { OriginalOrderId = n.GetStringValue(); } },
                { "responseCode", n => { ResponseCode = n.GetStringValue(); } },
                { "responseMemo", n => { ResponseMemo = n.GetStringValue(); } },
                { "tags", n => { Tags = n.GetStringValue(); } },
                { "token", n => { Token = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("amount", Amount);
            writer.WriteDateTimeOffsetValue("created_time", CreatedTime);
            writer.WriteStringValue("currency", Currency);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Internal_funding_source>("fundingSource", FundingSource);
            writer.WriteDateTimeOffsetValue("last_modified_time", LastModifiedTime);
            writer.WriteStringValue("memo", Memo);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.InternalGPAOrder_orderState>("orderState", OrderState);
            writer.WriteStringValue("orderType", OrderType);
            writer.WriteStringValue("originalOrderId", OriginalOrderId);
            writer.WriteStringValue("responseCode", ResponseCode);
            writer.WriteStringValue("responseMemo", ResponseMemo);
            writer.WriteStringValue("tags", Tags);
            writer.WriteStringValue("token", Token);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
