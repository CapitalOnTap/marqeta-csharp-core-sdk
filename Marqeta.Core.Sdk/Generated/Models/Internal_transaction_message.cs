// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Internal_transaction_message : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The authorization_tranlog property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Internal_authorization_transaction? AuthorizationTranlog { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Internal_authorization_transaction AuthorizationTranlog { get; set; }
#endif
        /// <summary>The context property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Internal_transaction_message_context? Context { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Internal_transaction_message_context Context { get; set; }
#endif
        /// <summary>The credit_debit_indicator property</summary>
        public global::Marqeta.Core.Sdk.Models.Internal_transaction_message_credit_debit_indicator? CreditDebitIndicator { get; set; }
        /// <summary>The funding_tranlog property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Funding_tranlog? FundingTranlog { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Funding_tranlog FundingTranlog { get; set; }
#endif
        /// <summary>The processing_start_time_millis property</summary>
        public long? ProcessingStartTimeMillis { get; set; }
        /// <summary>The velocity_caches property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Marqeta.Core.Sdk.Models.VelocityCache>? VelocityCaches { get; set; }
#nullable restore
#else
        public List<global::Marqeta.Core.Sdk.Models.VelocityCache> VelocityCaches { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.Internal_transaction_message"/> and sets the default values.
        /// </summary>
        public Internal_transaction_message()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.Internal_transaction_message"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.Internal_transaction_message CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.Internal_transaction_message();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "authorization_tranlog", n => { AuthorizationTranlog = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Internal_authorization_transaction>(global::Marqeta.Core.Sdk.Models.Internal_authorization_transaction.CreateFromDiscriminatorValue); } },
                { "context", n => { Context = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Internal_transaction_message_context>(global::Marqeta.Core.Sdk.Models.Internal_transaction_message_context.CreateFromDiscriminatorValue); } },
                { "credit_debit_indicator", n => { CreditDebitIndicator = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Internal_transaction_message_credit_debit_indicator>(); } },
                { "funding_tranlog", n => { FundingTranlog = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Funding_tranlog>(global::Marqeta.Core.Sdk.Models.Funding_tranlog.CreateFromDiscriminatorValue); } },
                { "processing_start_time_millis", n => { ProcessingStartTimeMillis = n.GetLongValue(); } },
                { "velocity_caches", n => { VelocityCaches = n.GetCollectionOfObjectValues<global::Marqeta.Core.Sdk.Models.VelocityCache>(global::Marqeta.Core.Sdk.Models.VelocityCache.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Internal_authorization_transaction>("authorization_tranlog", AuthorizationTranlog);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Internal_transaction_message_context>("context", Context);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Internal_transaction_message_credit_debit_indicator>("credit_debit_indicator", CreditDebitIndicator);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Funding_tranlog>("funding_tranlog", FundingTranlog);
            writer.WriteLongValue("processing_start_time_millis", ProcessingStartTimeMillis);
            writer.WriteCollectionOfObjectValues<global::Marqeta.Core.Sdk.Models.VelocityCache>("velocity_caches", VelocityCaches);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
