// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    /// <summary>
    /// Contains information on a reward policy.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PolicyRewardResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Reward accrual strategy for a credit program.If no value for `accrual_strategy` is set, the default value of this field is `DEFAULT`.</summary>
        public global::Marqeta.Core.Sdk.Models.PolicyRewardAccrualType? AccrualStrategy { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>List of one or more reward conversions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Marqeta.Core.Sdk.Models.PolicyRewardConversion>? Conversions { get; set; }
#nullable restore
#else
        public List<global::Marqeta.Core.Sdk.Models.PolicyRewardConversion> Conversions { get; set; }
#endif
        /// <summary>Date and time when the reward policy was created on Marqeta&apos;s credit platform, in UTC.</summary>
        public DateTimeOffset? CreatedTime { get; set; }
        /// <summary>Description of the reward policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Defines what merchant category codes (MCCs) are excluded from earning rewards.MCCs must be a four-digit number, or a range of two four-digit numbers separated by a hyphen.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.PolicyRewardExclusions? Exclusions { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.PolicyRewardExclusions Exclusions { get; set; }
#endif
        /// <summary>Name of the reward policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>A list of one or more reward rules.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Marqeta.Core.Sdk.Models.PolicyRewardPlatformRule>? Rules { get; set; }
#nullable restore
#else
        public List<global::Marqeta.Core.Sdk.Models.PolicyRewardPlatformRule> Rules { get; set; }
#endif
        /// <summary>Reward settlement strategy for a credit program.</summary>
        public global::Marqeta.Core.Sdk.Models.PolicyRewardSettlementType? SettlementStrategy { get; set; }
        /// <summary>Unique identifier of the reward policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Token { get; set; }
#nullable restore
#else
        public string Token { get; set; }
#endif
        /// <summary>Date and time when the reward policy was last updated on Marqeta&apos;s credit platform, in UTC.</summary>
        public DateTimeOffset? UpdatedTime { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.PolicyRewardResponse"/> and sets the default values.
        /// </summary>
        public PolicyRewardResponse()
        {
            AdditionalData = new Dictionary<string, object>();
            AccrualStrategy = global::Marqeta.Core.Sdk.Models.PolicyRewardAccrualType.DEFAULT;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.PolicyRewardResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.PolicyRewardResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.PolicyRewardResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accrual_strategy", n => { AccrualStrategy = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.PolicyRewardAccrualType>(); } },
                { "conversions", n => { Conversions = n.GetCollectionOfObjectValues<global::Marqeta.Core.Sdk.Models.PolicyRewardConversion>(global::Marqeta.Core.Sdk.Models.PolicyRewardConversion.CreateFromDiscriminatorValue)?.AsList(); } },
                { "created_time", n => { CreatedTime = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "exclusions", n => { Exclusions = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.PolicyRewardExclusions>(global::Marqeta.Core.Sdk.Models.PolicyRewardExclusions.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "rules", n => { Rules = n.GetCollectionOfObjectValues<global::Marqeta.Core.Sdk.Models.PolicyRewardPlatformRule>(global::Marqeta.Core.Sdk.Models.PolicyRewardPlatformRule.CreateFromDiscriminatorValue)?.AsList(); } },
                { "settlement_strategy", n => { SettlementStrategy = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.PolicyRewardSettlementType>(); } },
                { "token", n => { Token = n.GetStringValue(); } },
                { "updated_time", n => { UpdatedTime = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.PolicyRewardAccrualType>("accrual_strategy", AccrualStrategy);
            writer.WriteCollectionOfObjectValues<global::Marqeta.Core.Sdk.Models.PolicyRewardConversion>("conversions", Conversions);
            writer.WriteDateTimeOffsetValue("created_time", CreatedTime);
            writer.WriteStringValue("description", Description);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.PolicyRewardExclusions>("exclusions", Exclusions);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfObjectValues<global::Marqeta.Core.Sdk.Models.PolicyRewardPlatformRule>("rules", Rules);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.PolicyRewardSettlementType>("settlement_strategy", SettlementStrategy);
            writer.WriteStringValue("token", Token);
            writer.WriteDateTimeOffsetValue("updated_time", UpdatedTime);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
