// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ApplicationTransitionRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>State of the application.If manually &lt;&lt;/core-api/credit-applications#transitionApplication, transitioning an application state&gt;&gt;:* `application_state` is the state to which you want to transition the application status; must be `ACCEPTED` or `REJECTED`.* `original_status` returns the state of the application before it was manually transitioned.* `status` returns the state to which the application was transitioned.</summary>
        public global::Marqeta.Core.Sdk.Models.ApplicationResourceState? ApplicationState { get; set; }
        /// <summary>The tracking token of the Benefits Disclosure.This is the `tracking_token` returned in the `BENEFITS_DISCLOSURE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.Required if transitioning application state to `ACCEPTED`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BenefitsDisclosureTrackingToken { get; set; }
#nullable restore
#else
        public string BenefitsDisclosureTrackingToken { get; set; }
#endif
        /// <summary>The tracking token of the Card Member Agreement.This is the `tracking_token` returned in the `CARD_MEMBER_AGREEMENT` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.Required if transitioning application state to `ACCEPTED`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardMemberAgreementTrackingToken { get; set; }
#nullable restore
#else
        public string CardMemberAgreementTrackingToken { get; set; }
#endif
        /// <summary>The tracking token of the Rewards Disclosure Post-terms.This is the `tracking_token` returned in the `REWARDS_DISCLOSURE_POST_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.Required if transitioning application state to `ACCEPTED`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RewardsDisclosurePostTermsTrackingToken { get; set; }
#nullable restore
#else
        public string RewardsDisclosurePostTermsTrackingToken { get; set; }
#endif
        /// <summary>The tracking token of the Terms Schedule.This is the `tracking_token` returned in the `TERMS_SCHEDULE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.Required if transitioning application state to `ACCEPTED`</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TermsScheduleTrackingToken { get; set; }
#nullable restore
#else
        public string TermsScheduleTrackingToken { get; set; }
#endif
        /// <summary>Main identifier of the resource, also used as the idempotency key on the request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Token { get; set; }
#nullable restore
#else
        public string Token { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.ApplicationTransitionRequest"/> and sets the default values.
        /// </summary>
        public ApplicationTransitionRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.ApplicationTransitionRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.ApplicationTransitionRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.ApplicationTransitionRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "application_state", n => { ApplicationState = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.ApplicationResourceState>(); } },
                { "benefits_disclosure_tracking_token", n => { BenefitsDisclosureTrackingToken = n.GetStringValue(); } },
                { "card_member_agreement_tracking_token", n => { CardMemberAgreementTrackingToken = n.GetStringValue(); } },
                { "rewards_disclosure_post_terms_tracking_token", n => { RewardsDisclosurePostTermsTrackingToken = n.GetStringValue(); } },
                { "terms_schedule_tracking_token", n => { TermsScheduleTrackingToken = n.GetStringValue(); } },
                { "token", n => { Token = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.ApplicationResourceState>("application_state", ApplicationState);
            writer.WriteStringValue("benefits_disclosure_tracking_token", BenefitsDisclosureTrackingToken);
            writer.WriteStringValue("card_member_agreement_tracking_token", CardMemberAgreementTrackingToken);
            writer.WriteStringValue("rewards_disclosure_post_terms_tracking_token", RewardsDisclosurePostTermsTrackingToken);
            writer.WriteStringValue("terms_schedule_tracking_token", TermsScheduleTrackingToken);
            writer.WriteStringValue("token", Token);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
