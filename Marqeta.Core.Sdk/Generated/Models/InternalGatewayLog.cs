// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InternalGatewayLog : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount property</summary>
        public double? Amount { get; set; }
        /// <summary>The apiDuration property</summary>
        public long? ApiDuration { get; set; }
        /// <summary>The funding_source property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Internal_funding_source? FundingSource { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Internal_funding_source FundingSource { get; set; }
#endif
        /// <summary>The gatewayDuration property</summary>
        public long? GatewayDuration { get; set; }
        /// <summary>The gatewayMerchant property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.InternalGatewayMerchant? GatewayMerchant { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.InternalGatewayMerchant GatewayMerchant { get; set; }
#endif
        /// <summary>The gatewayRequestMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GatewayRequestMethod { get; set; }
#nullable restore
#else
        public string GatewayRequestMethod { get; set; }
#endif
        /// <summary>The gatewayResponseMessage property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GatewayResponseMessage { get; set; }
#nullable restore
#else
        public string GatewayResponseMessage { get; set; }
#endif
        /// <summary>The gatewayTransactionId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GatewayTransactionId { get; set; }
#nullable restore
#else
        public string GatewayTransactionId { get; set; }
#endif
        /// <summary>The gatewayVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GatewayVersion { get; set; }
#nullable restore
#else
        public string GatewayVersion { get; set; }
#endif
        /// <summary>The internalUser property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Internal_user? InternalUser { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Internal_user InternalUser { get; set; }
#endif
        /// <summary>The memo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Memo { get; set; }
#nullable restore
#else
        public string Memo { get; set; }
#endif
        /// <summary>Contains network-related metadata for the transaction, including details about the card program and the card product.Returned if provided by the card network</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Network_metadata? NetworkMetadata { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Network_metadata NetworkMetadata { get; set; }
#endif
        /// <summary>The orderId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrderId { get; set; }
#nullable restore
#else
        public string OrderId { get; set; }
#endif
        /// <summary>The requestMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequestMethod { get; set; }
#nullable restore
#else
        public string RequestMethod { get; set; }
#endif
        /// <summary>The responseCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResponseCode { get; set; }
#nullable restore
#else
        public string ResponseCode { get; set; }
#endif
        /// <summary>The responseMessage property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResponseMessage { get; set; }
#nullable restore
#else
        public string ResponseMessage { get; set; }
#endif
        /// <summary>The responseReasonCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResponseReasonCode { get; set; }
#nullable restore
#else
        public string ResponseReasonCode { get; set; }
#endif
        /// <summary>The responseStatus property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResponseStatus { get; set; }
#nullable restore
#else
        public string ResponseStatus { get; set; }
#endif
        /// <summary>The responseSubCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResponseSubCode { get; set; }
#nullable restore
#else
        public string ResponseSubCode { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.InternalGatewayLog"/> and sets the default values.
        /// </summary>
        public InternalGatewayLog()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.InternalGatewayLog"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.InternalGatewayLog CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.InternalGatewayLog();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetDoubleValue(); } },
                { "apiDuration", n => { ApiDuration = n.GetLongValue(); } },
                { "funding_source", n => { FundingSource = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Internal_funding_source>(global::Marqeta.Core.Sdk.Models.Internal_funding_source.CreateFromDiscriminatorValue); } },
                { "gatewayDuration", n => { GatewayDuration = n.GetLongValue(); } },
                { "gatewayMerchant", n => { GatewayMerchant = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.InternalGatewayMerchant>(global::Marqeta.Core.Sdk.Models.InternalGatewayMerchant.CreateFromDiscriminatorValue); } },
                { "gatewayRequestMethod", n => { GatewayRequestMethod = n.GetStringValue(); } },
                { "gatewayResponseMessage", n => { GatewayResponseMessage = n.GetStringValue(); } },
                { "gatewayTransactionId", n => { GatewayTransactionId = n.GetStringValue(); } },
                { "gatewayVersion", n => { GatewayVersion = n.GetStringValue(); } },
                { "internalUser", n => { InternalUser = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Internal_user>(global::Marqeta.Core.Sdk.Models.Internal_user.CreateFromDiscriminatorValue); } },
                { "memo", n => { Memo = n.GetStringValue(); } },
                { "network_metadata", n => { NetworkMetadata = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Network_metadata>(global::Marqeta.Core.Sdk.Models.Network_metadata.CreateFromDiscriminatorValue); } },
                { "orderId", n => { OrderId = n.GetStringValue(); } },
                { "requestMethod", n => { RequestMethod = n.GetStringValue(); } },
                { "responseCode", n => { ResponseCode = n.GetStringValue(); } },
                { "responseMessage", n => { ResponseMessage = n.GetStringValue(); } },
                { "responseReasonCode", n => { ResponseReasonCode = n.GetStringValue(); } },
                { "responseStatus", n => { ResponseStatus = n.GetStringValue(); } },
                { "responseSubCode", n => { ResponseSubCode = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("amount", Amount);
            writer.WriteLongValue("apiDuration", ApiDuration);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Internal_funding_source>("funding_source", FundingSource);
            writer.WriteLongValue("gatewayDuration", GatewayDuration);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.InternalGatewayMerchant>("gatewayMerchant", GatewayMerchant);
            writer.WriteStringValue("gatewayRequestMethod", GatewayRequestMethod);
            writer.WriteStringValue("gatewayResponseMessage", GatewayResponseMessage);
            writer.WriteStringValue("gatewayTransactionId", GatewayTransactionId);
            writer.WriteStringValue("gatewayVersion", GatewayVersion);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Internal_user>("internalUser", InternalUser);
            writer.WriteStringValue("memo", Memo);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Network_metadata>("network_metadata", NetworkMetadata);
            writer.WriteStringValue("orderId", OrderId);
            writer.WriteStringValue("requestMethod", RequestMethod);
            writer.WriteStringValue("responseCode", ResponseCode);
            writer.WriteStringValue("responseMessage", ResponseMessage);
            writer.WriteStringValue("responseReasonCode", ResponseReasonCode);
            writer.WriteStringValue("responseStatus", ResponseStatus);
            writer.WriteStringValue("responseSubCode", ResponseSubCode);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
