// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    /// <summary>
    /// Visa Alias response object for retrieving information.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Ads_alias_response : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Type of Visa Alias in the Alias Directory Service (ADS) profile. Visa supports phone and email as Visa Alias types that can be used in place of sensitive payment credentials details.This field is returned if it exists in the resource.</summary>
        public global::Marqeta.Core.Sdk.Models.Ads_alias_response_aliasType? AliasType { get; set; }
        /// <summary>Visa Alias value, which is the email address or phone number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AliasValue { get; set; }
#nullable restore
#else
        public string AliasValue { get; set; }
#endif
        /// <summary>Visa Alias Directory Service (ADS) consent information in the ADS profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Ads_consent? Consent { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Ads_consent Consent { get; set; }
#endif
        /// <summary>Date and time when the Visa Alias was created.</summary>
        public DateTimeOffset? CreatedOn { get; set; }
        /// <summary>Identification of the user associated with the Visa Alias.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Ads_identification? Identification { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Ads_identification Identification { get; set; }
#endif
        /// <summary>Date and time when the Visa Alias was last modified.</summary>
        public DateTimeOffset? LastModifiedOn { get; set; }
        /// <summary>Alias Directory Service (ADS) profile information.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Ads_profile? Profile { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Ads_profile Profile { get; set; }
#endif
        /// <summary>Status of the Visa Alias.</summary>
        public global::Marqeta.Core.Sdk.Models.Ads_alias_response_status? Status { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.Ads_alias_response"/> and sets the default values.
        /// </summary>
        public Ads_alias_response()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.Ads_alias_response"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.Ads_alias_response CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.Ads_alias_response();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "aliasType", n => { AliasType = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Ads_alias_response_aliasType>(); } },
                { "aliasValue", n => { AliasValue = n.GetStringValue(); } },
                { "consent", n => { Consent = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Ads_consent>(global::Marqeta.Core.Sdk.Models.Ads_consent.CreateFromDiscriminatorValue); } },
                { "createdOn", n => { CreatedOn = n.GetDateTimeOffsetValue(); } },
                { "identification", n => { Identification = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Ads_identification>(global::Marqeta.Core.Sdk.Models.Ads_identification.CreateFromDiscriminatorValue); } },
                { "lastModifiedOn", n => { LastModifiedOn = n.GetDateTimeOffsetValue(); } },
                { "profile", n => { Profile = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Ads_profile>(global::Marqeta.Core.Sdk.Models.Ads_profile.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Ads_alias_response_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Ads_alias_response_aliasType>("aliasType", AliasType);
            writer.WriteStringValue("aliasValue", AliasValue);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Ads_consent>("consent", Consent);
            writer.WriteDateTimeOffsetValue("createdOn", CreatedOn);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Ads_identification>("identification", Identification);
            writer.WriteDateTimeOffsetValue("lastModifiedOn", LastModifiedOn);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Ads_profile>("profile", Profile);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Ads_alias_response_status>("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
