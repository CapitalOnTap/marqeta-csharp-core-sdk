// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Marqeta.Core.Sdk.Models {
    /// <summary>
    /// Specifies bundles for a credit program.
    /// </summary>
    public class BundleUpdateReq : IAdditionalDataHolder, IParsable 
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Unique identifier of the bundle&apos;s APR policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AprPolicyToken { get; set; }
#nullable restore
#else
        public string AprPolicyToken { get; set; }
#endif
        /// <summary>Unique identifier of the bundle&apos;s credit product policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreditProductPolicyToken { get; set; }
#nullable restore
#else
        public string CreditProductPolicyToken { get; set; }
#endif
        /// <summary>Description of the bundle.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Unique identifier of the bundle&apos;s document policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DocumentPolicyToken { get; set; }
#nullable restore
#else
        public string DocumentPolicyToken { get; set; }
#endif
        /// <summary>Unique identifier of the bundle&apos;s fee policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FeePolicyToken { get; set; }
#nullable restore
#else
        public string FeePolicyToken { get; set; }
#endif
        /// <summary>Name of the bundle.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Unique identifier of the bundle&apos;s offer policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OfferPolicyToken { get; set; }
#nullable restore
#else
        public string OfferPolicyToken { get; set; }
#endif
        /// <summary>Unique identifier of the bundle&apos;s reward policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RewardPolicyToken { get; set; }
#nullable restore
#else
        public string RewardPolicyToken { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="BundleUpdateReq"/> and sets the default values.
        /// </summary>
        public BundleUpdateReq()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="BundleUpdateReq"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static BundleUpdateReq CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new BundleUpdateReq();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"apr_policy_token", n => { AprPolicyToken = n.GetStringValue(); } },
                {"credit_product_policy_token", n => { CreditProductPolicyToken = n.GetStringValue(); } },
                {"description", n => { Description = n.GetStringValue(); } },
                {"document_policy_token", n => { DocumentPolicyToken = n.GetStringValue(); } },
                {"fee_policy_token", n => { FeePolicyToken = n.GetStringValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"offer_policy_token", n => { OfferPolicyToken = n.GetStringValue(); } },
                {"reward_policy_token", n => { RewardPolicyToken = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("apr_policy_token", AprPolicyToken);
            writer.WriteStringValue("credit_product_policy_token", CreditProductPolicyToken);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("document_policy_token", DocumentPolicyToken);
            writer.WriteStringValue("fee_policy_token", FeePolicyToken);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("offer_policy_token", OfferPolicyToken);
            writer.WriteStringValue("reward_policy_token", RewardPolicyToken);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
