// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Bank_transfer_response_model : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount property</summary>
        public double? Amount { get; set; }
        /// <summary>The batch_number property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BatchNumber { get; set; }
#nullable restore
#else
        public string BatchNumber { get; set; }
#endif
        /// <summary>default = API</summary>
        public global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_channel? Channel { get; set; }
        /// <summary>The created_by property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedBy { get; set; }
#nullable restore
#else
        public string CreatedBy { get; set; }
#endif
        /// <summary>The created_time property</summary>
        public DateTimeOffset? CreatedTime { get; set; }
        /// <summary>default = USD</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrencyCode { get; set; }
#nullable restore
#else
        public string CurrencyCode { get; set; }
#endif
        /// <summary>The funding_source_token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FundingSourceToken { get; set; }
#nullable restore
#else
        public string FundingSourceToken { get; set; }
#endif
        /// <summary>The is_early_funded property</summary>
        public bool? IsEarlyFunded { get; set; }
        /// <summary>The last_modified_time property</summary>
        public DateTimeOffset? LastModifiedTime { get; set; }
        /// <summary>The memo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Memo { get; set; }
#nullable restore
#else
        public string Memo { get; set; }
#endif
        /// <summary>The return_code property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReturnCode { get; set; }
#nullable restore
#else
        public string ReturnCode { get; set; }
#endif
        /// <summary>The return_reason property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReturnReason { get; set; }
#nullable restore
#else
        public string ReturnReason { get; set; }
#endif
        /// <summary>The standard_entry_class_code property</summary>
        public global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_standard_entry_class_code? StandardEntryClassCode { get; set; }
        /// <summary>The statement_descriptor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatementDescriptor { get; set; }
#nullable restore
#else
        public string StatementDescriptor { get; set; }
#endif
        /// <summary>The status property</summary>
        public global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_status? Status { get; set; }
        /// <summary>The token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Token { get; set; }
#nullable restore
#else
        public string Token { get; set; }
#endif
        /// <summary>default = STANDARD</summary>
        public global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_transfer_speed? TransferSpeed { get; set; }
        /// <summary>The transitions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Marqeta.Core.Sdk.Models.Bank_transfer_transition_response_model>? Transitions { get; set; }
#nullable restore
#else
        public List<global::Marqeta.Core.Sdk.Models.Bank_transfer_transition_response_model> Transitions { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model"/> and sets the default values.
        /// </summary>
        public Bank_transfer_response_model()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amount", n => { Amount = n.GetDoubleValue(); } },
                { "batch_number", n => { BatchNumber = n.GetStringValue(); } },
                { "channel", n => { Channel = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_channel>(); } },
                { "created_by", n => { CreatedBy = n.GetStringValue(); } },
                { "created_time", n => { CreatedTime = n.GetDateTimeOffsetValue(); } },
                { "currency_code", n => { CurrencyCode = n.GetStringValue(); } },
                { "funding_source_token", n => { FundingSourceToken = n.GetStringValue(); } },
                { "is_early_funded", n => { IsEarlyFunded = n.GetBoolValue(); } },
                { "last_modified_time", n => { LastModifiedTime = n.GetDateTimeOffsetValue(); } },
                { "memo", n => { Memo = n.GetStringValue(); } },
                { "return_code", n => { ReturnCode = n.GetStringValue(); } },
                { "return_reason", n => { ReturnReason = n.GetStringValue(); } },
                { "standard_entry_class_code", n => { StandardEntryClassCode = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_standard_entry_class_code>(); } },
                { "statement_descriptor", n => { StatementDescriptor = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_status>(); } },
                { "token", n => { Token = n.GetStringValue(); } },
                { "transfer_speed", n => { TransferSpeed = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_transfer_speed>(); } },
                { "transitions", n => { Transitions = n.GetCollectionOfObjectValues<global::Marqeta.Core.Sdk.Models.Bank_transfer_transition_response_model>(global::Marqeta.Core.Sdk.Models.Bank_transfer_transition_response_model.CreateFromDiscriminatorValue)?.AsList(); } },
                { "type", n => { Type = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("amount", Amount);
            writer.WriteStringValue("batch_number", BatchNumber);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_channel>("channel", Channel);
            writer.WriteStringValue("created_by", CreatedBy);
            writer.WriteDateTimeOffsetValue("created_time", CreatedTime);
            writer.WriteStringValue("currency_code", CurrencyCode);
            writer.WriteStringValue("funding_source_token", FundingSourceToken);
            writer.WriteBoolValue("is_early_funded", IsEarlyFunded);
            writer.WriteDateTimeOffsetValue("last_modified_time", LastModifiedTime);
            writer.WriteStringValue("memo", Memo);
            writer.WriteStringValue("return_code", ReturnCode);
            writer.WriteStringValue("return_reason", ReturnReason);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_standard_entry_class_code>("standard_entry_class_code", StandardEntryClassCode);
            writer.WriteStringValue("statement_descriptor", StatementDescriptor);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_status>("status", Status);
            writer.WriteStringValue("token", Token);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_transfer_speed>("transfer_speed", TransferSpeed);
            writer.WriteCollectionOfObjectValues<global::Marqeta.Core.Sdk.Models.Bank_transfer_transition_response_model>("transitions", Transitions);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Bank_transfer_response_model_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
