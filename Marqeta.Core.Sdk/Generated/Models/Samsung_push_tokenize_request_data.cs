// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Marqeta.Core.Sdk.Models {
    /// <summary>
    /// Contains details about a card tokenization push request.
    /// </summary>
    public class Samsung_push_tokenize_request_data : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Specifies the type of card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardType { get; set; }
#nullable restore
#else
        public string CardType { get; set; }
#endif
        /// <summary>Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).`Visa 5678`, for example.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>Encrypted card or cardholder details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExtraProvisionPayload { get; set; }
#nullable restore
#else
        public string ExtraProvisionPayload { get; set; }
#endif
        /// <summary>Last four digits of the primary account number of the physical or virtual card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastDigits { get; set; }
#nullable restore
#else
        public string LastDigits { get; set; }
#endif
        /// <summary>Specifies the card network of the physical or virtual card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Network { get; set; }
#nullable restore
#else
        public string Network { get; set; }
#endif
        /// <summary>Specifies the network that provides the digital wallet token service, as determined by the Samsung Wallet library.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TokenServiceProvider { get; set; }
#nullable restore
#else
        public string TokenServiceProvider { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="Samsung_push_tokenize_request_data"/> and sets the default values.
        /// </summary>
        public Samsung_push_tokenize_request_data() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Samsung_push_tokenize_request_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Samsung_push_tokenize_request_data CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Samsung_push_tokenize_request_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"card_type", n => { CardType = n.GetStringValue(); } },
                {"display_name", n => { DisplayName = n.GetStringValue(); } },
                {"extra_provision_payload", n => { ExtraProvisionPayload = n.GetStringValue(); } },
                {"last_digits", n => { LastDigits = n.GetStringValue(); } },
                {"network", n => { Network = n.GetStringValue(); } },
                {"token_service_provider", n => { TokenServiceProvider = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("card_type", CardType);
            writer.WriteStringValue("display_name", DisplayName);
            writer.WriteStringValue("extra_provision_payload", ExtraProvisionPayload);
            writer.WriteStringValue("last_digits", LastDigits);
            writer.WriteStringValue("network", Network);
            writer.WriteStringValue("token_service_provider", TokenServiceProvider);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
