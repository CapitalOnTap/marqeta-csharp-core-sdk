// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    /// <summary>
    /// Contains account name verification data used to make JIT Funding decisions from one of the following objects:* The `gateway` object, which contains account name verification data from your JIT Funding gateway.* The `issuer` object, which contains account name verification data from the Marqeta platform.* The `request` object, which contains account name verification data as it appears in a JIT Funding request.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Jit_account_name_verification : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Contains account name verification data used to make JIT Funding decisions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Account_name_verification_source? Gateway { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Account_name_verification_source Gateway { get; set; }
#endif
        /// <summary>Contains account name verification data used to make JIT Funding decisions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Account_name_verification_source? Issuer { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Account_name_verification_source Issuer { get; set; }
#endif
        /// <summary>Contains account name verification data used to make JIT Funding decisions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Ani_information_1? Request { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Ani_information_1 Request { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.Jit_account_name_verification"/> and sets the default values.
        /// </summary>
        public Jit_account_name_verification()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.Jit_account_name_verification"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.Jit_account_name_verification CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.Jit_account_name_verification();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "gateway", n => { Gateway = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Account_name_verification_source>(global::Marqeta.Core.Sdk.Models.Account_name_verification_source.CreateFromDiscriminatorValue); } },
                { "issuer", n => { Issuer = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Account_name_verification_source>(global::Marqeta.Core.Sdk.Models.Account_name_verification_source.CreateFromDiscriminatorValue); } },
                { "request", n => { Request = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Ani_information_1>(global::Marqeta.Core.Sdk.Models.Ani_information_1.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Account_name_verification_source>("gateway", Gateway);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Account_name_verification_source>("issuer", Issuer);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Ani_information_1>("request", Request);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
