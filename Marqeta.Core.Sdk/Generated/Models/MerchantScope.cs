// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    /// <summary>
    /// Defines the group of merchants to which the velocity control applies.If no fields are populated, the velocity control applies to all merchants.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class MerchantScope : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Attribute value corresponding to the chosen scope.If &apos;mcc&apos; is chosen, provide the Merchant Category Code (MCC).If &apos;mcc_group&apos; is chosen, provide the token identifying a group of MCCs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Attribute { get; set; }
#nullable restore
#else
        public string Attribute { get; set; }
#endif
        /// <summary>Indicates whether to decline transactions at merchants not included in the scope.If `true`, transactions at merchants not included in the scope will be declined.If `false`, transactions at merchants not included in the scope will not be declined.*Default value:* `false`</summary>
        public bool? DeclineOtherMerchants { get; set; }
        /// <summary>Scope of the merchant category.Can be either &apos;mcc&apos; or &apos;mcc_group&apos;.</summary>
        public global::Marqeta.Core.Sdk.Models.MerchantScope_scope? Scope { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.MerchantScope"/> and sets the default values.
        /// </summary>
        public MerchantScope()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.MerchantScope"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.MerchantScope CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.MerchantScope();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attribute", n => { Attribute = n.GetStringValue(); } },
                { "decline_other_merchants", n => { DeclineOtherMerchants = n.GetBoolValue(); } },
                { "scope", n => { Scope = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.MerchantScope_scope>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("attribute", Attribute);
            writer.WriteBoolValue("decline_other_merchants", DeclineOtherMerchants);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.MerchantScope_scope>("scope", Scope);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
