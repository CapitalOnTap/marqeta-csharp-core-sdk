// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Card_transition_response : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The barcode printed on the card, expressed as digits.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Barcode { get; set; }
#nullable restore
#else
        public string Barcode { get; set; }
#endif
        /// <summary>The unique identifier of the bulk card order.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BulkIssuanceToken { get; set; }
#nullable restore
#else
        public string BulkIssuanceToken { get; set; }
#endif
        /// <summary>The card property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Card_metadata? Card { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Card_metadata Card { get; set; }
#endif
        /// <summary>Unique identifier of the card product.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardProductToken { get; set; }
#nullable restore
#else
        public string CardProductToken { get; set; }
#endif
        /// <summary>Unique identifier of the card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardToken { get; set; }
#nullable restore
#else
        public string CardToken { get; set; }
#endif
        /// <summary>The mechanism by which the transition was initiated.* *ADMIN* - Indicates that the card transition was initiated through the Marqeta Dashboard.* *API* - Indicates that the card transition was initiated by you through the Core API.Use this value when creating a card transition with an API `POST` request.* *FRAUD* - Indicates that either Marqeta or the card network has determined that the card is fraudulent.* *IVR* - Indicates that the card transition was initiated through your Interactive Voice Response system.* *SYSTEM* - Indicates that the card transition was initiated by Marqeta.For example, Marqeta suspended the card due to excessive failed personal identification number (PIN) entries.</summary>
        public global::Marqeta.Core.Sdk.Models.Card_transition_response_channel? Channel { get; set; }
        /// <summary>Date and time when the resource was created, in UTC.</summary>
        public DateTimeOffset? CreatedTime { get; set; }
        /// <summary>A value of `true` indicates that you requested expedited processing of the card from your card fulfillment provider.</summary>
        public bool? Expedite { get; set; }
        /// <summary>Expiration date in `MMyy` format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Expiration { get; set; }
#nullable restore
#else
        public string Expiration { get; set; }
#endif
        /// <summary>Expiration date and time in UTC format.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExpirationTime { get; set; }
#nullable restore
#else
        public string ExpirationTime { get; set; }
#endif
        /// <summary>Specifies certain physical characteristics of a card, as well as shipment information.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.CardFulfillmentRequest? Fulfillment { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.CardFulfillmentRequest Fulfillment { get; set; }
#endif
        /// <summary>Provides status information about the card related to order and delivery.The possible fulfillment states are:* *ISSUED:* Initial state of all newly created/issued cards* *ORDERED:* Card ordered through card fulfillment provider* *REJECTED:* Card rejected by card fulfillment provider* *SHIPPED:* Card shipped by card fulfillment provider* *DELIVERED:* Card delivered by the card fulfillment provider.* *DIGITALLY_PRESENTED:* Card digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards</summary>
        public global::Marqeta.Core.Sdk.Models.Card_transition_response_fulfillment_status? FulfillmentStatus { get; set; }
        /// <summary>Last four digits of the card primary account number (PAN).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastFour { get; set; }
#nullable restore
#else
        public string LastFour { get; set; }
#endif
        /// <summary>Reissues the specified (&quot;source&quot;) card with a new primary account number (PAN).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NewPanFromCardToken { get; set; }
#nullable restore
#else
        public string NewPanFromCardToken { get; set; }
#endif
        /// <summary>Primary account number (PAN) of the card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Pan { get; set; }
#nullable restore
#else
        public string Pan { get; set; }
#endif
        /// <summary>Specifies if the personal identification number (PIN) has been set for the card.</summary>
        public bool? PinIsSet { get; set; }
        /// <summary>Additional information about the state change.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Reason { get; set; }
#nullable restore
#else
        public string Reason { get; set; }
#endif
        /// <summary>A standard code describing the reason for the transition:* *00:* Object activated for the first time* *01:* Requested by you* *02:* Inactivity over time* *03:* This address cannot accept mail or the addressee is unknown* *04:* Negative account balance* *05:* Account under review* *06:* Suspicious activity was identified* *07:* Activity outside the program parameters was identified* *08:* Confirmed fraud was identified* *09:* Matched with an Office of Foreign Assets Control list* *10:* Card was reported lost* *11:* Card information was cloned* *12:* Account or card information was compromised* *13:* Temporary status change while on hold/leave* *14:* Initiated by Marqeta* *15:* Initiated by issuer* *16:* Card expired* *17:* Failed KYC* *18:* Changed to `ACTIVE` because information was properly validated* *19:* Changed to `ACTIVE` because account activity was properly validated* *20:* Change occurred prior to the normalization of reason codes* *21:* Initiated by a third party, often a digital wallet provider* *22:* PIN retry limit reached* *23:* Card was reported stolen* *24:* Address issue* *25:* Name issue* *26:* SSN issue* *27:* DOB issue* *28:* Email issue* *29:* Phone issue* *30:* Account/fulfillment mismatch* *31:* Other reason</summary>
        public global::Marqeta.Core.Sdk.Models.Card_transition_response_reason_code? ReasonCode { get; set; }
        /// <summary>Reissues the specified (&quot;source&quot;) card.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReissuePanFromCardToken { get; set; }
#nullable restore
#else
        public string ReissuePanFromCardToken { get; set; }
#endif
        /// <summary>Indicates the state of the card.</summary>
        public global::Marqeta.Core.Sdk.Models.Card_transition_response_state? State { get; set; }
        /// <summary>Unique identifier of the card transition.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Token { get; set; }
#nullable restore
#else
        public string Token { get; set; }
#endif
        /// <summary>This field cannot be set directly using the `/cardtransitions` endpoint.A card transition&apos;s `type` is managed by the Marqeta platform, based on the before and after state of the transition, as specified in the request&apos;s `state` field.This field appears only when populated by the card fulfillment provider.The `type` field&apos;s possible values are:* *fulfillment.delivered:* Card was delivered by the card fulfillment provider* *fulfillment.digitally_presented:* Card was digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards* *fulfillment.issued:* Card was created/issued* *fulfillment.ordered:* Card was ordered from the card fulfillment provider* *fulfillment.rejected:* Card was rejected by the card fulfillment provider* *fulfillment.shipped:* Card was shipped by the card fulfillment provider* *state.activated:* Card was activated* *state.limited:* Card was limited* *state.reinstated:* Card was reinstated from a suspended state* *state.suspended:* Card was suspended* *state.terminated:* Card was terminated//Also appears in /core-api/event-types#_card_transition_events</summary>
        public global::Marqeta.Core.Sdk.Models.Card_transition_response_type? Type { get; set; }
        /// <summary>Contains customer-provided information about the cardholder that performed the transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Cardholder_metadata? User { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Cardholder_metadata User { get; set; }
#endif
        /// <summary>Unique identifier of the cardholder.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserToken { get; set; }
#nullable restore
#else
        public string UserToken { get; set; }
#endif
        /// <summary>Contains information about the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.ValidationsResponse? Validations { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.ValidationsResponse Validations { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.Card_transition_response"/> and sets the default values.
        /// </summary>
        public Card_transition_response()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.Card_transition_response"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.Card_transition_response CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.Card_transition_response();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "barcode", n => { Barcode = n.GetStringValue(); } },
                { "bulk_issuance_token", n => { BulkIssuanceToken = n.GetStringValue(); } },
                { "card", n => { Card = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Card_metadata>(global::Marqeta.Core.Sdk.Models.Card_metadata.CreateFromDiscriminatorValue); } },
                { "card_product_token", n => { CardProductToken = n.GetStringValue(); } },
                { "card_token", n => { CardToken = n.GetStringValue(); } },
                { "channel", n => { Channel = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Card_transition_response_channel>(); } },
                { "created_time", n => { CreatedTime = n.GetDateTimeOffsetValue(); } },
                { "expedite", n => { Expedite = n.GetBoolValue(); } },
                { "expiration", n => { Expiration = n.GetStringValue(); } },
                { "expiration_time", n => { ExpirationTime = n.GetStringValue(); } },
                { "fulfillment", n => { Fulfillment = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.CardFulfillmentRequest>(global::Marqeta.Core.Sdk.Models.CardFulfillmentRequest.CreateFromDiscriminatorValue); } },
                { "fulfillment_status", n => { FulfillmentStatus = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Card_transition_response_fulfillment_status>(); } },
                { "last_four", n => { LastFour = n.GetStringValue(); } },
                { "new_pan_from_card_token", n => { NewPanFromCardToken = n.GetStringValue(); } },
                { "pan", n => { Pan = n.GetStringValue(); } },
                { "pin_is_set", n => { PinIsSet = n.GetBoolValue(); } },
                { "reason", n => { Reason = n.GetStringValue(); } },
                { "reason_code", n => { ReasonCode = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Card_transition_response_reason_code>(); } },
                { "reissue_pan_from_card_token", n => { ReissuePanFromCardToken = n.GetStringValue(); } },
                { "state", n => { State = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Card_transition_response_state>(); } },
                { "token", n => { Token = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Card_transition_response_type>(); } },
                { "user", n => { User = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Cardholder_metadata>(global::Marqeta.Core.Sdk.Models.Cardholder_metadata.CreateFromDiscriminatorValue); } },
                { "user_token", n => { UserToken = n.GetStringValue(); } },
                { "validations", n => { Validations = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.ValidationsResponse>(global::Marqeta.Core.Sdk.Models.ValidationsResponse.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("barcode", Barcode);
            writer.WriteStringValue("bulk_issuance_token", BulkIssuanceToken);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Card_metadata>("card", Card);
            writer.WriteStringValue("card_product_token", CardProductToken);
            writer.WriteStringValue("card_token", CardToken);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Card_transition_response_channel>("channel", Channel);
            writer.WriteDateTimeOffsetValue("created_time", CreatedTime);
            writer.WriteBoolValue("expedite", Expedite);
            writer.WriteStringValue("expiration", Expiration);
            writer.WriteStringValue("expiration_time", ExpirationTime);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.CardFulfillmentRequest>("fulfillment", Fulfillment);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Card_transition_response_fulfillment_status>("fulfillment_status", FulfillmentStatus);
            writer.WriteStringValue("last_four", LastFour);
            writer.WriteStringValue("new_pan_from_card_token", NewPanFromCardToken);
            writer.WriteStringValue("pan", Pan);
            writer.WriteBoolValue("pin_is_set", PinIsSet);
            writer.WriteStringValue("reason", Reason);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Card_transition_response_reason_code>("reason_code", ReasonCode);
            writer.WriteStringValue("reissue_pan_from_card_token", ReissuePanFromCardToken);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Card_transition_response_state>("state", State);
            writer.WriteStringValue("token", Token);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Card_transition_response_type>("type", Type);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Cardholder_metadata>("user", User);
            writer.WriteStringValue("user_token", UserToken);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.ValidationsResponse>("validations", Validations);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
