// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Marqeta.Core.Sdk.Models {
    public class Balance_inquiry_request_model : IAdditionalDataHolder, IParsable {
        /// <summary>The account_type property</summary>
        public Balance_inquiry_request_model_account_type? AccountType { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The card_acceptor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Card_acceptor_model? CardAcceptor { get; set; }
#nullable restore
#else
        public Card_acceptor_model CardAcceptor { get; set; }
#endif
        /// <summary>The card_token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardToken { get; set; }
#nullable restore
#else
        public string CardToken { get; set; }
#endif
        /// <summary>The mid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Mid { get; set; }
#nullable restore
#else
        public string Mid { get; set; }
#endif
        /// <summary>The network_fees property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Network_fee_model>? NetworkFees { get; set; }
#nullable restore
#else
        public List<Network_fee_model> NetworkFees { get; set; }
#endif
        /// <summary>The pin property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Pin { get; set; }
#nullable restore
#else
        public string Pin { get; set; }
#endif
        /// <summary>The webhook property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Marqeta.Core.Sdk.Models.Webhook? Webhook { get; set; }
#nullable restore
#else
        public Marqeta.Core.Sdk.Models.Webhook Webhook { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="Balance_inquiry_request_model"/> and sets the default values.
        /// </summary>
        public Balance_inquiry_request_model() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Balance_inquiry_request_model"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Balance_inquiry_request_model CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Balance_inquiry_request_model();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"account_type", n => { AccountType = n.GetEnumValue<Balance_inquiry_request_model_account_type>(); } },
                {"card_acceptor", n => { CardAcceptor = n.GetObjectValue<Card_acceptor_model>(Card_acceptor_model.CreateFromDiscriminatorValue); } },
                {"card_token", n => { CardToken = n.GetStringValue(); } },
                {"mid", n => { Mid = n.GetStringValue(); } },
                {"network_fees", n => { NetworkFees = n.GetCollectionOfObjectValues<Network_fee_model>(Network_fee_model.CreateFromDiscriminatorValue)?.ToList(); } },
                {"pin", n => { Pin = n.GetStringValue(); } },
                {"webhook", n => { Webhook = n.GetObjectValue<Marqeta.Core.Sdk.Models.Webhook>(Marqeta.Core.Sdk.Models.Webhook.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<Balance_inquiry_request_model_account_type>("account_type", AccountType);
            writer.WriteObjectValue<Card_acceptor_model>("card_acceptor", CardAcceptor);
            writer.WriteStringValue("card_token", CardToken);
            writer.WriteStringValue("mid", Mid);
            writer.WriteCollectionOfObjectValues<Network_fee_model>("network_fees", NetworkFees);
            writer.WriteStringValue("pin", Pin);
            writer.WriteObjectValue<Marqeta.Core.Sdk.Models.Webhook>("webhook", Webhook);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
