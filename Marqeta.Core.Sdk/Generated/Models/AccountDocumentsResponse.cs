// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    /// <summary>
    /// Account documents response.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AccountDocumentsResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Account document response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse? AccountStatement { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse AccountStatement { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Account document response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse? BenefitsDisclosure { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse BenefitsDisclosure { get; set; }
#endif
        /// <summary>Account document response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse? CardMemberAgreement { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse CardMemberAgreement { get; set; }
#endif
        /// <summary>Account document response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse? EDisclosure { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse EDisclosure { get; set; }
#endif
        /// <summary>Account document response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse? PrivacyPolicy { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse PrivacyPolicy { get; set; }
#endif
        /// <summary>Account document response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse? RewardsDisclosure { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse RewardsDisclosure { get; set; }
#endif
        /// <summary>Account document response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse? SummaryOfCreditTerms { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse SummaryOfCreditTerms { get; set; }
#endif
        /// <summary>Account document response.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse? TermsSchedule { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.AccountDocumentResponse TermsSchedule { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.AccountDocumentsResponse"/> and sets the default values.
        /// </summary>
        public AccountDocumentsResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.AccountDocumentsResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.AccountDocumentsResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.AccountDocumentsResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_statement", n => { AccountStatement = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>(global::Marqeta.Core.Sdk.Models.AccountDocumentResponse.CreateFromDiscriminatorValue); } },
                { "benefits_disclosure", n => { BenefitsDisclosure = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>(global::Marqeta.Core.Sdk.Models.AccountDocumentResponse.CreateFromDiscriminatorValue); } },
                { "card_member_agreement", n => { CardMemberAgreement = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>(global::Marqeta.Core.Sdk.Models.AccountDocumentResponse.CreateFromDiscriminatorValue); } },
                { "e_disclosure", n => { EDisclosure = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>(global::Marqeta.Core.Sdk.Models.AccountDocumentResponse.CreateFromDiscriminatorValue); } },
                { "privacy_policy", n => { PrivacyPolicy = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>(global::Marqeta.Core.Sdk.Models.AccountDocumentResponse.CreateFromDiscriminatorValue); } },
                { "rewards_disclosure", n => { RewardsDisclosure = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>(global::Marqeta.Core.Sdk.Models.AccountDocumentResponse.CreateFromDiscriminatorValue); } },
                { "summary_of_credit_terms", n => { SummaryOfCreditTerms = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>(global::Marqeta.Core.Sdk.Models.AccountDocumentResponse.CreateFromDiscriminatorValue); } },
                { "terms_schedule", n => { TermsSchedule = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>(global::Marqeta.Core.Sdk.Models.AccountDocumentResponse.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>("account_statement", AccountStatement);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>("benefits_disclosure", BenefitsDisclosure);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>("card_member_agreement", CardMemberAgreement);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>("e_disclosure", EDisclosure);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>("privacy_policy", PrivacyPolicy);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>("rewards_disclosure", RewardsDisclosure);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>("summary_of_credit_terms", SummaryOfCreditTerms);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.AccountDocumentResponse>("terms_schedule", TermsSchedule);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
