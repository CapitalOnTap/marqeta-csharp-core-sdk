// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Card_request : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The account_token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountToken { get; set; }
#nullable restore
#else
        public string AccountToken { get; set; }
#endif
        /// <summary>Defines actions to execute when the card is activated.The fields in this object are mutually exclusive.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Activation_actions? ActivationActions { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Activation_actions ActivationActions { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The bulk_issuance_token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BulkIssuanceToken { get; set; }
#nullable restore
#else
        public string BulkIssuanceToken { get; set; }
#endif
        /// <summary>The card_product_token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardProductToken { get; set; }
#nullable restore
#else
        public string CardProductToken { get; set; }
#endif
        /// <summary>The expedite property</summary>
        public bool? Expedite { get; set; }
        /// <summary>The expiration_offset property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Expiration_offset? ExpirationOffset { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Expiration_offset ExpirationOffset { get; set; }
#endif
        /// <summary>The fulfillment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.CardFulfillmentRequest? Fulfillment { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.CardFulfillmentRequest Fulfillment { get; set; }
#endif
        /// <summary>The metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Card_request_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Card_request_metadata Metadata { get; set; }
#endif
        /// <summary>The new_pan_from_card_token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NewPanFromCardToken { get; set; }
#nullable restore
#else
        public string NewPanFromCardToken { get; set; }
#endif
        /// <summary>The reissue_pan_from_card_token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReissuePanFromCardToken { get; set; }
#nullable restore
#else
        public string ReissuePanFromCardToken { get; set; }
#endif
        /// <summary>The token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Token { get; set; }
#nullable restore
#else
        public string Token { get; set; }
#endif
        /// <summary>The translate_pin_from_card_token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TranslatePinFromCardToken { get; set; }
#nullable restore
#else
        public string TranslatePinFromCardToken { get; set; }
#endif
        /// <summary>The user_token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserToken { get; set; }
#nullable restore
#else
        public string UserToken { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.Card_request"/> and sets the default values.
        /// </summary>
        public Card_request()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.Card_request"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.Card_request CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.Card_request();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_token", n => { AccountToken = n.GetStringValue(); } },
                { "activation_actions", n => { ActivationActions = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Activation_actions>(global::Marqeta.Core.Sdk.Models.Activation_actions.CreateFromDiscriminatorValue); } },
                { "bulk_issuance_token", n => { BulkIssuanceToken = n.GetStringValue(); } },
                { "card_product_token", n => { CardProductToken = n.GetStringValue(); } },
                { "expedite", n => { Expedite = n.GetBoolValue(); } },
                { "expiration_offset", n => { ExpirationOffset = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Expiration_offset>(global::Marqeta.Core.Sdk.Models.Expiration_offset.CreateFromDiscriminatorValue); } },
                { "fulfillment", n => { Fulfillment = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.CardFulfillmentRequest>(global::Marqeta.Core.Sdk.Models.CardFulfillmentRequest.CreateFromDiscriminatorValue); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Card_request_metadata>(global::Marqeta.Core.Sdk.Models.Card_request_metadata.CreateFromDiscriminatorValue); } },
                { "new_pan_from_card_token", n => { NewPanFromCardToken = n.GetStringValue(); } },
                { "reissue_pan_from_card_token", n => { ReissuePanFromCardToken = n.GetStringValue(); } },
                { "token", n => { Token = n.GetStringValue(); } },
                { "translate_pin_from_card_token", n => { TranslatePinFromCardToken = n.GetStringValue(); } },
                { "user_token", n => { UserToken = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account_token", AccountToken);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Activation_actions>("activation_actions", ActivationActions);
            writer.WriteStringValue("bulk_issuance_token", BulkIssuanceToken);
            writer.WriteStringValue("card_product_token", CardProductToken);
            writer.WriteBoolValue("expedite", Expedite);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Expiration_offset>("expiration_offset", ExpirationOffset);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.CardFulfillmentRequest>("fulfillment", Fulfillment);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Card_request_metadata>("metadata", Metadata);
            writer.WriteStringValue("new_pan_from_card_token", NewPanFromCardToken);
            writer.WriteStringValue("reissue_pan_from_card_token", ReissuePanFromCardToken);
            writer.WriteStringValue("token", Token);
            writer.WriteStringValue("translate_pin_from_card_token", TranslatePinFromCardToken);
            writer.WriteStringValue("user_token", UserToken);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
