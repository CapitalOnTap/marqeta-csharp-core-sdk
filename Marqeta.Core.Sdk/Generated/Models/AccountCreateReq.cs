// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Marqeta.Core.Sdk.Models {
    /// <summary>
    /// Contains information relevant to creating a credit account.
    /// </summary>
    public class AccountCreateReq : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Unique identifier of the associated credit account application.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApplicationToken { get; set; }
#nullable restore
#else
        public string ApplicationToken { get; set; }
#endif
        /// <summary>Unique identifier of the associated bundle.You must pass either `bundle_token` or both `credit_product_token` and `external_offer_id`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BundleToken { get; set; }
#nullable restore
#else
        public string BundleToken { get; set; }
#endif
        /// <summary>Unique identifier of the parent business program.Pass either a `user_token` or `business_token`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BusinessToken { get; set; }
#nullable restore
#else
        public string BusinessToken { get; set; }
#endif
        /// <summary>Contains information relevant for configuring an account&apos;s billing cycle day, payment due day, fees, and more.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public AccountConfigReq? Config { get; set; }
#nullable restore
#else
        public AccountConfigReq Config { get; set; }
#endif
        /// <summary>Maximum balance the credit account can carry.</summary>
        public double? CreditLimit { get; set; }
        /// <summary>Unique identifier of the associated credit product.This field is required if passing `external_offer_id`.You must pass either both `credit_product_token` and `external_offer_id` or `bundle_token`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreditProductToken { get; set; }
#nullable restore
#else
        public string CreditProductToken { get; set; }
#endif
        /// <summary>Description for the credit account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Unique identifier you provide of the associated external credit offer.This field is required if passing `credit_product_token`.You must pass either both `external_offer_id` and `credit_product_token` or `bundle_token`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalOfferId { get; set; }
#nullable restore
#else
        public string ExternalOfferId { get; set; }
#endif
        /// <summary>Name of the credit account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Unique identifier of the credit account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Token { get; set; }
#nullable restore
#else
        public string Token { get; set; }
#endif
        /// <summary>Contains one or more `usages` objects that contain information on how a credit account is used and what types of balances are permitted on the account.You can pass only one `usages` object per `usages.type`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<AccountUsageCreateReq>? Usages { get; set; }
#nullable restore
#else
        public List<AccountUsageCreateReq> Usages { get; set; }
#endif
        /// <summary>Unique identifier of the primary account holder.Pass either a `user_token` or `business_token`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserToken { get; set; }
#nullable restore
#else
        public string UserToken { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="AccountCreateReq"/> and sets the default values.
        /// </summary>
        public AccountCreateReq() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="AccountCreateReq"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static AccountCreateReq CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new AccountCreateReq();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"application_token", n => { ApplicationToken = n.GetStringValue(); } },
                {"bundle_token", n => { BundleToken = n.GetStringValue(); } },
                {"business_token", n => { BusinessToken = n.GetStringValue(); } },
                {"config", n => { Config = n.GetObjectValue<AccountConfigReq>(AccountConfigReq.CreateFromDiscriminatorValue); } },
                {"credit_limit", n => { CreditLimit = n.GetDoubleValue(); } },
                {"credit_product_token", n => { CreditProductToken = n.GetStringValue(); } },
                {"description", n => { Description = n.GetStringValue(); } },
                {"external_offer_id", n => { ExternalOfferId = n.GetStringValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"token", n => { Token = n.GetStringValue(); } },
                {"usages", n => { Usages = n.GetCollectionOfObjectValues<AccountUsageCreateReq>(AccountUsageCreateReq.CreateFromDiscriminatorValue)?.ToList(); } },
                {"user_token", n => { UserToken = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("application_token", ApplicationToken);
            writer.WriteStringValue("bundle_token", BundleToken);
            writer.WriteStringValue("business_token", BusinessToken);
            writer.WriteObjectValue<AccountConfigReq>("config", Config);
            writer.WriteDoubleValue("credit_limit", CreditLimit);
            writer.WriteStringValue("credit_product_token", CreditProductToken);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("external_offer_id", ExternalOfferId);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("token", Token);
            writer.WriteCollectionOfObjectValues<AccountUsageCreateReq>("usages", Usages);
            writer.WriteStringValue("user_token", UserToken);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
