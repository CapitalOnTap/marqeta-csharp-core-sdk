// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Internal_card : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The card_pin_block property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardPinBlock { get; set; }
#nullable restore
#else
        public string CardPinBlock { get; set; }
#endif
        /// <summary>The card_product property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Internal_card_product? CardProduct { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Internal_card_product CardProduct { get; set; }
#endif
        /// <summary>The contactless_consecutive_count property</summary>
        public int? ContactlessConsecutiveCount { get; set; }
        /// <summary>The contactless_consecutive_total_spend property</summary>
        public double? ContactlessConsecutiveTotalSpend { get; set; }
        /// <summary>The expiration_time property</summary>
        public DateTimeOffset? ExpirationTime { get; set; }
        /// <summary>The hash property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Hash { get; set; }
#nullable restore
#else
        public string Hash { get; set; }
#endif
        /// <summary>The id property</summary>
        public long? Id { get; set; }
        /// <summary>The is_offline_pin_set_required property</summary>
        public bool? IsOfflinePinSetRequired { get; set; }
        /// <summary>The kid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Kid { get; set; }
#nullable restore
#else
        public string Kid { get; set; }
#endif
        /// <summary>The last_four property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastFour { get; set; }
#nullable restore
#else
        public string LastFour { get; set; }
#endif
        /// <summary>The lvp_consecutive_count property</summary>
        public int? LvpConsecutiveCount { get; set; }
        /// <summary>The lvp_consecutive_total_spend property</summary>
        public double? LvpConsecutiveTotalSpend { get; set; }
        /// <summary>The metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Internal_card_metadata? Metadata { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Internal_card_metadata Metadata { get; set; }
#endif
        /// <summary>The nameline1 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Nameline1 { get; set; }
#nullable restore
#else
        public string Nameline1 { get; set; }
#endif
        /// <summary>The secureData property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SecureData { get; set; }
#nullable restore
#else
        public string SecureData { get; set; }
#endif
        /// <summary>The serviceCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServiceCode { get; set; }
#nullable restore
#else
        public string ServiceCode { get; set; }
#endif
        /// <summary>The state property</summary>
        public global::Marqeta.Core.Sdk.Models.Internal_card_state? State { get; set; }
        /// <summary>The token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Token { get; set; }
#nullable restore
#else
        public string Token { get; set; }
#endif
        /// <summary>The user property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Internal_user? User { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Internal_user User { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.Internal_card"/> and sets the default values.
        /// </summary>
        public Internal_card()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.Internal_card"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.Internal_card CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.Internal_card();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "card_pin_block", n => { CardPinBlock = n.GetStringValue(); } },
                { "card_product", n => { CardProduct = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Internal_card_product>(global::Marqeta.Core.Sdk.Models.Internal_card_product.CreateFromDiscriminatorValue); } },
                { "contactless_consecutive_count", n => { ContactlessConsecutiveCount = n.GetIntValue(); } },
                { "contactless_consecutive_total_spend", n => { ContactlessConsecutiveTotalSpend = n.GetDoubleValue(); } },
                { "expiration_time", n => { ExpirationTime = n.GetDateTimeOffsetValue(); } },
                { "hash", n => { Hash = n.GetStringValue(); } },
                { "id", n => { Id = n.GetLongValue(); } },
                { "is_offline_pin_set_required", n => { IsOfflinePinSetRequired = n.GetBoolValue(); } },
                { "kid", n => { Kid = n.GetStringValue(); } },
                { "last_four", n => { LastFour = n.GetStringValue(); } },
                { "lvp_consecutive_count", n => { LvpConsecutiveCount = n.GetIntValue(); } },
                { "lvp_consecutive_total_spend", n => { LvpConsecutiveTotalSpend = n.GetDoubleValue(); } },
                { "metadata", n => { Metadata = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Internal_card_metadata>(global::Marqeta.Core.Sdk.Models.Internal_card_metadata.CreateFromDiscriminatorValue); } },
                { "nameline1", n => { Nameline1 = n.GetStringValue(); } },
                { "secureData", n => { SecureData = n.GetStringValue(); } },
                { "serviceCode", n => { ServiceCode = n.GetStringValue(); } },
                { "state", n => { State = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Internal_card_state>(); } },
                { "token", n => { Token = n.GetStringValue(); } },
                { "user", n => { User = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Internal_user>(global::Marqeta.Core.Sdk.Models.Internal_user.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("card_pin_block", CardPinBlock);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Internal_card_product>("card_product", CardProduct);
            writer.WriteIntValue("contactless_consecutive_count", ContactlessConsecutiveCount);
            writer.WriteDoubleValue("contactless_consecutive_total_spend", ContactlessConsecutiveTotalSpend);
            writer.WriteDateTimeOffsetValue("expiration_time", ExpirationTime);
            writer.WriteStringValue("hash", Hash);
            writer.WriteLongValue("id", Id);
            writer.WriteBoolValue("is_offline_pin_set_required", IsOfflinePinSetRequired);
            writer.WriteStringValue("kid", Kid);
            writer.WriteStringValue("last_four", LastFour);
            writer.WriteIntValue("lvp_consecutive_count", LvpConsecutiveCount);
            writer.WriteDoubleValue("lvp_consecutive_total_spend", LvpConsecutiveTotalSpend);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Internal_card_metadata>("metadata", Metadata);
            writer.WriteStringValue("nameline1", Nameline1);
            writer.WriteStringValue("secureData", SecureData);
            writer.WriteStringValue("serviceCode", ServiceCode);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Internal_card_state>("state", State);
            writer.WriteStringValue("token", Token);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Internal_user>("user", User);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
