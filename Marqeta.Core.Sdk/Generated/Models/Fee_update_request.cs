// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Fee_update_request : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The active property</summary>
        public bool? Active { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amount property</summary>
        public double? Amount { get; set; }
        /// <summary>The category property</summary>
        public global::Marqeta.Core.Sdk.Models.Fee_update_request_category? Category { get; set; }
        /// <summary>The currency_code property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrencyCode { get; set; }
#nullable restore
#else
        public string CurrencyCode { get; set; }
#endif
        /// <summary>The fee_attributes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Fee_attributes? FeeAttributes { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Fee_attributes FeeAttributes { get; set; }
#endif
        /// <summary>The memo property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Memo { get; set; }
#nullable restore
#else
        public string Memo { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The tags property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Tags { get; set; }
#nullable restore
#else
        public string Tags { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::Marqeta.Core.Sdk.Models.Fee_update_request_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.Fee_update_request"/> and sets the default values.
        /// </summary>
        public Fee_update_request()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.Fee_update_request"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.Fee_update_request CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.Fee_update_request();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "active", n => { Active = n.GetBoolValue(); } },
                { "amount", n => { Amount = n.GetDoubleValue(); } },
                { "category", n => { Category = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Fee_update_request_category>(); } },
                { "currency_code", n => { CurrencyCode = n.GetStringValue(); } },
                { "fee_attributes", n => { FeeAttributes = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Fee_attributes>(global::Marqeta.Core.Sdk.Models.Fee_attributes.CreateFromDiscriminatorValue); } },
                { "memo", n => { Memo = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "tags", n => { Tags = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Marqeta.Core.Sdk.Models.Fee_update_request_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("active", Active);
            writer.WriteDoubleValue("amount", Amount);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Fee_update_request_category>("category", Category);
            writer.WriteStringValue("currency_code", CurrencyCode);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Fee_attributes>("fee_attributes", FeeAttributes);
            writer.WriteStringValue("memo", Memo);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("tags", Tags);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.Models.Fee_update_request_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
