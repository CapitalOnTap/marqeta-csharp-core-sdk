// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InternalDigitalWallet : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Contains address verification information.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Address_verification? AddressVerification { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Address_verification AddressVerification { get; set; }
#endif
        /// <summary>The card property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Internal_card? Card { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Internal_card Card { get; set; }
#endif
        /// <summary>The created_time property</summary>
        public DateTimeOffset? CreatedTime { get; set; }
        /// <summary>Contains information related to the device being provisioned.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Device? Device { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Device Device { get; set; }
#endif
        /// <summary>The fulfillment_status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FulfillmentStatus { get; set; }
#nullable restore
#else
        public string FulfillmentStatus { get; set; }
#endif
        /// <summary>The id property</summary>
        public long? Id { get; set; }
        /// <summary>The issuer_eligibility_decision property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IssuerEligibilityDecision { get; set; }
#nullable restore
#else
        public string IssuerEligibilityDecision { get; set; }
#endif
        /// <summary>The last_modified_time property</summary>
        public DateTimeOffset? LastModifiedTime { get; set; }
        /// <summary>Response codes and memos for account name verification, address verification, card security verification, and transactions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Response? Response { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Response Response { get; set; }
#endif
        /// <summary>The state property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? State { get; set; }
#nullable restore
#else
        public string State { get; set; }
#endif
        /// <summary>The state_reason property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StateReason { get; set; }
#nullable restore
#else
        public string StateReason { get; set; }
#endif
        /// <summary>The token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Token { get; set; }
#nullable restore
#else
        public string Token { get; set; }
#endif
        /// <summary>Contains information held and provided by the token service provider (card network).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Token_service_provider? TokenServiceProvider { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Token_service_provider TokenServiceProvider { get; set; }
#endif
        /// <summary>Contains information held and provided by the digital wallet provider.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Marqeta.Core.Sdk.Models.Wallet_provider_profile? WalletProviderProfile { get; set; }
#nullable restore
#else
        public global::Marqeta.Core.Sdk.Models.Wallet_provider_profile WalletProviderProfile { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Models.InternalDigitalWallet"/> and sets the default values.
        /// </summary>
        public InternalDigitalWallet()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.Models.InternalDigitalWallet"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.Models.InternalDigitalWallet CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.Models.InternalDigitalWallet();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address_verification", n => { AddressVerification = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Address_verification>(global::Marqeta.Core.Sdk.Models.Address_verification.CreateFromDiscriminatorValue); } },
                { "card", n => { Card = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Internal_card>(global::Marqeta.Core.Sdk.Models.Internal_card.CreateFromDiscriminatorValue); } },
                { "created_time", n => { CreatedTime = n.GetDateTimeOffsetValue(); } },
                { "device", n => { Device = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Device>(global::Marqeta.Core.Sdk.Models.Device.CreateFromDiscriminatorValue); } },
                { "fulfillment_status", n => { FulfillmentStatus = n.GetStringValue(); } },
                { "id", n => { Id = n.GetLongValue(); } },
                { "issuer_eligibility_decision", n => { IssuerEligibilityDecision = n.GetStringValue(); } },
                { "last_modified_time", n => { LastModifiedTime = n.GetDateTimeOffsetValue(); } },
                { "response", n => { Response = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Response>(global::Marqeta.Core.Sdk.Models.Response.CreateFromDiscriminatorValue); } },
                { "state", n => { State = n.GetStringValue(); } },
                { "state_reason", n => { StateReason = n.GetStringValue(); } },
                { "token", n => { Token = n.GetStringValue(); } },
                { "token_service_provider", n => { TokenServiceProvider = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Token_service_provider>(global::Marqeta.Core.Sdk.Models.Token_service_provider.CreateFromDiscriminatorValue); } },
                { "wallet_provider_profile", n => { WalletProviderProfile = n.GetObjectValue<global::Marqeta.Core.Sdk.Models.Wallet_provider_profile>(global::Marqeta.Core.Sdk.Models.Wallet_provider_profile.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Address_verification>("address_verification", AddressVerification);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Internal_card>("card", Card);
            writer.WriteDateTimeOffsetValue("created_time", CreatedTime);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Device>("device", Device);
            writer.WriteStringValue("fulfillment_status", FulfillmentStatus);
            writer.WriteLongValue("id", Id);
            writer.WriteStringValue("issuer_eligibility_decision", IssuerEligibilityDecision);
            writer.WriteDateTimeOffsetValue("last_modified_time", LastModifiedTime);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Response>("response", Response);
            writer.WriteStringValue("state", State);
            writer.WriteStringValue("state_reason", StateReason);
            writer.WriteStringValue("token", Token);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Token_service_provider>("token_service_provider", TokenServiceProvider);
            writer.WriteObjectValue<global::Marqeta.Core.Sdk.Models.Wallet_provider_profile>("wallet_provider_profile", WalletProviderProfile);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
