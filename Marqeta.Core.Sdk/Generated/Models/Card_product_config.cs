// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Marqeta.Core.Sdk.Models
{
    /// <summary>
    /// Defines the characteristics of the card product.Configurations are conditionally required based on program setup.For more information, contact your Marqeta representative.
    /// </summary>
    public class Card_product_config : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Defines characteristics of the lifecycle of cards of this card product type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Marqeta.Core.Sdk.Models.Card_life_cycle? CardLifeCycle { get; set; }
#nullable restore
#else
        public Marqeta.Core.Sdk.Models.Card_life_cycle CardLifeCycle { get; set; }
#endif
        /// <summary>Specifies the destination for overdraft funds.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Marqeta.Core.Sdk.Models.Clearing_and_settlement? ClearingAndSettlement { get; set; }
#nullable restore
#else
        public Marqeta.Core.Sdk.Models.Clearing_and_settlement ClearingAndSettlement { get; set; }
#endif
        /// <summary>Controls characteristics related to digital wallets.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Marqeta.Core.Sdk.Models.Digital_wallet_tokenization? DigitalWalletTokenization { get; set; }
#nullable restore
#else
        public Marqeta.Core.Sdk.Models.Digital_wallet_tokenization DigitalWalletTokenization { get; set; }
#endif
        /// <summary>Determines physical characteristics of a card, along with its bulk shipment information.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Marqeta.Core.Sdk.Models.Card_product_fulfillment? Fulfillment { get; set; }
#nullable restore
#else
        public Marqeta.Core.Sdk.Models.Card_product_fulfillment Fulfillment { get; set; }
#endif
        /// <summary>Governs the behavior of JIT Funding.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Marqeta.Core.Sdk.Models.Jit_funding? JitFunding { get; set; }
#nullable restore
#else
        public Marqeta.Core.Sdk.Models.Jit_funding JitFunding { get; set; }
#endif
        /// <summary>Governs the point of interaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Marqeta.Core.Sdk.Models.Poi? Poi { get; set; }
#nullable restore
#else
        public Marqeta.Core.Sdk.Models.Poi Poi { get; set; }
#endif
        /// <summary>Contains information about authorization decisions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Marqeta.Core.Sdk.Models.Selective_auth? SelectiveAuth { get; set; }
#nullable restore
#else
        public Marqeta.Core.Sdk.Models.Selective_auth SelectiveAuth { get; set; }
#endif
        /// <summary>Contains information about merchant onboarding.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Marqeta.Core.Sdk.Models.Special? Special { get; set; }
#nullable restore
#else
        public Marqeta.Core.Sdk.Models.Special Special { get; set; }
#endif
        /// <summary>Controls transactional characteristics of card usage.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Marqeta.Core.Sdk.Models.Transaction_controls? TransactionControls { get; set; }
#nullable restore
#else
        public Marqeta.Core.Sdk.Models.Transaction_controls TransactionControls { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="Marqeta.Core.Sdk.Models.Card_product_config"/> and sets the default values.
        /// </summary>
        public Card_product_config()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Marqeta.Core.Sdk.Models.Card_product_config"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Marqeta.Core.Sdk.Models.Card_product_config CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Marqeta.Core.Sdk.Models.Card_product_config();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "card_life_cycle", n => { CardLifeCycle = n.GetObjectValue<Marqeta.Core.Sdk.Models.Card_life_cycle>(Marqeta.Core.Sdk.Models.Card_life_cycle.CreateFromDiscriminatorValue); } },
                { "clearing_and_settlement", n => { ClearingAndSettlement = n.GetObjectValue<Marqeta.Core.Sdk.Models.Clearing_and_settlement>(Marqeta.Core.Sdk.Models.Clearing_and_settlement.CreateFromDiscriminatorValue); } },
                { "digital_wallet_tokenization", n => { DigitalWalletTokenization = n.GetObjectValue<Marqeta.Core.Sdk.Models.Digital_wallet_tokenization>(Marqeta.Core.Sdk.Models.Digital_wallet_tokenization.CreateFromDiscriminatorValue); } },
                { "fulfillment", n => { Fulfillment = n.GetObjectValue<Marqeta.Core.Sdk.Models.Card_product_fulfillment>(Marqeta.Core.Sdk.Models.Card_product_fulfillment.CreateFromDiscriminatorValue); } },
                { "jit_funding", n => { JitFunding = n.GetObjectValue<Marqeta.Core.Sdk.Models.Jit_funding>(Marqeta.Core.Sdk.Models.Jit_funding.CreateFromDiscriminatorValue); } },
                { "poi", n => { Poi = n.GetObjectValue<Marqeta.Core.Sdk.Models.Poi>(Marqeta.Core.Sdk.Models.Poi.CreateFromDiscriminatorValue); } },
                { "selective_auth", n => { SelectiveAuth = n.GetObjectValue<Marqeta.Core.Sdk.Models.Selective_auth>(Marqeta.Core.Sdk.Models.Selective_auth.CreateFromDiscriminatorValue); } },
                { "special", n => { Special = n.GetObjectValue<Marqeta.Core.Sdk.Models.Special>(Marqeta.Core.Sdk.Models.Special.CreateFromDiscriminatorValue); } },
                { "transaction_controls", n => { TransactionControls = n.GetObjectValue<Marqeta.Core.Sdk.Models.Transaction_controls>(Marqeta.Core.Sdk.Models.Transaction_controls.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<Marqeta.Core.Sdk.Models.Card_life_cycle>("card_life_cycle", CardLifeCycle);
            writer.WriteObjectValue<Marqeta.Core.Sdk.Models.Clearing_and_settlement>("clearing_and_settlement", ClearingAndSettlement);
            writer.WriteObjectValue<Marqeta.Core.Sdk.Models.Digital_wallet_tokenization>("digital_wallet_tokenization", DigitalWalletTokenization);
            writer.WriteObjectValue<Marqeta.Core.Sdk.Models.Card_product_fulfillment>("fulfillment", Fulfillment);
            writer.WriteObjectValue<Marqeta.Core.Sdk.Models.Jit_funding>("jit_funding", JitFunding);
            writer.WriteObjectValue<Marqeta.Core.Sdk.Models.Poi>("poi", Poi);
            writer.WriteObjectValue<Marqeta.Core.Sdk.Models.Selective_auth>("selective_auth", SelectiveAuth);
            writer.WriteObjectValue<Marqeta.Core.Sdk.Models.Special>("special", Special);
            writer.WriteObjectValue<Marqeta.Core.Sdk.Models.Transaction_controls>("transaction_controls", TransactionControls);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
