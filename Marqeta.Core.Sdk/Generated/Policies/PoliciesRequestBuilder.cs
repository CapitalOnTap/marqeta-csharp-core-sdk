// <auto-generated/>
#pragma warning disable CS0618
using Marqeta.Core.Sdk.Policies.Aprs;
using Marqeta.Core.Sdk.Policies.Documents;
using Marqeta.Core.Sdk.Policies.Fees;
using Marqeta.Core.Sdk.Policies.Products;
using Marqeta.Core.Sdk.Policies.Rewards;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Marqeta.Core.Sdk.Policies
{
    /// <summary>
    /// Builds and executes requests for operations under \policies
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PoliciesRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The aprs property</summary>
        public global::Marqeta.Core.Sdk.Policies.Aprs.AprsRequestBuilder Aprs
        {
            get => new global::Marqeta.Core.Sdk.Policies.Aprs.AprsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The documents property</summary>
        public global::Marqeta.Core.Sdk.Policies.Documents.DocumentsRequestBuilder Documents
        {
            get => new global::Marqeta.Core.Sdk.Policies.Documents.DocumentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The fees property</summary>
        public global::Marqeta.Core.Sdk.Policies.Fees.FeesRequestBuilder Fees
        {
            get => new global::Marqeta.Core.Sdk.Policies.Fees.FeesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The products property</summary>
        public global::Marqeta.Core.Sdk.Policies.Products.ProductsRequestBuilder Products
        {
            get => new global::Marqeta.Core.Sdk.Policies.Products.ProductsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The rewards property</summary>
        public global::Marqeta.Core.Sdk.Policies.Rewards.RewardsRequestBuilder Rewards
        {
            get => new global::Marqeta.Core.Sdk.Policies.Rewards.RewardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Policies.PoliciesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PoliciesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/policies", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Policies.PoliciesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PoliciesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/policies", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
