// <auto-generated/>
using System.Runtime.Serialization;
using System;
namespace Marqeta.Core.Sdk.Accounts.Item.Journalentries {
    public enum GetTypesQueryParameterType {
        [EnumMember(Value = "authorization")]
        Authorization,
        [EnumMember(Value = "authorization.advice")]
        AuthorizationAdvice,
        [EnumMember(Value = "authorization.incremental")]
        AuthorizationIncremental,
        [EnumMember(Value = "authorization.reversal")]
        AuthorizationReversal,
        [EnumMember(Value = "authorization.reversal.issuerexpiration")]
        AuthorizationReversalIssuerexpiration,
        [EnumMember(Value = "authorization.clearing")]
        AuthorizationClearing,
        [EnumMember(Value = "refund")]
        Refund,
        [EnumMember(Value = "refund.authorization")]
        RefundAuthorization,
        [EnumMember(Value = "refund.authorization.advice")]
        RefundAuthorizationAdvice,
        [EnumMember(Value = "refund.authorization.reversal")]
        RefundAuthorizationReversal,
        [EnumMember(Value = "refund.authorization.clearing")]
        RefundAuthorizationClearing,
        [EnumMember(Value = "refund.authorization.reversal.issuerexpiration")]
        RefundAuthorizationReversalIssuerexpiration,
        [EnumMember(Value = "originalcredit.authorization")]
        OriginalcreditAuthorization,
        [EnumMember(Value = "originalcredit.authorization.clearing")]
        OriginalcreditAuthorizationClearing,
        [EnumMember(Value = "originalcredit.authorization.reversal")]
        OriginalcreditAuthorizationReversal,
        [EnumMember(Value = "originalcredit.authpluscapture")]
        OriginalcreditAuthpluscapture,
        [EnumMember(Value = "originalcredit.authpluscapture.reversal")]
        OriginalcreditAuthpluscaptureReversal,
        [EnumMember(Value = "originalcredit.authorization.reversal.issuerexpiration")]
        OriginalcreditAuthorizationReversalIssuerexpiration,
        [EnumMember(Value = "account.balancerefund")]
        AccountBalancerefund,
        [EnumMember(Value = "account.reward.cashback")]
        AccountRewardCashback,
        [EnumMember(Value = "account.reward.auto.cashback")]
        AccountRewardAutoCashback,
        [EnumMember(Value = "account.reward.auto.cashback.reversal")]
        AccountRewardAutoCashbackReversal,
        [EnumMember(Value = "account.payment")]
        AccountPayment,
        [EnumMember(Value = "account.payment.completed")]
        AccountPaymentCompleted,
        [EnumMember(Value = "account.payment.returned")]
        AccountPaymentReturned,
        [EnumMember(Value = "account.payment.canceled")]
        AccountPaymentCanceled,
        [EnumMember(Value = "account.payment.refunded")]
        AccountPaymentRefunded,
        [EnumMember(Value = "account.payment.completed.hold.released")]
        AccountPaymentCompletedHoldReleased,
        [EnumMember(Value = "account.payment.completed.hold")]
        AccountPaymentCompletedHold,
        [EnumMember(Value = "account.interest")]
        AccountInterest,
        [EnumMember(Value = "account.fee.payment.late")]
        AccountFeePaymentLate,
        [EnumMember(Value = "account.fee.payment.returned")]
        AccountFeePaymentReturned,
        [EnumMember(Value = "account.fee.interest.minimum")]
        AccountFeeInterestMinimum,
        [EnumMember(Value = "account.dispute")]
        AccountDispute,
        [EnumMember(Value = "account.dispute.reversal")]
        AccountDisputeReversal,
        [EnumMember(Value = "account.dispute.won")]
        AccountDisputeWon,
        [EnumMember(Value = "account.dispute.lost")]
        AccountDisputeLost,
        [EnumMember(Value = "account.dispute.lost.graceperiod")]
        AccountDisputeLostGraceperiod,
        [EnumMember(Value = "account.adjustment")]
        AccountAdjustment,
        [EnumMember(Value = "account.adjustment.purchase")]
        AccountAdjustmentPurchase,
        [EnumMember(Value = "account.adjustment.fee")]
        AccountAdjustmentFee,
        [EnumMember(Value = "account.adjustment.interest")]
        AccountAdjustmentInterest,
        [EnumMember(Value = "account.adjustment.reward")]
        AccountAdjustmentReward,
        [EnumMember(Value = "pindebit")]
        Pindebit,
        [EnumMember(Value = "pindebit.authorization.clearing")]
        PindebitAuthorizationClearing,
        [EnumMember(Value = "pindebit.refund")]
        PindebitRefund,
    }
}
