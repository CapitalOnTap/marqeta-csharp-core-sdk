// <auto-generated/>
#pragma warning disable CS0618
using Marqeta.Core.Sdk.Users.Auth.Changepassword;
using Marqeta.Core.Sdk.Users.Auth.Clientaccesstoken;
using Marqeta.Core.Sdk.Users.Auth.Login;
using Marqeta.Core.Sdk.Users.Auth.Logout;
using Marqeta.Core.Sdk.Users.Auth.Onetime;
using Marqeta.Core.Sdk.Users.Auth.Resetpassword;
using Marqeta.Core.Sdk.Users.Auth.Verifyemail;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Marqeta.Core.Sdk.Users.Auth
{
    /// <summary>
    /// Builds and executes requests for operations under \users\auth
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AuthRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The changepassword property</summary>
        public global::Marqeta.Core.Sdk.Users.Auth.Changepassword.ChangepasswordRequestBuilder Changepassword
        {
            get => new global::Marqeta.Core.Sdk.Users.Auth.Changepassword.ChangepasswordRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The clientaccesstoken property</summary>
        public global::Marqeta.Core.Sdk.Users.Auth.Clientaccesstoken.ClientaccesstokenRequestBuilder Clientaccesstoken
        {
            get => new global::Marqeta.Core.Sdk.Users.Auth.Clientaccesstoken.ClientaccesstokenRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The login property</summary>
        public global::Marqeta.Core.Sdk.Users.Auth.Login.LoginRequestBuilder Login
        {
            get => new global::Marqeta.Core.Sdk.Users.Auth.Login.LoginRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The logout property</summary>
        public global::Marqeta.Core.Sdk.Users.Auth.Logout.LogoutRequestBuilder Logout
        {
            get => new global::Marqeta.Core.Sdk.Users.Auth.Logout.LogoutRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The onetime property</summary>
        public global::Marqeta.Core.Sdk.Users.Auth.Onetime.OnetimeRequestBuilder Onetime
        {
            get => new global::Marqeta.Core.Sdk.Users.Auth.Onetime.OnetimeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The resetpassword property</summary>
        public global::Marqeta.Core.Sdk.Users.Auth.Resetpassword.ResetpasswordRequestBuilder Resetpassword
        {
            get => new global::Marqeta.Core.Sdk.Users.Auth.Resetpassword.ResetpasswordRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The verifyemail property</summary>
        public global::Marqeta.Core.Sdk.Users.Auth.Verifyemail.VerifyemailRequestBuilder Verifyemail
        {
            get => new global::Marqeta.Core.Sdk.Users.Auth.Verifyemail.VerifyemailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Users.Auth.AuthRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AuthRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/users/auth", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.Users.Auth.AuthRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AuthRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/users/auth", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
