// <auto-generated/>
using Marqeta.Core.Sdk.Acceptedcountries;
using Marqeta.Core.Sdk.Accountholdergroups;
using Marqeta.Core.Sdk.Accounts;
using Marqeta.Core.Sdk.Admin;
using Marqeta.Core.Sdk.Authcontrols;
using Marqeta.Core.Sdk.Autoreloads;
using Marqeta.Core.Sdk.Balances;
using Marqeta.Core.Sdk.Banktransfers;
using Marqeta.Core.Sdk.Bulkissuances;
using Marqeta.Core.Sdk.Bundles;
using Marqeta.Core.Sdk.Businesses;
using Marqeta.Core.Sdk.Businesstransitions;
using Marqeta.Core.Sdk.Cardgroups;
using Marqeta.Core.Sdk.Cardproducts;
using Marqeta.Core.Sdk.Cards;
using Marqeta.Core.Sdk.Cardtransitions;
using Marqeta.Core.Sdk.Commandomodes;
using Marqeta.Core.Sdk.Credit;
using Marqeta.Core.Sdk.Depositaccounts;
using Marqeta.Core.Sdk.Digitalwalletprovisionrequests;
using Marqeta.Core.Sdk.Digitalwallets;
using Marqeta.Core.Sdk.Digitalwallettokens;
using Marqeta.Core.Sdk.Digitalwallettokentransitions;
using Marqeta.Core.Sdk.Directdeposits;
using Marqeta.Core.Sdk.Feecharges;
using Marqeta.Core.Sdk.Feedback;
using Marqeta.Core.Sdk.Feerefunds;
using Marqeta.Core.Sdk.Fees;
using Marqeta.Core.Sdk.Fundingsources;
using Marqeta.Core.Sdk.Gpaorders;
using Marqeta.Core.Sdk.Kyc;
using Marqeta.Core.Sdk.Mccgroups;
using Marqeta.Core.Sdk.Merchantgroups;
using Marqeta.Core.Sdk.Paymentsources;
using Marqeta.Core.Sdk.Peertransfers;
using Marqeta.Core.Sdk.Ping;
using Marqeta.Core.Sdk.Pins;
using Marqeta.Core.Sdk.Policies;
using Marqeta.Core.Sdk.Products;
using Marqeta.Core.Sdk.Programgateways;
using Marqeta.Core.Sdk.Programreserve;
using Marqeta.Core.Sdk.Programtransfers;
using Marqeta.Core.Sdk.Pushtocards;
using Marqeta.Core.Sdk.Realtimefeegroups;
using Marqeta.Core.Sdk.Rewardprograms;
using Marqeta.Core.Sdk.Serialization.Json;
using Marqeta.Core.Sdk.Serialization.Text;
using Marqeta.Core.Sdk.Simulate;
using Marqeta.Core.Sdk.Substatuses;
using Marqeta.Core.Sdk.Transactions;
using Marqeta.Core.Sdk.Users;
using Marqeta.Core.Sdk.Usertransitions;
using Marqeta.Core.Sdk.Velocitycontrols;
using Marqeta.Core.Sdk.Webhooks;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace Marqeta.Core.Sdk
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    public class MarqetaClient : BaseRequestBuilder
    {
        /// <summary>The acceptedcountries property</summary>
        public Marqeta.Core.Sdk.Acceptedcountries.AcceptedcountriesRequestBuilder Acceptedcountries
        {
            get => new Marqeta.Core.Sdk.Acceptedcountries.AcceptedcountriesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The accountholdergroups property</summary>
        public Marqeta.Core.Sdk.Accountholdergroups.AccountholdergroupsRequestBuilder Accountholdergroups
        {
            get => new Marqeta.Core.Sdk.Accountholdergroups.AccountholdergroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The accounts property</summary>
        public Marqeta.Core.Sdk.Accounts.AccountsRequestBuilder Accounts
        {
            get => new Marqeta.Core.Sdk.Accounts.AccountsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The admin property</summary>
        public Marqeta.Core.Sdk.Admin.AdminRequestBuilder Admin
        {
            get => new Marqeta.Core.Sdk.Admin.AdminRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The authcontrols property</summary>
        public Marqeta.Core.Sdk.Authcontrols.AuthcontrolsRequestBuilder Authcontrols
        {
            get => new Marqeta.Core.Sdk.Authcontrols.AuthcontrolsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The autoreloads property</summary>
        public Marqeta.Core.Sdk.Autoreloads.AutoreloadsRequestBuilder Autoreloads
        {
            get => new Marqeta.Core.Sdk.Autoreloads.AutoreloadsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The balances property</summary>
        public Marqeta.Core.Sdk.Balances.BalancesRequestBuilder Balances
        {
            get => new Marqeta.Core.Sdk.Balances.BalancesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The banktransfers property</summary>
        public Marqeta.Core.Sdk.Banktransfers.BanktransfersRequestBuilder Banktransfers
        {
            get => new Marqeta.Core.Sdk.Banktransfers.BanktransfersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The bulkissuances property</summary>
        public Marqeta.Core.Sdk.Bulkissuances.BulkissuancesRequestBuilder Bulkissuances
        {
            get => new Marqeta.Core.Sdk.Bulkissuances.BulkissuancesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The bundles property</summary>
        public Marqeta.Core.Sdk.Bundles.BundlesRequestBuilder Bundles
        {
            get => new Marqeta.Core.Sdk.Bundles.BundlesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The businesses property</summary>
        public Marqeta.Core.Sdk.Businesses.BusinessesRequestBuilder Businesses
        {
            get => new Marqeta.Core.Sdk.Businesses.BusinessesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The businesstransitions property</summary>
        public Marqeta.Core.Sdk.Businesstransitions.BusinesstransitionsRequestBuilder Businesstransitions
        {
            get => new Marqeta.Core.Sdk.Businesstransitions.BusinesstransitionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cardgroups property</summary>
        public Marqeta.Core.Sdk.Cardgroups.CardgroupsRequestBuilder Cardgroups
        {
            get => new Marqeta.Core.Sdk.Cardgroups.CardgroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cardproducts property</summary>
        public Marqeta.Core.Sdk.Cardproducts.CardproductsRequestBuilder Cardproducts
        {
            get => new Marqeta.Core.Sdk.Cardproducts.CardproductsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cards property</summary>
        public Marqeta.Core.Sdk.Cards.CardsRequestBuilder Cards
        {
            get => new Marqeta.Core.Sdk.Cards.CardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cardtransitions property</summary>
        public Marqeta.Core.Sdk.Cardtransitions.CardtransitionsRequestBuilder Cardtransitions
        {
            get => new Marqeta.Core.Sdk.Cardtransitions.CardtransitionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The commandomodes property</summary>
        public Marqeta.Core.Sdk.Commandomodes.CommandomodesRequestBuilder Commandomodes
        {
            get => new Marqeta.Core.Sdk.Commandomodes.CommandomodesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The credit property</summary>
        public Marqeta.Core.Sdk.Credit.CreditRequestBuilder Credit
        {
            get => new Marqeta.Core.Sdk.Credit.CreditRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The depositaccounts property</summary>
        public Marqeta.Core.Sdk.Depositaccounts.DepositaccountsRequestBuilder Depositaccounts
        {
            get => new Marqeta.Core.Sdk.Depositaccounts.DepositaccountsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The digitalwalletprovisionrequests property</summary>
        public Marqeta.Core.Sdk.Digitalwalletprovisionrequests.DigitalwalletprovisionrequestsRequestBuilder Digitalwalletprovisionrequests
        {
            get => new Marqeta.Core.Sdk.Digitalwalletprovisionrequests.DigitalwalletprovisionrequestsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The digitalwallets property</summary>
        public Marqeta.Core.Sdk.Digitalwallets.DigitalwalletsRequestBuilder Digitalwallets
        {
            get => new Marqeta.Core.Sdk.Digitalwallets.DigitalwalletsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The digitalwallettokens property</summary>
        public Marqeta.Core.Sdk.Digitalwallettokens.DigitalwallettokensRequestBuilder Digitalwallettokens
        {
            get => new Marqeta.Core.Sdk.Digitalwallettokens.DigitalwallettokensRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The digitalwallettokentransitions property</summary>
        public Marqeta.Core.Sdk.Digitalwallettokentransitions.DigitalwallettokentransitionsRequestBuilder Digitalwallettokentransitions
        {
            get => new Marqeta.Core.Sdk.Digitalwallettokentransitions.DigitalwallettokentransitionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The directdeposits property</summary>
        public Marqeta.Core.Sdk.Directdeposits.DirectdepositsRequestBuilder Directdeposits
        {
            get => new Marqeta.Core.Sdk.Directdeposits.DirectdepositsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The feecharges property</summary>
        public Marqeta.Core.Sdk.Feecharges.FeechargesRequestBuilder Feecharges
        {
            get => new Marqeta.Core.Sdk.Feecharges.FeechargesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The feedback property</summary>
        public Marqeta.Core.Sdk.Feedback.FeedbackRequestBuilder Feedback
        {
            get => new Marqeta.Core.Sdk.Feedback.FeedbackRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The feerefunds property</summary>
        public Marqeta.Core.Sdk.Feerefunds.FeerefundsRequestBuilder Feerefunds
        {
            get => new Marqeta.Core.Sdk.Feerefunds.FeerefundsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The fees property</summary>
        public Marqeta.Core.Sdk.Fees.FeesRequestBuilder Fees
        {
            get => new Marqeta.Core.Sdk.Fees.FeesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The fundingsources property</summary>
        public Marqeta.Core.Sdk.Fundingsources.FundingsourcesRequestBuilder Fundingsources
        {
            get => new Marqeta.Core.Sdk.Fundingsources.FundingsourcesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The gpaorders property</summary>
        public Marqeta.Core.Sdk.Gpaorders.GpaordersRequestBuilder Gpaorders
        {
            get => new Marqeta.Core.Sdk.Gpaorders.GpaordersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The kyc property</summary>
        public Marqeta.Core.Sdk.Kyc.KycRequestBuilder Kyc
        {
            get => new Marqeta.Core.Sdk.Kyc.KycRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The mccgroups property</summary>
        public Marqeta.Core.Sdk.Mccgroups.MccgroupsRequestBuilder Mccgroups
        {
            get => new Marqeta.Core.Sdk.Mccgroups.MccgroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The merchantgroups property</summary>
        public Marqeta.Core.Sdk.Merchantgroups.MerchantgroupsRequestBuilder Merchantgroups
        {
            get => new Marqeta.Core.Sdk.Merchantgroups.MerchantgroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The paymentsources property</summary>
        public Marqeta.Core.Sdk.Paymentsources.PaymentsourcesRequestBuilder Paymentsources
        {
            get => new Marqeta.Core.Sdk.Paymentsources.PaymentsourcesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The peertransfers property</summary>
        public Marqeta.Core.Sdk.Peertransfers.PeertransfersRequestBuilder Peertransfers
        {
            get => new Marqeta.Core.Sdk.Peertransfers.PeertransfersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ping property</summary>
        public Marqeta.Core.Sdk.Ping.PingRequestBuilder Ping
        {
            get => new Marqeta.Core.Sdk.Ping.PingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The pins property</summary>
        public Marqeta.Core.Sdk.Pins.PinsRequestBuilder Pins
        {
            get => new Marqeta.Core.Sdk.Pins.PinsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The policies property</summary>
        public Marqeta.Core.Sdk.Policies.PoliciesRequestBuilder Policies
        {
            get => new Marqeta.Core.Sdk.Policies.PoliciesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The products property</summary>
        public Marqeta.Core.Sdk.Products.ProductsRequestBuilder Products
        {
            get => new Marqeta.Core.Sdk.Products.ProductsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The programgateways property</summary>
        public Marqeta.Core.Sdk.Programgateways.ProgramgatewaysRequestBuilder Programgateways
        {
            get => new Marqeta.Core.Sdk.Programgateways.ProgramgatewaysRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The programreserve property</summary>
        public Marqeta.Core.Sdk.Programreserve.ProgramreserveRequestBuilder Programreserve
        {
            get => new Marqeta.Core.Sdk.Programreserve.ProgramreserveRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The programtransfers property</summary>
        public Marqeta.Core.Sdk.Programtransfers.ProgramtransfersRequestBuilder Programtransfers
        {
            get => new Marqeta.Core.Sdk.Programtransfers.ProgramtransfersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The pushtocards property</summary>
        public Marqeta.Core.Sdk.Pushtocards.PushtocardsRequestBuilder Pushtocards
        {
            get => new Marqeta.Core.Sdk.Pushtocards.PushtocardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The realtimefeegroups property</summary>
        public Marqeta.Core.Sdk.Realtimefeegroups.RealtimefeegroupsRequestBuilder Realtimefeegroups
        {
            get => new Marqeta.Core.Sdk.Realtimefeegroups.RealtimefeegroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The rewardprograms property</summary>
        public Marqeta.Core.Sdk.Rewardprograms.RewardprogramsRequestBuilder Rewardprograms
        {
            get => new Marqeta.Core.Sdk.Rewardprograms.RewardprogramsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The simulate property</summary>
        public Marqeta.Core.Sdk.Simulate.SimulateRequestBuilder Simulate
        {
            get => new Marqeta.Core.Sdk.Simulate.SimulateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The substatuses property</summary>
        public Marqeta.Core.Sdk.Substatuses.SubstatusesRequestBuilder Substatuses
        {
            get => new Marqeta.Core.Sdk.Substatuses.SubstatusesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The transactions property</summary>
        public Marqeta.Core.Sdk.Transactions.TransactionsRequestBuilder Transactions
        {
            get => new Marqeta.Core.Sdk.Transactions.TransactionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The users property</summary>
        public Marqeta.Core.Sdk.Users.UsersRequestBuilder Users
        {
            get => new Marqeta.Core.Sdk.Users.UsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The usertransitions property</summary>
        public Marqeta.Core.Sdk.Usertransitions.UsertransitionsRequestBuilder Usertransitions
        {
            get => new Marqeta.Core.Sdk.Usertransitions.UsertransitionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The velocitycontrols property</summary>
        public Marqeta.Core.Sdk.Velocitycontrols.VelocitycontrolsRequestBuilder Velocitycontrols
        {
            get => new Marqeta.Core.Sdk.Velocitycontrols.VelocitycontrolsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The webhooks property</summary>
        public Marqeta.Core.Sdk.Webhooks.WebhooksRequestBuilder Webhooks
        {
            get => new Marqeta.Core.Sdk.Webhooks.WebhooksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="Marqeta.Core.Sdk.MarqetaClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public MarqetaClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextHtmlParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<CustomJsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
            if (string.IsNullOrEmpty(RequestAdapter.BaseUrl))
            {
                RequestAdapter.BaseUrl = "/v3";
            }
            PathParameters.TryAdd("baseurl", RequestAdapter.BaseUrl);
        }
    }
}
