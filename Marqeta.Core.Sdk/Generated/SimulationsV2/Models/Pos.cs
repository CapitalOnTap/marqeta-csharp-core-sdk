// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.SimulationsV2.Models
{
    /// <summary>
    /// Contains information about the point of sale, including details on how the card was presented.May be returned if the request uses Transaction Model v2 of the Marqeta Core API.Not returned for Transaction model v1 requests.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Pos : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Entry mode used for transaction.</summary>
        public global::Marqeta.Core.Sdk.SimulationsV2.Models.Pos_pan_entry_mode? PanEntryMode { get; set; }
        /// <summary>Whether the card acceptor or terminal is capable of partial approvals.</summary>
        public bool? PartialApprovalCapable { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.SimulationsV2.Models.Pos"/> and sets the default values.
        /// </summary>
        public Pos()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.SimulationsV2.Models.Pos"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.SimulationsV2.Models.Pos CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.SimulationsV2.Models.Pos();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "pan_entry_mode", n => { PanEntryMode = n.GetEnumValue<global::Marqeta.Core.Sdk.SimulationsV2.Models.Pos_pan_entry_mode>(); } },
                { "partial_approval_capable", n => { PartialApprovalCapable = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.SimulationsV2.Models.Pos_pan_entry_mode>("pan_entry_mode", PanEntryMode);
            writer.WriteBoolValue("partial_approval_capable", PartialApprovalCapable);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
