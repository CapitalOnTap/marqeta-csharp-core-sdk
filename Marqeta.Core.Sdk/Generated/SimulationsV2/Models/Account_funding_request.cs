// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.SimulationsV2.Models
{
    /// <summary>
    /// Information used when funding an account.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Account_funding_request : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Account holder&apos;s first name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>Describes the source of the funding.</summary>
        public global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request_funding_source? FundingSource { get; set; }
        /// <summary>Account holder&apos;s last name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>Identifies the account type used for the funding request.</summary>
        public global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request_receiver_account_type? ReceiverAccountType { get; set; }
        /// <summary>Recipient&apos;s name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReceiverName { get; set; }
#nullable restore
#else
        public string ReceiverName { get; set; }
#endif
        /// <summary>Identifies the purpose of the transaction.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TransactionPurpose { get; set; }
#nullable restore
#else
        public string TransactionPurpose { get; set; }
#endif
        /// <summary>Describes the type of transaction.</summary>
        public global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request_transaction_type? TransactionType { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request"/> and sets the default values.
        /// </summary>
        public Account_funding_request()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "first_name", n => { FirstName = n.GetStringValue(); } },
                { "funding_source", n => { FundingSource = n.GetEnumValue<global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request_funding_source>(); } },
                { "last_name", n => { LastName = n.GetStringValue(); } },
                { "receiver_account_type", n => { ReceiverAccountType = n.GetEnumValue<global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request_receiver_account_type>(); } },
                { "receiver_name", n => { ReceiverName = n.GetStringValue(); } },
                { "transaction_purpose", n => { TransactionPurpose = n.GetStringValue(); } },
                { "transaction_type", n => { TransactionType = n.GetEnumValue<global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request_transaction_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("first_name", FirstName);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request_funding_source>("funding_source", FundingSource);
            writer.WriteStringValue("last_name", LastName);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request_receiver_account_type>("receiver_account_type", ReceiverAccountType);
            writer.WriteStringValue("receiver_name", ReceiverName);
            writer.WriteStringValue("transaction_purpose", TransactionPurpose);
            writer.WriteEnumValue<global::Marqeta.Core.Sdk.SimulationsV2.Models.Account_funding_request_transaction_type>("transaction_type", TransactionType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
