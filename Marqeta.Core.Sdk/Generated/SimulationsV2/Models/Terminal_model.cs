// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Marqeta.Core.Sdk.SimulationsV2.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Terminal_model : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cardholder_presence property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardholderPresence { get; set; }
#nullable restore
#else
        public string CardholderPresence { get; set; }
#endif
        /// <summary>The card_presence property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CardPresence { get; set; }
#nullable restore
#else
        public string CardPresence { get; set; }
#endif
        /// <summary>The channel property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Channel { get; set; }
#nullable restore
#else
        public string Channel { get; set; }
#endif
        /// <summary>The partial_approval_capable property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PartialApprovalCapable { get; set; }
#nullable restore
#else
        public string PartialApprovalCapable { get; set; }
#endif
        /// <summary>The pin_present property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PinPresent { get; set; }
#nullable restore
#else
        public string PinPresent { get; set; }
#endif
        /// <summary>The processing_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProcessingType { get; set; }
#nullable restore
#else
        public string ProcessingType { get; set; }
#endif
        /// <summary>The tid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Tid { get; set; }
#nullable restore
#else
        public string Tid { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Marqeta.Core.Sdk.SimulationsV2.Models.Terminal_model"/> and sets the default values.
        /// </summary>
        public Terminal_model()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Marqeta.Core.Sdk.SimulationsV2.Models.Terminal_model"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Marqeta.Core.Sdk.SimulationsV2.Models.Terminal_model CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Marqeta.Core.Sdk.SimulationsV2.Models.Terminal_model();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "card_presence", n => { CardPresence = n.GetStringValue(); } },
                { "cardholder_presence", n => { CardholderPresence = n.GetStringValue(); } },
                { "channel", n => { Channel = n.GetStringValue(); } },
                { "partial_approval_capable", n => { PartialApprovalCapable = n.GetStringValue(); } },
                { "pin_present", n => { PinPresent = n.GetStringValue(); } },
                { "processing_type", n => { ProcessingType = n.GetStringValue(); } },
                { "tid", n => { Tid = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("cardholder_presence", CardholderPresence);
            writer.WriteStringValue("card_presence", CardPresence);
            writer.WriteStringValue("channel", Channel);
            writer.WriteStringValue("partial_approval_capable", PartialApprovalCapable);
            writer.WriteStringValue("pin_present", PinPresent);
            writer.WriteStringValue("processing_type", ProcessingType);
            writer.WriteStringValue("tid", Tid);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
